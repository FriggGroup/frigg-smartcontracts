{
	"id": "59bd0e3b7cd4c6252ae21f6e710942a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Router/primaryRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '../Token/IFrigg.sol';\nimport '@openzeppelin/contracts/token/ERC1155/IERC1155.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/access/IAccessControl.sol';\nimport '@openzeppelin/contracts/access/AccessControl.sol';\n\n/// @title A router contract for primary market activity for Frigg Asset-backed Tokens (ABT)\n/// @author Frigg team\n/// @dev inherits from the OpenZepplin AccessControl\ncontract primaryRouter is AccessControl {\n\n    /*\n    ** Establish access control logic for this router\n    */\n\n    /// @dev set DEFAULT_ADMIN_ROLE to a multisig address controlled by Frigg\n    /// @dev DEFAULT_ADMIN_ROLE is defined within OZ's AccessControl\n    constructor(address _multisig) \n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, _multisig);\n    }\n\n    /// @notice allow micrsite front-end to listen to events and show recent primary market activity \n    event SuccessfulPurchase (address indexed _buyer, address _friggTokenAddress, uint256 _amount);\n    event SuccessfulExpiration (address indexed _seller, address _friggTokenAddress, uint256 _amount);\n\n    /*\n    ** Add Frigg issued tokens to this router\n    */\n\n    mapping(address => TokenData) public tokenData;\n\n    /// @notice TokenData \n    /// @dev USDC-denominated price is always 6 decimals\n    struct TokenData { \n        address issuer; //address of the token issuer\n        address uIdContract; //address of User ID contracts accepted for this issuance\n        uint256 issuancePrice; // price = (1 * 10^18) / (USD * 10^6) e.g., 100USD = 10^18/10^8\n        uint256 expiryPrice; // price = (1/(expirydigit) * 10^18) / (USD * 10^6) e.g., 200USD = 10^18/20^8\n        address issuanceTokenAddress; //address of token accepted as a denominated token e.g. USDC\n    }\n\n    /**\n     * @dev only allows DEFAULT_ADMIN_ROLE to add Frigg-issued tokens to this router\n     * @param _outputTokenAddress Frigg-issued token address\n     * @param _uIdContract Whitelister contract address\n     * @param _issuer Issuer address to receive issuance proceeds\n     * @param _issuancePrice Price of token at issuance\n     * @param _expiryPrice Price of token at expiry date\n     * @param _issuanceTokenAddress Address of Accepted token to purchase Frigg-issued token \n     */\n\n    function add(\n        address _outputTokenAddress,\n        address _uIdContract,\n        address _issuer,\n        uint256 _issuancePrice,\n        uint256 _expiryPrice,\n        address _issuanceTokenAddress\n        ) \n        external\n        onlyRole(DEFAULT_ADMIN_ROLE) \n        {\n        IAccessControl outputToken = IAccessControl(_outputTokenAddress);\n\n        //bytes32 DEFAULT_ADMIN_ROLE = 0x00;\n\n        //require only admin of the Frigg-issued token can add token to router\n        require(outputToken.hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"only admins and only Frigg-issued tokens can be added the token to this router\");\n        tokenData[_outputTokenAddress]=TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress);\n        }\n\n    /*  \n    ** Buy and Sell widget logic for primary market\n    */\n\n    /**\n    * @param friggTokenAddress Frigg-issued token address\n    * @param inputTokenAmount amount of tokens spent to buy Frigg-issued token\n    * @dev initially users can only buy Frigg-issued asset backed tokens with USDC\n    * i.e. inputToken is USDC and outputToken is the ABT\n    * @dev inputTokenAmount should be in the same number of decimals as issuanceTokenAddress implemented\n    */\n\n    function buy(address friggTokenAddress, uint256 inputTokenAmount) external {\n            require(inputTokenAmount > 0, \"You cannot buy with 0 token\");\n\n            //check for user balance of UID\n            require(IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0, \"Need a UID token\");\n\n            //call Gat\n\n            IERC20 inputToken = IERC20(tokenData[friggTokenAddress].issuanceTokenAddress);\n            IFrigg outputToken = IFrigg(friggTokenAddress);\n\n            //check that primary market is active\n            require(outputToken.isPrimaryMarketActive());\n\n            inputToken.transferFrom(\n                msg.sender,\n                tokenData[friggTokenAddress].issuer,\n                inputTokenAmount\n                );\n            \n            //if inputTokenAmount is 1 USDC * 10^6, outputTokenAmount is 1 ATT * 10^18, issuancePrice is 1 ATT:1 USDC * 10^12\n            uint256 outputTokenAmount = inputTokenAmount * tokenData[friggTokenAddress].issuancePrice;\n\n            outputToken.mint(msg.sender, outputTokenAmount);\n            \n            emit SuccessfulPurchase(msg.sender, friggTokenAddress, inputTokenAmount);\n        }\n\n    /**\n     * @notice At token expiry, token holders sell back tokens to issuers\n     * @notice Token holders redeem the value of token at expiry\n     * @param friggTokenAddress Frigg-issued token address\n     * @param inputFriggTokenAmount amount of Frigg tokens for sale\n     * i.e. inputToken is ABT and outputToken is USDC\n     * @dev inputFriggTokenAmount should be in 18 decimals\n     */\n\n    function sell(address friggTokenAddress, uint256 inputFriggTokenAmount) external {\n            require(inputFriggTokenAmount > 0, \"You cannot sell 0 token\");\n            require(IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0, \"Need a UID token\");\n\n            IFrigg inputToken = IFrigg(friggTokenAddress);\n            IERC20 outputToken = IERC20(tokenData[friggTokenAddress].issuanceTokenAddress);\n\n            require(inputToken.seeBondExpiryStatus());\n\n            inputToken.burn(\n                msg.sender,\n                inputFriggTokenAmount\n                );\n            \n            //if inputFriggTokenAmount is 1 ATT * 10^18, expiryPrice is 1.5 USDC : 1 ATT * 10^12, outputTokenAmount is 1.5 USDC * 10^6\n            uint256 outputTokenAmount = inputFriggTokenAmount / tokenData[friggTokenAddress].expiryPrice;\n\n            //Issuer SC address should give approval to router to transfer USDC to msg.sender prior to bond expiry\n            outputToken.transferFrom(\n                tokenData[friggTokenAddress].issuer, \n                msg.sender,\n                outputTokenAmount\n                );\n            \n            emit SuccessfulExpiration(msg.sender, friggTokenAddress, inputFriggTokenAmount);\n        }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"contracts/Token/IFrigg.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/*\n* This interface is specific for Frigg-implemented tokens \n*/\n\ninterface IFrigg {\n    /**\n    * @dev returns if primary market is opened.\n    */\n    function isPrimaryMarketActive() external view returns (bool);\n\n    /**\n    * @dev returns if the bond has expired and the issuer starts to conduct buyback.\n    */\n    function seeBondExpiryStatus() external view returns (bool);\n\n    /**\n     * @dev for primaryRouter.sol to conduct primary buy logic at issuance\n     */\n\n    function mint(address account, uint256 amount) external;\n\n    /**\n     * @dev for primaryRouter.sol to conduct primary sell logic at expiry\n     */\n\n    function burn(address account, uint256 amount) external;\n\n    /**\n     * @dev a getter function for dApps or third parties to fetch the terms and conditions \n     */\n    function termsURL() external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207c8078713d2a9520de6b447cb58189e71a954a96290fafe40aa48d9652d6255164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c8078713d2a9520de6b447cb58189e71a954a96290fafe40aa48d9652d6255164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x8078713D2A9520DE6B447CB58189E71A954A96290FAFE40AA48D9652D6 0x25 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207c8078713d2a9520de6b447cb58189e71a954a96290fafe40aa48d9652d6255164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0x8078713D2A9520DE6B447CB58189E71A954A96290FAFE40AA48D9652D6 0x25 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "161:2235:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207c8078713d2a9520de6b447cb58189e71a954a96290fafe40aa48d9652d6255164736f6c63430008070033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Router/primaryRouter.sol": {
				"primaryRouter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_multisig",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_friggTokenAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SuccessfulExpiration",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_friggTokenAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "SuccessfulPurchase",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_outputTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uIdContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_issuancePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_expiryPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_issuanceTokenAddress",
									"type": "address"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "friggTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "inputTokenAmount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "friggTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "inputFriggTokenAmount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenData",
							"outputs": [
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "uIdContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "issuancePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiryPrice",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuanceTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Frigg team",
						"details": "inherits from the OpenZepplin AccessControl",
						"kind": "dev",
						"methods": {
							"add(address,address,address,uint256,uint256,address)": {
								"details": "only allows DEFAULT_ADMIN_ROLE to add Frigg-issued tokens to this router",
								"params": {
									"_expiryPrice": "Price of token at expiry date",
									"_issuancePrice": "Price of token at issuance",
									"_issuanceTokenAddress": "Address of Accepted token to purchase Frigg-issued token ",
									"_issuer": "Issuer address to receive issuance proceeds",
									"_outputTokenAddress": "Frigg-issued token address",
									"_uIdContract": "Whitelister contract address"
								}
							},
							"buy(address,uint256)": {
								"details": "initially users can only buy Frigg-issued asset backed tokens with USDC i.e. inputToken is USDC and outputToken is the ABTinputTokenAmount should be in the same number of decimals as issuanceTokenAddress implemented",
								"params": {
									"friggTokenAddress": "Frigg-issued token address",
									"inputTokenAmount": "amount of tokens spent to buy Frigg-issued token"
								}
							},
							"constructor": {
								"details": "set DEFAULT_ADMIN_ROLE to a multisig address controlled by FriggDEFAULT_ADMIN_ROLE is defined within OZ's AccessControl"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"sell(address,uint256)": {
								"details": "inputFriggTokenAmount should be in 18 decimals",
								"params": {
									"friggTokenAddress": "Frigg-issued token address",
									"inputFriggTokenAmount": "amount of Frigg tokens for sale i.e. inputToken is ABT and outputToken is USDC"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "A router contract for primary market activity for Frigg Asset-backed Tokens (ABT)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Router/primaryRouter.sol\":494:6417  contract primaryRouter is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Router/primaryRouter.sol\":757:851  constructor(address _multisig) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Router/primaryRouter.sol\":803:844  _grantRole(DEFAULT_ADMIN_ROLE, _multisig) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/Router/primaryRouter.sol\":814:832  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/Router/primaryRouter.sol\":834:843  _multisig */\n  dup3\n    /* \"contracts/Router/primaryRouter.sol\":803:813  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/Router/primaryRouter.sol\":803:844  _grantRole(DEFAULT_ADMIN_ROLE, _multisig) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/Router/primaryRouter.sol\":757:851  constructor(address _multisig) ... */\n  pop\n    /* \"contracts/Router/primaryRouter.sol\":494:6417  contract primaryRouter is AccessControl {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7565:7569  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7571:7578  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7564  hasRole */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7606  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7615  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7616:7623  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7687  _msgSender */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":243:362   */\ntag_23:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_26\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_29:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_31\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_32:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_25:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_21:\n    /* \"#utility.yul\":1147:1171   */\n  tag_38\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_29\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_39:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/Router/primaryRouter.sol\":494:6417  contract primaryRouter is AccessControl {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Router/primaryRouter.sol\":494:6417  contract primaryRouter is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4cbe36ce\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x4cbe36ce\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6c197ff5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcce7ec13\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x27e45c2c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Router/primaryRouter.sol\":1224:1270  mapping(address => TokenData) public tokenData */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Router/primaryRouter.sol\":2326:3095  function add(... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/Router/primaryRouter.sol\":5155:6415  function sell(address friggTokenAddress, uint256 inputFriggTokenAmount) external {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_10:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Router/primaryRouter.sol\":3568:4753  function buy(address friggTokenAddress, uint256 inputTokenAmount) external {... */\n    tag_12:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_62\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_63\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_64\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4465:4472  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4497  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4498:4502  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4503  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4491:4513  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4484:4513  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4391:4520  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Router/primaryRouter.sol\":1224:1270  mapping(address => TokenData) public tokenData */\n    tag_30:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4917  getRoleAdmin(role) */\n      tag_66\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4912:4916  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4911  getRoleAdmin */\n      tag_24\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4917  getRoleAdmin(role) */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      tag_71\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4940:4944  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4946:4953  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4939  _grantRole */\n      tag_72\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:4954  _grantRole(role, account) */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4816:4961  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6043  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6041  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6031:6043  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6027  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6020:6043  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6012:6095  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6118:6122  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6124:6131  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6117  _revokeRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6106:6132  _revokeRole(role, account) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5925:6139  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Router/primaryRouter.sol\":2326:3095  function add(... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":2577:2595  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/Router/primaryRouter.sol\":2616:2642  IAccessControl outputToken */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":2660:2679  _outputTokenAddress */\n      dup8\n        /* \"contracts/Router/primaryRouter.sol\":2616:2680  IAccessControl outputToken = IAccessControl(_outputTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":2824:2835  outputToken */\n      dup1\n        /* \"contracts/Router/primaryRouter.sol\":2824:2843  outputToken.hasRole */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x91d14854\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":2844:2862  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/Router/primaryRouter.sol\":2864:2874  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":2824:2875  outputToken.hasRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/Router/primaryRouter.sol\":2816:2958  require(outputToken.hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"only admins and only Frigg-issued tokens can be added the token to this router\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Router/primaryRouter.sol\":3009:3016  _issuer */\n      dup8\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Router/primaryRouter.sol\":3018:3030  _uIdContract */\n      dup9\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Router/primaryRouter.sol\":3032:3046  _issuancePrice */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Router/primaryRouter.sol\":3048:3060  _expiryPrice */\n      dup6\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Router/primaryRouter.sol\":3062:3083  _issuanceTokenAddress */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":2999:3084  TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":2968:2977  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":2968:2998  tokenData[_outputTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":2978:2997  _outputTokenAddress */\n      dup11\n        /* \"contracts/Router/primaryRouter.sol\":2968:2998  tokenData[_outputTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":2968:3084  tokenData[_outputTokenAddress]=TokenData(_issuer, _uIdContract, _issuancePrice, _expiryPrice, _issuanceTokenAddress) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":2606:3095  {... */\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":2326:3095  function add(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Router/primaryRouter.sol\":5155:6415  function sell(address friggTokenAddress, uint256 inputFriggTokenAmount) external {... */\n    tag_47:\n        /* \"contracts/Router/primaryRouter.sol\":5282:5283  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5258:5279  inputFriggTokenAmount */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":5258:5283  inputFriggTokenAmount > 0 */\n      gt\n        /* \"contracts/Router/primaryRouter.sol\":5250:5311  require(inputFriggTokenAmount > 0, \"You cannot sell 0 token\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/Router/primaryRouter.sol\":5410:5411  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5342:5351  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":5342:5370  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5352:5369  friggTokenAddress */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":5342:5370  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":5342:5382  tokenData[friggTokenAddress].uIdContract */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":5333:5393  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"contracts/Router/primaryRouter.sol\":5394:5404  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":5405:5406  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5333:5407  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/Router/primaryRouter.sol\":5333:5411  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0 */\n      gt\n        /* \"contracts/Router/primaryRouter.sol\":5325:5432  require(IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0, \"Need a UID token\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Router/primaryRouter.sol\":5447:5464  IFrigg inputToken */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5474:5491  friggTokenAddress */\n      dup3\n        /* \"contracts/Router/primaryRouter.sol\":5447:5492  IFrigg inputToken = IFrigg(friggTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":5506:5524  IERC20 outputToken */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5534:5543  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":5534:5562  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5544:5561  friggTokenAddress */\n      dup6\n        /* \"contracts/Router/primaryRouter.sol\":5534:5562  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":5534:5583  tokenData[friggTokenAddress].issuanceTokenAddress */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":5506:5584  IERC20 outputToken = IERC20(tokenData[friggTokenAddress].issuanceTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":5607:5617  inputToken */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":5607:5637  inputToken.seeBondExpiryStatus */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8058425b\n        /* \"contracts/Router/primaryRouter.sol\":5607:5639  inputToken.seeBondExpiryStatus() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_111:\n        /* \"contracts/Router/primaryRouter.sol\":5599:5640  require(inputToken.seeBondExpiryStatus()) */\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n        /* \"contracts/Router/primaryRouter.sol\":5655:5665  inputToken */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":5655:5670  inputToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9dc29fac\n        /* \"contracts/Router/primaryRouter.sol\":5688:5698  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":5716:5737  inputFriggTokenAmount */\n      dup6\n        /* \"contracts/Router/primaryRouter.sol\":5655:5755  inputToken.burn(... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":5917:5942  uint256 outputTokenAmount */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5969:5978  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":5969:5997  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":5979:5996  friggTokenAddress */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":5969:5997  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":5969:6009  tokenData[friggTokenAddress].expiryPrice */\n      0x03\n      add\n      sload\n        /* \"contracts/Router/primaryRouter.sol\":5945:5966  inputFriggTokenAmount */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":5945:6009  inputFriggTokenAmount / tokenData[friggTokenAddress].expiryPrice */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/Router/primaryRouter.sol\":5917:6009  uint256 outputTokenAmount = inputFriggTokenAmount / tokenData[friggTokenAddress].expiryPrice */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":6139:6150  outputToken */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":6139:6163  outputToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Router/primaryRouter.sol\":6181:6190  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":6181:6209  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":6191:6208  friggTokenAddress */\n      dup9\n        /* \"contracts/Router/primaryRouter.sol\":6181:6209  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":6181:6216  tokenData[friggTokenAddress].issuer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":6235:6245  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":6263:6280  outputTokenAmount */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":6139:6298  outputToken.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_125:\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":6351:6361  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":6330:6404  SuccessfulExpiration(msg.sender, friggTokenAddress, inputFriggTokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x165e50ed3a693f2ff4dcc70a4835f65ce8e0fbb700ba9c2ddb0aa07e06fa479e\n        /* \"contracts/Router/primaryRouter.sol\":6363:6380  friggTokenAddress */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":6382:6403  inputFriggTokenAmount */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":6330:6404  SuccessfulExpiration(msg.sender, friggTokenAddress, inputFriggTokenAmount) */\n      mload(0x40)\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Router/primaryRouter.sol\":5236:6415  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":5155:6415  function sell(address friggTokenAddress, uint256 inputFriggTokenAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/Router/primaryRouter.sol\":3568:4753  function buy(address friggTokenAddress, uint256 inputTokenAmount) external {... */\n    tag_57:\n        /* \"contracts/Router/primaryRouter.sol\":3684:3685  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3665:3681  inputTokenAmount */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":3665:3685  inputTokenAmount > 0 */\n      gt\n        /* \"contracts/Router/primaryRouter.sol\":3657:3717  require(inputTokenAmount > 0, \"You cannot buy with 0 token\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"contracts/Router/primaryRouter.sol\":3861:3862  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3793:3802  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":3793:3821  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3803:3820  friggTokenAddress */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":3793:3821  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":3793:3833  tokenData[friggTokenAddress].uIdContract */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":3784:3844  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"contracts/Router/primaryRouter.sol\":3845:3855  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":3856:3857  0 */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3784:3858  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_136:\n        /* \"contracts/Router/primaryRouter.sol\":3784:3862  IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0 */\n      gt\n        /* \"contracts/Router/primaryRouter.sol\":3776:3883  require(IERC1155(tokenData[friggTokenAddress].uIdContract).balanceOf(msg.sender,0) > 0, \"Need a UID token\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_107\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/Router/primaryRouter.sol\":3922:3939  IERC20 inputToken */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3949:3958  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":3949:3977  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":3959:3976  friggTokenAddress */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":3949:3977  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":3949:3998  tokenData[friggTokenAddress].issuanceTokenAddress */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":3922:3999  IERC20 inputToken = IERC20(tokenData[friggTokenAddress].issuanceTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":4013:4031  IFrigg outputToken */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":4041:4058  friggTokenAddress */\n      dup4\n        /* \"contracts/Router/primaryRouter.sol\":4013:4059  IFrigg outputToken = IFrigg(friggTokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":4132:4143  outputToken */\n      dup1\n        /* \"contracts/Router/primaryRouter.sol\":4132:4165  outputToken.isPrimaryMarketActive */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e873bac\n        /* \"contracts/Router/primaryRouter.sol\":4132:4167  outputToken.isPrimaryMarketActive() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_142:\n        /* \"contracts/Router/primaryRouter.sol\":4124:4168  require(outputToken.isPrimaryMarketActive()) */\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n        /* \"contracts/Router/primaryRouter.sol\":4183:4193  inputToken */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":4183:4206  inputToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Router/primaryRouter.sol\":4224:4234  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":4252:4261  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":4252:4280  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":4262:4279  friggTokenAddress */\n      dup9\n        /* \"contracts/Router/primaryRouter.sol\":4252:4280  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":4252:4287  tokenData[friggTokenAddress].issuer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Router/primaryRouter.sol\":4305:4321  inputTokenAmount */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":4183:4339  inputToken.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":4492:4517  uint256 outputTokenAmount */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":4539:4548  tokenData */\n      0x01\n        /* \"contracts/Router/primaryRouter.sol\":4539:4567  tokenData[friggTokenAddress] */\n      0x00\n        /* \"contracts/Router/primaryRouter.sol\":4549:4566  friggTokenAddress */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":4539:4567  tokenData[friggTokenAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Router/primaryRouter.sol\":4539:4581  tokenData[friggTokenAddress].issuancePrice */\n      0x02\n      add\n      sload\n        /* \"contracts/Router/primaryRouter.sol\":4520:4536  inputTokenAmount */\n      dup5\n        /* \"contracts/Router/primaryRouter.sol\":4520:4581  inputTokenAmount * tokenData[friggTokenAddress].issuancePrice */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/Router/primaryRouter.sol\":4492:4581  uint256 outputTokenAmount = inputTokenAmount * tokenData[friggTokenAddress].issuancePrice */\n      swap1\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":4596:4607  outputToken */\n      dup2\n        /* \"contracts/Router/primaryRouter.sol\":4596:4612  outputToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/Router/primaryRouter.sol\":4613:4623  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":4625:4642  outputTokenAmount */\n      dup4\n        /* \"contracts/Router/primaryRouter.sol\":4596:4643  outputToken.mint(msg.sender, outputTokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_151:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":4694:4704  msg.sender */\n      caller\n        /* \"contracts/Router/primaryRouter.sol\":4675:4742  SuccessfulPurchase(msg.sender, friggTokenAddress, inputTokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc676e61b1e79d2fb537a623c39c425429b06c3309e0f79e72ac1dccc697031b5\n        /* \"contracts/Router/primaryRouter.sol\":4706:4723  friggTokenAddress */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":4725:4741  inputTokenAmount */\n      dup7\n        /* \"contracts/Router/primaryRouter.sol\":4675:4742  SuccessfulPurchase(msg.sender, friggTokenAddress, inputTokenAmount) */\n      mload(0x40)\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Router/primaryRouter.sol\":3643:4753  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Router/primaryRouter.sol\":3568:4753  function buy(address friggTokenAddress, uint256 inputTokenAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5343  getRoleAdmin(role) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5338:5342  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5337  getRoleAdmin */\n      tag_24\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5343  getRoleAdmin(role) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5367:5371  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5373:5380  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5366  _revokeRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5355:5381  _revokeRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5241:5388  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7565:7569  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7571:7578  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7564  hasRole */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7557:7579  hasRole(role, account) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7627:7631  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7601  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7602:7606  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7607  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7615  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7616:7623  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7624  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7595:7631  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7687  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7677:7689  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7668:7675  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7662:7666  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7650:7690  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7701  if (!hasRole(role, account)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7474:7707  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7969:7973  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7975:7982  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7968  hasRole */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7961:7983  hasRole(role, account) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7957:8106  if (hasRole(role, account)) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8031:8036  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8005  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8006:8010  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8011  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8019  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8028  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8020:8027  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8028  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7999:8036  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8094  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8092  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8094  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8073:8080  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8067:8071  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8055:8095  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7957:8106  if (hasRole(role, account)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7878:8112  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_50\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      tag_178\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4017:4024  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4027:4029  20 */\n      0x14\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4030  Strings.toHexString(uint160(account), 20) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4129:4133  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4121:4134  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4136:4138  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4120  Strings.toHexString */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4101:4139  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4161  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4193  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4204  if (!hasRole(role, account)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4210  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1727:1740  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1771  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1797:1798  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1788:1794  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1785  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1794  2 * length */\n      tag_186\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1784:1798  2 * length + 2 */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1774:1799  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_191\n      jump\t// in\n    tag_190:\n    tag_189:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_192:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1752:1799  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1815  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1816:1817  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1818  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_194\n      tag_195\n      jump\t// in\n    tag_194:\n    tag_193:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1809:1824  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1840  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1841:1842  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1843  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_195\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1834:1849  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1873  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1889:1890  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1880:1886  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1877  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1886  2 * length */\n      tag_201\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1876:1890  2 * length + 1 */\n      tag_202\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1864:1890  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1896:1897  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1893  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1892:1897  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1930:1942  _HEX_SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1951:1954  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1948  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1943:1954  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1930:1955  _HEX_SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_195\n      jump\t// in\n    tag_204:\n    tag_203:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1924  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1925:1926  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1927  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_205\n      jumpi\n      tag_206\n      tag_195\n      jump\t// in\n    tag_206:\n    tag_205:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1955  buffer[i] = _HEX_SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1979:1980  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1969:1980  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1899:1902  --i */\n      dup1\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1859:1991  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_198)\n    tag_199:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2017:2018  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2008:2013  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2008:2018  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2055  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2079:2085  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2086  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1652:2093  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_213:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_215\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_217:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_219\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_221:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_223\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:577   */\n    tag_225:\n        /* \"#utility.yul\":485:490   */\n      0x00\n        /* \"#utility.yul\":523:529   */\n      dup2\n        /* \"#utility.yul\":510:530   */\n      calldataload\n        /* \"#utility.yul\":501:530   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:571   */\n      tag_227\n        /* \"#utility.yul\":565:570   */\n      dup2\n        /* \"#utility.yul\":539:571   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":440:577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":583:722   */\n    tag_229:\n        /* \"#utility.yul\":629:634   */\n      0x00\n        /* \"#utility.yul\":667:673   */\n      dup2\n        /* \"#utility.yul\":654:674   */\n      calldataload\n        /* \"#utility.yul\":645:674   */\n      swap1\n      pop\n        /* \"#utility.yul\":683:716   */\n      tag_231\n        /* \"#utility.yul\":710:715   */\n      dup2\n        /* \"#utility.yul\":683:716   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":583:722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:871   */\n    tag_233:\n        /* \"#utility.yul\":785:790   */\n      0x00\n        /* \"#utility.yul\":816:822   */\n      dup2\n        /* \"#utility.yul\":810:823   */\n      mload\n        /* \"#utility.yul\":801:823   */\n      swap1\n      pop\n        /* \"#utility.yul\":832:865   */\n      tag_235\n        /* \"#utility.yul\":859:864   */\n      dup2\n        /* \"#utility.yul\":832:865   */\n      tag_232\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":728:871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":877:1206   */\n    tag_29:\n        /* \"#utility.yul\":936:942   */\n      0x00\n        /* \"#utility.yul\":985:987   */\n      0x20\n        /* \"#utility.yul\":973:982   */\n      dup3\n        /* \"#utility.yul\":964:971   */\n      dup5\n        /* \"#utility.yul\":960:983   */\n      sub\n        /* \"#utility.yul\":956:988   */\n      slt\n        /* \"#utility.yul\":953:1072   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":991:1070   */\n      tag_238\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":953:1072   */\n    tag_237:\n        /* \"#utility.yul\":1111:1112   */\n      0x00\n        /* \"#utility.yul\":1136:1189   */\n      tag_240\n        /* \"#utility.yul\":1181:1188   */\n      dup5\n        /* \"#utility.yul\":1172:1178   */\n      dup3\n        /* \"#utility.yul\":1161:1170   */\n      dup6\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1136:1189   */\n      tag_213\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1126:1189   */\n      swap2\n      pop\n        /* \"#utility.yul\":1082:1199   */\n      pop\n        /* \"#utility.yul\":877:1206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1212:2269   */\n    tag_42:\n        /* \"#utility.yul\":1316:1322   */\n      0x00\n        /* \"#utility.yul\":1324:1330   */\n      dup1\n        /* \"#utility.yul\":1332:1338   */\n      0x00\n        /* \"#utility.yul\":1340:1346   */\n      dup1\n        /* \"#utility.yul\":1348:1354   */\n      0x00\n        /* \"#utility.yul\":1356:1362   */\n      dup1\n        /* \"#utility.yul\":1405:1408   */\n      0xc0\n        /* \"#utility.yul\":1393:1402   */\n      dup8\n        /* \"#utility.yul\":1384:1391   */\n      dup10\n        /* \"#utility.yul\":1380:1403   */\n      sub\n        /* \"#utility.yul\":1376:1409   */\n      slt\n        /* \"#utility.yul\":1373:1493   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":1412:1491   */\n      tag_243\n      tag_239\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1373:1493   */\n    tag_242:\n        /* \"#utility.yul\":1532:1533   */\n      0x00\n        /* \"#utility.yul\":1557:1610   */\n      tag_244\n        /* \"#utility.yul\":1602:1609   */\n      dup10\n        /* \"#utility.yul\":1593:1599   */\n      dup3\n        /* \"#utility.yul\":1582:1591   */\n      dup11\n        /* \"#utility.yul\":1578:1600   */\n      add\n        /* \"#utility.yul\":1557:1610   */\n      tag_213\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1547:1610   */\n      swap7\n      pop\n        /* \"#utility.yul\":1503:1620   */\n      pop\n        /* \"#utility.yul\":1659:1661   */\n      0x20\n        /* \"#utility.yul\":1685:1738   */\n      tag_245\n        /* \"#utility.yul\":1730:1737   */\n      dup10\n        /* \"#utility.yul\":1721:1727   */\n      dup3\n        /* \"#utility.yul\":1710:1719   */\n      dup11\n        /* \"#utility.yul\":1706:1728   */\n      add\n        /* \"#utility.yul\":1685:1738   */\n      tag_213\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1675:1738   */\n      swap6\n      pop\n        /* \"#utility.yul\":1630:1748   */\n      pop\n        /* \"#utility.yul\":1787:1789   */\n      0x40\n        /* \"#utility.yul\":1813:1866   */\n      tag_246\n        /* \"#utility.yul\":1858:1865   */\n      dup10\n        /* \"#utility.yul\":1849:1855   */\n      dup3\n        /* \"#utility.yul\":1838:1847   */\n      dup11\n        /* \"#utility.yul\":1834:1856   */\n      add\n        /* \"#utility.yul\":1813:1866   */\n      tag_213\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1803:1866   */\n      swap5\n      pop\n        /* \"#utility.yul\":1758:1876   */\n      pop\n        /* \"#utility.yul\":1915:1917   */\n      0x60\n        /* \"#utility.yul\":1941:1994   */\n      tag_247\n        /* \"#utility.yul\":1986:1993   */\n      dup10\n        /* \"#utility.yul\":1977:1983   */\n      dup3\n        /* \"#utility.yul\":1966:1975   */\n      dup11\n        /* \"#utility.yul\":1962:1984   */\n      add\n        /* \"#utility.yul\":1941:1994   */\n      tag_229\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1931:1994   */\n      swap4\n      pop\n        /* \"#utility.yul\":1886:2004   */\n      pop\n        /* \"#utility.yul\":2043:2046   */\n      0x80\n        /* \"#utility.yul\":2070:2123   */\n      tag_248\n        /* \"#utility.yul\":2115:2122   */\n      dup10\n        /* \"#utility.yul\":2106:2112   */\n      dup3\n        /* \"#utility.yul\":2095:2104   */\n      dup11\n        /* \"#utility.yul\":2091:2113   */\n      add\n        /* \"#utility.yul\":2070:2123   */\n      tag_229\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2060:2123   */\n      swap3\n      pop\n        /* \"#utility.yul\":2014:2133   */\n      pop\n        /* \"#utility.yul\":2172:2175   */\n      0xa0\n        /* \"#utility.yul\":2199:2252   */\n      tag_249\n        /* \"#utility.yul\":2244:2251   */\n      dup10\n        /* \"#utility.yul\":2235:2241   */\n      dup3\n        /* \"#utility.yul\":2224:2233   */\n      dup11\n        /* \"#utility.yul\":2220:2242   */\n      add\n        /* \"#utility.yul\":2199:2252   */\n      tag_213\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2189:2252   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2262   */\n      pop\n        /* \"#utility.yul\":1212:2269   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2275:2749   */\n    tag_46:\n        /* \"#utility.yul\":2343:2349   */\n      0x00\n        /* \"#utility.yul\":2351:2357   */\n      dup1\n        /* \"#utility.yul\":2400:2402   */\n      0x40\n        /* \"#utility.yul\":2388:2397   */\n      dup4\n        /* \"#utility.yul\":2379:2386   */\n      dup6\n        /* \"#utility.yul\":2375:2398   */\n      sub\n        /* \"#utility.yul\":2371:2403   */\n      slt\n        /* \"#utility.yul\":2368:2487   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2406:2485   */\n      tag_252\n      tag_239\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2368:2487   */\n    tag_251:\n        /* \"#utility.yul\":2526:2527   */\n      0x00\n        /* \"#utility.yul\":2551:2604   */\n      tag_253\n        /* \"#utility.yul\":2596:2603   */\n      dup6\n        /* \"#utility.yul\":2587:2593   */\n      dup3\n        /* \"#utility.yul\":2576:2585   */\n      dup7\n        /* \"#utility.yul\":2572:2594   */\n      add\n        /* \"#utility.yul\":2551:2604   */\n      tag_213\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2541:2604   */\n      swap3\n      pop\n        /* \"#utility.yul\":2497:2614   */\n      pop\n        /* \"#utility.yul\":2653:2655   */\n      0x20\n        /* \"#utility.yul\":2679:2732   */\n      tag_254\n        /* \"#utility.yul\":2724:2731   */\n      dup6\n        /* \"#utility.yul\":2715:2721   */\n      dup3\n        /* \"#utility.yul\":2704:2713   */\n      dup7\n        /* \"#utility.yul\":2700:2722   */\n      add\n        /* \"#utility.yul\":2679:2732   */\n      tag_229\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2669:2732   */\n      swap2\n      pop\n        /* \"#utility.yul\":2624:2742   */\n      pop\n        /* \"#utility.yul\":2275:2749   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2755:3100   */\n    tag_90:\n        /* \"#utility.yul\":2822:2828   */\n      0x00\n        /* \"#utility.yul\":2871:2873   */\n      0x20\n        /* \"#utility.yul\":2859:2868   */\n      dup3\n        /* \"#utility.yul\":2850:2857   */\n      dup5\n        /* \"#utility.yul\":2846:2869   */\n      sub\n        /* \"#utility.yul\":2842:2874   */\n      slt\n        /* \"#utility.yul\":2839:2958   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2877:2956   */\n      tag_257\n      tag_239\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2839:2958   */\n    tag_256:\n        /* \"#utility.yul\":2997:2998   */\n      0x00\n        /* \"#utility.yul\":3022:3083   */\n      tag_258\n        /* \"#utility.yul\":3075:3082   */\n      dup5\n        /* \"#utility.yul\":3066:3072   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      dup6\n        /* \"#utility.yul\":3051:3073   */\n      add\n        /* \"#utility.yul\":3022:3083   */\n      tag_217\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3012:3083   */\n      swap2\n      pop\n        /* \"#utility.yul\":2968:3093   */\n      pop\n        /* \"#utility.yul\":2755:3100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3435   */\n    tag_23:\n        /* \"#utility.yul\":3165:3171   */\n      0x00\n        /* \"#utility.yul\":3214:3216   */\n      0x20\n        /* \"#utility.yul\":3202:3211   */\n      dup3\n        /* \"#utility.yul\":3193:3200   */\n      dup5\n        /* \"#utility.yul\":3189:3212   */\n      sub\n        /* \"#utility.yul\":3185:3217   */\n      slt\n        /* \"#utility.yul\":3182:3301   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3220:3299   */\n      tag_261\n      tag_239\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3182:3301   */\n    tag_260:\n        /* \"#utility.yul\":3340:3341   */\n      0x00\n        /* \"#utility.yul\":3365:3418   */\n      tag_262\n        /* \"#utility.yul\":3410:3417   */\n      dup5\n        /* \"#utility.yul\":3401:3407   */\n      dup3\n        /* \"#utility.yul\":3390:3399   */\n      dup6\n        /* \"#utility.yul\":3386:3408   */\n      add\n        /* \"#utility.yul\":3365:3418   */\n      tag_221\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3355:3418   */\n      swap2\n      pop\n        /* \"#utility.yul\":3311:3428   */\n      pop\n        /* \"#utility.yul\":3106:3435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3441:3915   */\n    tag_35:\n        /* \"#utility.yul\":3509:3515   */\n      0x00\n        /* \"#utility.yul\":3517:3523   */\n      dup1\n        /* \"#utility.yul\":3566:3568   */\n      0x40\n        /* \"#utility.yul\":3554:3563   */\n      dup4\n        /* \"#utility.yul\":3545:3552   */\n      dup6\n        /* \"#utility.yul\":3541:3564   */\n      sub\n        /* \"#utility.yul\":3537:3569   */\n      slt\n        /* \"#utility.yul\":3534:3653   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3572:3651   */\n      tag_265\n      tag_239\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3534:3653   */\n    tag_264:\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3717:3770   */\n      tag_266\n        /* \"#utility.yul\":3762:3769   */\n      dup6\n        /* \"#utility.yul\":3753:3759   */\n      dup3\n        /* \"#utility.yul\":3742:3751   */\n      dup7\n        /* \"#utility.yul\":3738:3760   */\n      add\n        /* \"#utility.yul\":3717:3770   */\n      tag_221\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3707:3770   */\n      swap3\n      pop\n        /* \"#utility.yul\":3663:3780   */\n      pop\n        /* \"#utility.yul\":3819:3821   */\n      0x20\n        /* \"#utility.yul\":3845:3898   */\n      tag_267\n        /* \"#utility.yul\":3890:3897   */\n      dup6\n        /* \"#utility.yul\":3881:3887   */\n      dup3\n        /* \"#utility.yul\":3870:3879   */\n      dup7\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3845:3898   */\n      tag_213\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3835:3898   */\n      swap2\n      pop\n        /* \"#utility.yul\":3790:3908   */\n      pop\n        /* \"#utility.yul\":3441:3915   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4248   */\n    tag_17:\n        /* \"#utility.yul\":3979:3985   */\n      0x00\n        /* \"#utility.yul\":4028:4030   */\n      0x20\n        /* \"#utility.yul\":4016:4025   */\n      dup3\n        /* \"#utility.yul\":4007:4014   */\n      dup5\n        /* \"#utility.yul\":4003:4026   */\n      sub\n        /* \"#utility.yul\":3999:4031   */\n      slt\n        /* \"#utility.yul\":3996:4115   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4034:4113   */\n      tag_270\n      tag_239\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3996:4115   */\n    tag_269:\n        /* \"#utility.yul\":4154:4155   */\n      0x00\n        /* \"#utility.yul\":4179:4231   */\n      tag_271\n        /* \"#utility.yul\":4223:4230   */\n      dup5\n        /* \"#utility.yul\":4214:4220   */\n      dup3\n        /* \"#utility.yul\":4203:4212   */\n      dup6\n        /* \"#utility.yul\":4199:4221   */\n      add\n        /* \"#utility.yul\":4179:4231   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4169:4231   */\n      swap2\n      pop\n        /* \"#utility.yul\":4125:4241   */\n      pop\n        /* \"#utility.yul\":3921:4248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4605   */\n    tag_104:\n        /* \"#utility.yul\":4324:4330   */\n      0x00\n        /* \"#utility.yul\":4373:4375   */\n      0x20\n        /* \"#utility.yul\":4361:4370   */\n      dup3\n        /* \"#utility.yul\":4352:4359   */\n      dup5\n        /* \"#utility.yul\":4348:4371   */\n      sub\n        /* \"#utility.yul\":4344:4376   */\n      slt\n        /* \"#utility.yul\":4341:4460   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4379:4458   */\n      tag_274\n      tag_239\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4341:4460   */\n    tag_273:\n        /* \"#utility.yul\":4499:4500   */\n      0x00\n        /* \"#utility.yul\":4524:4588   */\n      tag_275\n        /* \"#utility.yul\":4580:4587   */\n      dup5\n        /* \"#utility.yul\":4571:4577   */\n      dup3\n        /* \"#utility.yul\":4560:4569   */\n      dup6\n        /* \"#utility.yul\":4556:4578   */\n      add\n        /* \"#utility.yul\":4524:4588   */\n      tag_233\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4514:4588   */\n      swap2\n      pop\n        /* \"#utility.yul\":4470:4598   */\n      pop\n        /* \"#utility.yul\":4254:4605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4611:4729   */\n    tag_276:\n        /* \"#utility.yul\":4698:4722   */\n      tag_278\n        /* \"#utility.yul\":4716:4721   */\n      dup2\n        /* \"#utility.yul\":4698:4722   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4693:4696   */\n      dup3\n        /* \"#utility.yul\":4686:4723   */\n      mstore\n        /* \"#utility.yul\":4611:4729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4735:4844   */\n    tag_280:\n        /* \"#utility.yul\":4816:4837   */\n      tag_282\n        /* \"#utility.yul\":4831:4836   */\n      dup2\n        /* \"#utility.yul\":4816:4837   */\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4811:4814   */\n      dup3\n        /* \"#utility.yul\":4804:4838   */\n      mstore\n        /* \"#utility.yul\":4735:4844   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4850:4968   */\n    tag_284:\n        /* \"#utility.yul\":4937:4961   */\n      tag_286\n        /* \"#utility.yul\":4955:4960   */\n      dup2\n        /* \"#utility.yul\":4937:4961   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4932:4935   */\n      dup3\n        /* \"#utility.yul\":4925:4962   */\n      mstore\n        /* \"#utility.yul\":4850:4968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5121   */\n    tag_288:\n        /* \"#utility.yul\":5069:5114   */\n      tag_290\n        /* \"#utility.yul\":5108:5113   */\n      dup2\n        /* \"#utility.yul\":5069:5114   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5064:5067   */\n      dup3\n        /* \"#utility.yul\":5057:5115   */\n      mstore\n        /* \"#utility.yul\":4974:5121   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5127:5491   */\n    tag_292:\n        /* \"#utility.yul\":5215:5218   */\n      0x00\n        /* \"#utility.yul\":5243:5282   */\n      tag_294\n        /* \"#utility.yul\":5276:5281   */\n      dup3\n        /* \"#utility.yul\":5243:5282   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5298:5369   */\n      tag_296\n        /* \"#utility.yul\":5362:5368   */\n      dup2\n        /* \"#utility.yul\":5357:5360   */\n      dup6\n        /* \"#utility.yul\":5298:5369   */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":5291:5369   */\n      swap4\n      pop\n        /* \"#utility.yul\":5378:5430   */\n      tag_298\n        /* \"#utility.yul\":5423:5429   */\n      dup2\n        /* \"#utility.yul\":5418:5421   */\n      dup6\n        /* \"#utility.yul\":5411:5415   */\n      0x20\n        /* \"#utility.yul\":5404:5409   */\n      dup7\n        /* \"#utility.yul\":5400:5416   */\n      add\n        /* \"#utility.yul\":5378:5430   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5455:5484   */\n      tag_300\n        /* \"#utility.yul\":5477:5483   */\n      dup2\n        /* \"#utility.yul\":5455:5484   */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5450:5453   */\n      dup5\n        /* \"#utility.yul\":5446:5485   */\n      add\n        /* \"#utility.yul\":5439:5485   */\n      swap2\n      pop\n        /* \"#utility.yul\":5219:5491   */\n      pop\n        /* \"#utility.yul\":5127:5491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5497:5874   */\n    tag_302:\n        /* \"#utility.yul\":5603:5606   */\n      0x00\n        /* \"#utility.yul\":5631:5670   */\n      tag_304\n        /* \"#utility.yul\":5664:5669   */\n      dup3\n        /* \"#utility.yul\":5631:5670   */\n      tag_295\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5686:5775   */\n      tag_305\n        /* \"#utility.yul\":5768:5774   */\n      dup2\n        /* \"#utility.yul\":5763:5766   */\n      dup6\n        /* \"#utility.yul\":5686:5775   */\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5679:5775   */\n      swap4\n      pop\n        /* \"#utility.yul\":5784:5836   */\n      tag_307\n        /* \"#utility.yul\":5829:5835   */\n      dup2\n        /* \"#utility.yul\":5824:5827   */\n      dup6\n        /* \"#utility.yul\":5817:5821   */\n      0x20\n        /* \"#utility.yul\":5810:5815   */\n      dup7\n        /* \"#utility.yul\":5806:5822   */\n      add\n        /* \"#utility.yul\":5784:5836   */\n      tag_299\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5861:5867   */\n      dup1\n        /* \"#utility.yul\":5856:5859   */\n      dup5\n        /* \"#utility.yul\":5852:5868   */\n      add\n        /* \"#utility.yul\":5845:5868   */\n      swap2\n      pop\n        /* \"#utility.yul\":5607:5874   */\n      pop\n        /* \"#utility.yul\":5497:5874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5880:6246   */\n    tag_308:\n        /* \"#utility.yul\":6022:6025   */\n      0x00\n        /* \"#utility.yul\":6043:6110   */\n      tag_310\n        /* \"#utility.yul\":6107:6109   */\n      0x20\n        /* \"#utility.yul\":6102:6105   */\n      dup4\n        /* \"#utility.yul\":6043:6110   */\n      tag_297\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6036:6110   */\n      swap2\n      pop\n        /* \"#utility.yul\":6119:6212   */\n      tag_311\n        /* \"#utility.yul\":6208:6211   */\n      dup3\n        /* \"#utility.yul\":6119:6212   */\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":6237:6239   */\n      0x20\n        /* \"#utility.yul\":6232:6235   */\n      dup3\n        /* \"#utility.yul\":6228:6240   */\n      add\n        /* \"#utility.yul\":6221:6240   */\n      swap1\n      pop\n        /* \"#utility.yul\":5880:6246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:6618   */\n    tag_313:\n        /* \"#utility.yul\":6394:6397   */\n      0x00\n        /* \"#utility.yul\":6415:6482   */\n      tag_315\n        /* \"#utility.yul\":6479:6481   */\n      0x4e\n        /* \"#utility.yul\":6474:6477   */\n      dup4\n        /* \"#utility.yul\":6415:6482   */\n      tag_297\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6408:6482   */\n      swap2\n      pop\n        /* \"#utility.yul\":6491:6584   */\n      tag_316\n        /* \"#utility.yul\":6580:6583   */\n      dup3\n        /* \"#utility.yul\":6491:6584   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6609:6611   */\n      0x60\n        /* \"#utility.yul\":6604:6607   */\n      dup3\n        /* \"#utility.yul\":6600:6612   */\n      add\n        /* \"#utility.yul\":6593:6612   */\n      swap1\n      pop\n        /* \"#utility.yul\":6252:6618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:6990   */\n    tag_318:\n        /* \"#utility.yul\":6766:6769   */\n      0x00\n        /* \"#utility.yul\":6787:6854   */\n      tag_320\n        /* \"#utility.yul\":6851:6853   */\n      0x1b\n        /* \"#utility.yul\":6846:6849   */\n      dup4\n        /* \"#utility.yul\":6787:6854   */\n      tag_297\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6780:6854   */\n      swap2\n      pop\n        /* \"#utility.yul\":6863:6956   */\n      tag_321\n        /* \"#utility.yul\":6952:6955   */\n      dup3\n        /* \"#utility.yul\":6863:6956   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6976:6979   */\n      dup3\n        /* \"#utility.yul\":6972:6984   */\n      add\n        /* \"#utility.yul\":6965:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:6990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7362   */\n    tag_323:\n        /* \"#utility.yul\":7138:7141   */\n      0x00\n        /* \"#utility.yul\":7159:7226   */\n      tag_325\n        /* \"#utility.yul\":7223:7225   */\n      0x17\n        /* \"#utility.yul\":7218:7221   */\n      dup4\n        /* \"#utility.yul\":7159:7226   */\n      tag_297\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7152:7226   */\n      swap2\n      pop\n        /* \"#utility.yul\":7235:7328   */\n      tag_326\n        /* \"#utility.yul\":7324:7327   */\n      dup3\n        /* \"#utility.yul\":7235:7328   */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7353:7355   */\n      0x20\n        /* \"#utility.yul\":7348:7351   */\n      dup3\n        /* \"#utility.yul\":7344:7356   */\n      add\n        /* \"#utility.yul\":7337:7356   */\n      swap1\n      pop\n        /* \"#utility.yul\":6996:7362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7368:7734   */\n    tag_328:\n        /* \"#utility.yul\":7510:7513   */\n      0x00\n        /* \"#utility.yul\":7531:7598   */\n      tag_330\n        /* \"#utility.yul\":7595:7597   */\n      0x10\n        /* \"#utility.yul\":7590:7593   */\n      dup4\n        /* \"#utility.yul\":7531:7598   */\n      tag_297\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7524:7598   */\n      swap2\n      pop\n        /* \"#utility.yul\":7607:7700   */\n      tag_331\n        /* \"#utility.yul\":7696:7699   */\n      dup3\n        /* \"#utility.yul\":7607:7700   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7725:7727   */\n      0x20\n        /* \"#utility.yul\":7720:7723   */\n      dup3\n        /* \"#utility.yul\":7716:7728   */\n      add\n        /* \"#utility.yul\":7709:7728   */\n      swap1\n      pop\n        /* \"#utility.yul\":7368:7734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7740:8142   */\n    tag_333:\n        /* \"#utility.yul\":7900:7903   */\n      0x00\n        /* \"#utility.yul\":7921:8006   */\n      tag_335\n        /* \"#utility.yul\":8003:8005   */\n      0x17\n        /* \"#utility.yul\":7998:8001   */\n      dup4\n        /* \"#utility.yul\":7921:8006   */\n      tag_306\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7914:8006   */\n      swap2\n      pop\n        /* \"#utility.yul\":8015:8108   */\n      tag_336\n        /* \"#utility.yul\":8104:8107   */\n      dup3\n        /* \"#utility.yul\":8015:8108   */\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8133:8135   */\n      0x17\n        /* \"#utility.yul\":8128:8131   */\n      dup3\n        /* \"#utility.yul\":8124:8136   */\n      add\n        /* \"#utility.yul\":8117:8136   */\n      swap1\n      pop\n        /* \"#utility.yul\":7740:8142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8148:8550   */\n    tag_338:\n        /* \"#utility.yul\":8308:8311   */\n      0x00\n        /* \"#utility.yul\":8329:8414   */\n      tag_340\n        /* \"#utility.yul\":8411:8413   */\n      0x11\n        /* \"#utility.yul\":8406:8409   */\n      dup4\n        /* \"#utility.yul\":8329:8414   */\n      tag_306\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8322:8414   */\n      swap2\n      pop\n        /* \"#utility.yul\":8423:8516   */\n      tag_341\n        /* \"#utility.yul\":8512:8515   */\n      dup3\n        /* \"#utility.yul\":8423:8516   */\n      tag_342\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8541:8543   */\n      0x11\n        /* \"#utility.yul\":8536:8539   */\n      dup3\n        /* \"#utility.yul\":8532:8544   */\n      add\n        /* \"#utility.yul\":8525:8544   */\n      swap1\n      pop\n        /* \"#utility.yul\":8148:8550   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8556:8922   */\n    tag_343:\n        /* \"#utility.yul\":8698:8701   */\n      0x00\n        /* \"#utility.yul\":8719:8786   */\n      tag_345\n        /* \"#utility.yul\":8783:8785   */\n      0x2f\n        /* \"#utility.yul\":8778:8781   */\n      dup4\n        /* \"#utility.yul\":8719:8786   */\n      tag_297\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8712:8786   */\n      swap2\n      pop\n        /* \"#utility.yul\":8795:8888   */\n      tag_346\n        /* \"#utility.yul\":8884:8887   */\n      dup3\n        /* \"#utility.yul\":8795:8888   */\n      tag_347\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8913:8915   */\n      0x40\n        /* \"#utility.yul\":8908:8911   */\n      dup3\n        /* \"#utility.yul\":8904:8916   */\n      add\n        /* \"#utility.yul\":8897:8916   */\n      swap1\n      pop\n        /* \"#utility.yul\":8556:8922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8928:9046   */\n    tag_348:\n        /* \"#utility.yul\":9015:9039   */\n      tag_350\n        /* \"#utility.yul\":9033:9038   */\n      dup2\n        /* \"#utility.yul\":9015:9039   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":9010:9013   */\n      dup3\n        /* \"#utility.yul\":9003:9040   */\n      mstore\n        /* \"#utility.yul\":8928:9046   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9052:10019   */\n    tag_182:\n        /* \"#utility.yul\":9434:9437   */\n      0x00\n        /* \"#utility.yul\":9456:9604   */\n      tag_353\n        /* \"#utility.yul\":9600:9603   */\n      dup3\n        /* \"#utility.yul\":9456:9604   */\n      tag_333\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9449:9604   */\n      swap2\n      pop\n        /* \"#utility.yul\":9621:9716   */\n      tag_354\n        /* \"#utility.yul\":9712:9715   */\n      dup3\n        /* \"#utility.yul\":9703:9709   */\n      dup6\n        /* \"#utility.yul\":9621:9716   */\n      tag_302\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9614:9716   */\n      swap2\n      pop\n        /* \"#utility.yul\":9733:9881   */\n      tag_355\n        /* \"#utility.yul\":9877:9880   */\n      dup3\n        /* \"#utility.yul\":9733:9881   */\n      tag_338\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9726:9881   */\n      swap2\n      pop\n        /* \"#utility.yul\":9898:9993   */\n      tag_356\n        /* \"#utility.yul\":9989:9992   */\n      dup3\n        /* \"#utility.yul\":9980:9986   */\n      dup5\n        /* \"#utility.yul\":9898:9993   */\n      tag_302\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9891:9993   */\n      swap2\n      pop\n        /* \"#utility.yul\":10010:10013   */\n      dup2\n        /* \"#utility.yul\":10003:10013   */\n      swap1\n      pop\n        /* \"#utility.yul\":9052:10019   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10467   */\n    tag_121:\n        /* \"#utility.yul\":10174:10178   */\n      0x00\n        /* \"#utility.yul\":10212:10214   */\n      0x60\n        /* \"#utility.yul\":10201:10210   */\n      dup3\n        /* \"#utility.yul\":10197:10215   */\n      add\n        /* \"#utility.yul\":10189:10215   */\n      swap1\n      pop\n        /* \"#utility.yul\":10225:10296   */\n      tag_358\n        /* \"#utility.yul\":10293:10294   */\n      0x00\n        /* \"#utility.yul\":10282:10291   */\n      dup4\n        /* \"#utility.yul\":10278:10295   */\n      add\n        /* \"#utility.yul\":10269:10275   */\n      dup7\n        /* \"#utility.yul\":10225:10296   */\n      tag_276\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10306:10378   */\n      tag_359\n        /* \"#utility.yul\":10374:10376   */\n      0x20\n        /* \"#utility.yul\":10363:10372   */\n      dup4\n        /* \"#utility.yul\":10359:10377   */\n      add\n        /* \"#utility.yul\":10350:10356   */\n      dup6\n        /* \"#utility.yul\":10306:10378   */\n      tag_276\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10388:10460   */\n      tag_360\n        /* \"#utility.yul\":10456:10458   */\n      0x40\n        /* \"#utility.yul\":10445:10454   */\n      dup4\n        /* \"#utility.yul\":10441:10459   */\n      add\n        /* \"#utility.yul\":10432:10438   */\n      dup5\n        /* \"#utility.yul\":10388:10460   */\n      tag_348\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10025:10467   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10473:11137   */\n    tag_32:\n        /* \"#utility.yul\":10678:10682   */\n      0x00\n        /* \"#utility.yul\":10716:10719   */\n      0xa0\n        /* \"#utility.yul\":10705:10714   */\n      dup3\n        /* \"#utility.yul\":10701:10720   */\n      add\n        /* \"#utility.yul\":10693:10720   */\n      swap1\n      pop\n        /* \"#utility.yul\":10730:10801   */\n      tag_362\n        /* \"#utility.yul\":10798:10799   */\n      0x00\n        /* \"#utility.yul\":10787:10796   */\n      dup4\n        /* \"#utility.yul\":10783:10800   */\n      add\n        /* \"#utility.yul\":10774:10780   */\n      dup9\n        /* \"#utility.yul\":10730:10801   */\n      tag_276\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10811:10883   */\n      tag_363\n        /* \"#utility.yul\":10879:10881   */\n      0x20\n        /* \"#utility.yul\":10868:10877   */\n      dup4\n        /* \"#utility.yul\":10864:10882   */\n      add\n        /* \"#utility.yul\":10855:10861   */\n      dup8\n        /* \"#utility.yul\":10811:10883   */\n      tag_276\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10893:10965   */\n      tag_364\n        /* \"#utility.yul\":10961:10963   */\n      0x40\n        /* \"#utility.yul\":10950:10959   */\n      dup4\n        /* \"#utility.yul\":10946:10964   */\n      add\n        /* \"#utility.yul\":10937:10943   */\n      dup7\n        /* \"#utility.yul\":10893:10965   */\n      tag_348\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":10975:11047   */\n      tag_365\n        /* \"#utility.yul\":11043:11045   */\n      0x60\n        /* \"#utility.yul\":11032:11041   */\n      dup4\n        /* \"#utility.yul\":11028:11046   */\n      add\n        /* \"#utility.yul\":11019:11025   */\n      dup6\n        /* \"#utility.yul\":10975:11047   */\n      tag_348\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11057:11130   */\n      tag_366\n        /* \"#utility.yul\":11125:11128   */\n      0x80\n        /* \"#utility.yul\":11114:11123   */\n      dup4\n        /* \"#utility.yul\":11110:11129   */\n      add\n        /* \"#utility.yul\":11101:11107   */\n      dup5\n        /* \"#utility.yul\":11057:11130   */\n      tag_276\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10473:11137   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11143:11491   */\n    tag_99:\n        /* \"#utility.yul\":11272:11276   */\n      0x00\n        /* \"#utility.yul\":11310:11312   */\n      0x40\n        /* \"#utility.yul\":11299:11308   */\n      dup3\n        /* \"#utility.yul\":11295:11313   */\n      add\n        /* \"#utility.yul\":11287:11313   */\n      swap1\n      pop\n        /* \"#utility.yul\":11323:11394   */\n      tag_368\n        /* \"#utility.yul\":11391:11392   */\n      0x00\n        /* \"#utility.yul\":11380:11389   */\n      dup4\n        /* \"#utility.yul\":11376:11393   */\n      add\n        /* \"#utility.yul\":11367:11373   */\n      dup6\n        /* \"#utility.yul\":11323:11394   */\n      tag_276\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11404:11484   */\n      tag_369\n        /* \"#utility.yul\":11480:11482   */\n      0x20\n        /* \"#utility.yul\":11469:11478   */\n      dup4\n        /* \"#utility.yul\":11465:11483   */\n      add\n        /* \"#utility.yul\":11456:11462   */\n      dup5\n        /* \"#utility.yul\":11404:11484   */\n      tag_288\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11143:11491   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11497:11829   */\n    tag_114:\n        /* \"#utility.yul\":11618:11622   */\n      0x00\n        /* \"#utility.yul\":11656:11658   */\n      0x40\n        /* \"#utility.yul\":11645:11654   */\n      dup3\n        /* \"#utility.yul\":11641:11659   */\n      add\n        /* \"#utility.yul\":11633:11659   */\n      swap1\n      pop\n        /* \"#utility.yul\":11669:11740   */\n      tag_371\n        /* \"#utility.yul\":11737:11738   */\n      0x00\n        /* \"#utility.yul\":11726:11735   */\n      dup4\n        /* \"#utility.yul\":11722:11739   */\n      add\n        /* \"#utility.yul\":11713:11719   */\n      dup6\n        /* \"#utility.yul\":11669:11740   */\n      tag_276\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11750:11822   */\n      tag_372\n        /* \"#utility.yul\":11818:11820   */\n      0x20\n        /* \"#utility.yul\":11807:11816   */\n      dup4\n        /* \"#utility.yul\":11803:11821   */\n      add\n        /* \"#utility.yul\":11794:11800   */\n      dup5\n        /* \"#utility.yul\":11750:11822   */\n      tag_348\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11497:11829   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11835:12045   */\n    tag_20:\n        /* \"#utility.yul\":11922:11926   */\n      0x00\n        /* \"#utility.yul\":11960:11962   */\n      0x20\n        /* \"#utility.yul\":11949:11958   */\n      dup3\n        /* \"#utility.yul\":11945:11963   */\n      add\n        /* \"#utility.yul\":11937:11963   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:12038   */\n      tag_374\n        /* \"#utility.yul\":12035:12036   */\n      0x00\n        /* \"#utility.yul\":12024:12033   */\n      dup4\n        /* \"#utility.yul\":12020:12037   */\n      add\n        /* \"#utility.yul\":12011:12017   */\n      dup5\n        /* \"#utility.yul\":11973:12038   */\n      tag_280\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11835:12045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12051:12273   */\n    tag_26:\n        /* \"#utility.yul\":12144:12148   */\n      0x00\n        /* \"#utility.yul\":12182:12184   */\n      0x20\n        /* \"#utility.yul\":12171:12180   */\n      dup3\n        /* \"#utility.yul\":12167:12185   */\n      add\n        /* \"#utility.yul\":12159:12185   */\n      swap1\n      pop\n        /* \"#utility.yul\":12195:12266   */\n      tag_376\n        /* \"#utility.yul\":12263:12264   */\n      0x00\n        /* \"#utility.yul\":12252:12261   */\n      dup4\n        /* \"#utility.yul\":12248:12265   */\n      add\n        /* \"#utility.yul\":12239:12245   */\n      dup5\n        /* \"#utility.yul\":12195:12266   */\n      tag_284\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12051:12273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12279:12611   */\n    tag_85:\n        /* \"#utility.yul\":12400:12404   */\n      0x00\n        /* \"#utility.yul\":12438:12440   */\n      0x40\n        /* \"#utility.yul\":12427:12436   */\n      dup3\n        /* \"#utility.yul\":12423:12441   */\n      add\n        /* \"#utility.yul\":12415:12441   */\n      swap1\n      pop\n        /* \"#utility.yul\":12451:12522   */\n      tag_378\n        /* \"#utility.yul\":12519:12520   */\n      0x00\n        /* \"#utility.yul\":12508:12517   */\n      dup4\n        /* \"#utility.yul\":12504:12521   */\n      add\n        /* \"#utility.yul\":12495:12501   */\n      dup6\n        /* \"#utility.yul\":12451:12522   */\n      tag_284\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":12532:12604   */\n      tag_379\n        /* \"#utility.yul\":12600:12602   */\n      0x20\n        /* \"#utility.yul\":12589:12598   */\n      dup4\n        /* \"#utility.yul\":12585:12603   */\n      add\n        /* \"#utility.yul\":12576:12582   */\n      dup5\n        /* \"#utility.yul\":12532:12604   */\n      tag_276\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12279:12611   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12617:12930   */\n    tag_184:\n        /* \"#utility.yul\":12730:12734   */\n      0x00\n        /* \"#utility.yul\":12768:12770   */\n      0x20\n        /* \"#utility.yul\":12757:12766   */\n      dup3\n        /* \"#utility.yul\":12753:12771   */\n      add\n        /* \"#utility.yul\":12745:12771   */\n      swap1\n      pop\n        /* \"#utility.yul\":12817:12826   */\n      dup2\n        /* \"#utility.yul\":12811:12815   */\n      dup2\n        /* \"#utility.yul\":12807:12827   */\n      sub\n        /* \"#utility.yul\":12803:12804   */\n      0x00\n        /* \"#utility.yul\":12792:12801   */\n      dup4\n        /* \"#utility.yul\":12788:12805   */\n      add\n        /* \"#utility.yul\":12781:12828   */\n      mstore\n        /* \"#utility.yul\":12845:12923   */\n      tag_381\n        /* \"#utility.yul\":12918:12922   */\n      dup2\n        /* \"#utility.yul\":12909:12915   */\n      dup5\n        /* \"#utility.yul\":12845:12923   */\n      tag_292\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12837:12923   */\n      swap1\n      pop\n        /* \"#utility.yul\":12617:12930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12936:13355   */\n    tag_211:\n        /* \"#utility.yul\":13102:13106   */\n      0x00\n        /* \"#utility.yul\":13140:13142   */\n      0x20\n        /* \"#utility.yul\":13129:13138   */\n      dup3\n        /* \"#utility.yul\":13125:13143   */\n      add\n        /* \"#utility.yul\":13117:13143   */\n      swap1\n      pop\n        /* \"#utility.yul\":13189:13198   */\n      dup2\n        /* \"#utility.yul\":13183:13187   */\n      dup2\n        /* \"#utility.yul\":13179:13199   */\n      sub\n        /* \"#utility.yul\":13175:13176   */\n      0x00\n        /* \"#utility.yul\":13164:13173   */\n      dup4\n        /* \"#utility.yul\":13160:13177   */\n      add\n        /* \"#utility.yul\":13153:13200   */\n      mstore\n        /* \"#utility.yul\":13217:13348   */\n      tag_383\n        /* \"#utility.yul\":13343:13347   */\n      dup2\n        /* \"#utility.yul\":13217:13348   */\n      tag_308\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13209:13348   */\n      swap1\n      pop\n        /* \"#utility.yul\":12936:13355   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13361:13780   */\n    tag_93:\n        /* \"#utility.yul\":13527:13531   */\n      0x00\n        /* \"#utility.yul\":13565:13567   */\n      0x20\n        /* \"#utility.yul\":13554:13563   */\n      dup3\n        /* \"#utility.yul\":13550:13568   */\n      add\n        /* \"#utility.yul\":13542:13568   */\n      swap1\n      pop\n        /* \"#utility.yul\":13614:13623   */\n      dup2\n        /* \"#utility.yul\":13608:13612   */\n      dup2\n        /* \"#utility.yul\":13604:13624   */\n      sub\n        /* \"#utility.yul\":13600:13601   */\n      0x00\n        /* \"#utility.yul\":13589:13598   */\n      dup4\n        /* \"#utility.yul\":13585:13602   */\n      add\n        /* \"#utility.yul\":13578:13625   */\n      mstore\n        /* \"#utility.yul\":13642:13773   */\n      tag_385\n        /* \"#utility.yul\":13768:13772   */\n      dup2\n        /* \"#utility.yul\":13642:13773   */\n      tag_313\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":13634:13773   */\n      swap1\n      pop\n        /* \"#utility.yul\":13361:13780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13786:14205   */\n    tag_131:\n        /* \"#utility.yul\":13952:13956   */\n      0x00\n        /* \"#utility.yul\":13990:13992   */\n      0x20\n        /* \"#utility.yul\":13979:13988   */\n      dup3\n        /* \"#utility.yul\":13975:13993   */\n      add\n        /* \"#utility.yul\":13967:13993   */\n      swap1\n      pop\n        /* \"#utility.yul\":14039:14048   */\n      dup2\n        /* \"#utility.yul\":14033:14037   */\n      dup2\n        /* \"#utility.yul\":14029:14049   */\n      sub\n        /* \"#utility.yul\":14025:14026   */\n      0x00\n        /* \"#utility.yul\":14014:14023   */\n      dup4\n        /* \"#utility.yul\":14010:14027   */\n      add\n        /* \"#utility.yul\":14003:14050   */\n      mstore\n        /* \"#utility.yul\":14067:14198   */\n      tag_387\n        /* \"#utility.yul\":14193:14197   */\n      dup2\n        /* \"#utility.yul\":14067:14198   */\n      tag_318\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14059:14198   */\n      swap1\n      pop\n        /* \"#utility.yul\":13786:14205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14211:14630   */\n    tag_97:\n        /* \"#utility.yul\":14377:14381   */\n      0x00\n        /* \"#utility.yul\":14415:14417   */\n      0x20\n        /* \"#utility.yul\":14404:14413   */\n      dup3\n        /* \"#utility.yul\":14400:14418   */\n      add\n        /* \"#utility.yul\":14392:14418   */\n      swap1\n      pop\n        /* \"#utility.yul\":14464:14473   */\n      dup2\n        /* \"#utility.yul\":14458:14462   */\n      dup2\n        /* \"#utility.yul\":14454:14474   */\n      sub\n        /* \"#utility.yul\":14450:14451   */\n      0x00\n        /* \"#utility.yul\":14439:14448   */\n      dup4\n        /* \"#utility.yul\":14435:14452   */\n      add\n        /* \"#utility.yul\":14428:14475   */\n      mstore\n        /* \"#utility.yul\":14492:14623   */\n      tag_389\n        /* \"#utility.yul\":14618:14622   */\n      dup2\n        /* \"#utility.yul\":14492:14623   */\n      tag_323\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14484:14623   */\n      swap1\n      pop\n        /* \"#utility.yul\":14211:14630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14636:15055   */\n    tag_107:\n        /* \"#utility.yul\":14802:14806   */\n      0x00\n        /* \"#utility.yul\":14840:14842   */\n      0x20\n        /* \"#utility.yul\":14829:14838   */\n      dup3\n        /* \"#utility.yul\":14825:14843   */\n      add\n        /* \"#utility.yul\":14817:14843   */\n      swap1\n      pop\n        /* \"#utility.yul\":14889:14898   */\n      dup2\n        /* \"#utility.yul\":14883:14887   */\n      dup2\n        /* \"#utility.yul\":14879:14899   */\n      sub\n        /* \"#utility.yul\":14875:14876   */\n      0x00\n        /* \"#utility.yul\":14864:14873   */\n      dup4\n        /* \"#utility.yul\":14860:14877   */\n      add\n        /* \"#utility.yul\":14853:14900   */\n      mstore\n        /* \"#utility.yul\":14917:15048   */\n      tag_391\n        /* \"#utility.yul\":15043:15047   */\n      dup2\n        /* \"#utility.yul\":14917:15048   */\n      tag_328\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14909:15048   */\n      swap1\n      pop\n        /* \"#utility.yul\":14636:15055   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15061:15480   */\n    tag_78:\n        /* \"#utility.yul\":15227:15231   */\n      0x00\n        /* \"#utility.yul\":15265:15267   */\n      0x20\n        /* \"#utility.yul\":15254:15263   */\n      dup3\n        /* \"#utility.yul\":15250:15268   */\n      add\n        /* \"#utility.yul\":15242:15268   */\n      swap1\n      pop\n        /* \"#utility.yul\":15314:15323   */\n      dup2\n        /* \"#utility.yul\":15308:15312   */\n      dup2\n        /* \"#utility.yul\":15304:15324   */\n      sub\n        /* \"#utility.yul\":15300:15301   */\n      0x00\n        /* \"#utility.yul\":15289:15298   */\n      dup4\n        /* \"#utility.yul\":15285:15302   */\n      add\n        /* \"#utility.yul\":15278:15325   */\n      mstore\n        /* \"#utility.yul\":15342:15473   */\n      tag_393\n        /* \"#utility.yul\":15468:15472   */\n      dup2\n        /* \"#utility.yul\":15342:15473   */\n      tag_343\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":15334:15473   */\n      swap1\n      pop\n        /* \"#utility.yul\":15061:15480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15567:15666   */\n    tag_295:\n        /* \"#utility.yul\":15619:15625   */\n      0x00\n        /* \"#utility.yul\":15653:15658   */\n      dup2\n        /* \"#utility.yul\":15647:15659   */\n      mload\n        /* \"#utility.yul\":15637:15659   */\n      swap1\n      pop\n        /* \"#utility.yul\":15567:15666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15672:15841   */\n    tag_297:\n        /* \"#utility.yul\":15756:15767   */\n      0x00\n        /* \"#utility.yul\":15790:15796   */\n      dup3\n        /* \"#utility.yul\":15785:15788   */\n      dup3\n        /* \"#utility.yul\":15778:15797   */\n      mstore\n        /* \"#utility.yul\":15830:15834   */\n      0x20\n        /* \"#utility.yul\":15825:15828   */\n      dup3\n        /* \"#utility.yul\":15821:15835   */\n      add\n        /* \"#utility.yul\":15806:15835   */\n      swap1\n      pop\n        /* \"#utility.yul\":15672:15841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15847:15995   */\n    tag_306:\n        /* \"#utility.yul\":15949:15960   */\n      0x00\n        /* \"#utility.yul\":15986:15989   */\n      dup2\n        /* \"#utility.yul\":15971:15989   */\n      swap1\n      pop\n        /* \"#utility.yul\":15847:15995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16001:16306   */\n    tag_188:\n        /* \"#utility.yul\":16041:16044   */\n      0x00\n        /* \"#utility.yul\":16060:16080   */\n      tag_400\n        /* \"#utility.yul\":16078:16079   */\n      dup3\n        /* \"#utility.yul\":16060:16080   */\n      tag_351\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":16055:16080   */\n      swap2\n      pop\n        /* \"#utility.yul\":16094:16114   */\n      tag_401\n        /* \"#utility.yul\":16112:16113   */\n      dup4\n        /* \"#utility.yul\":16094:16114   */\n      tag_351\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16089:16114   */\n      swap3\n      pop\n        /* \"#utility.yul\":16248:16249   */\n      dup3\n        /* \"#utility.yul\":16180:16246   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16176:16250   */\n      sub\n        /* \"#utility.yul\":16173:16174   */\n      dup3\n        /* \"#utility.yul\":16170:16251   */\n      gt\n        /* \"#utility.yul\":16167:16274   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":16254:16272   */\n      tag_403\n      tag_404\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":16167:16274   */\n    tag_402:\n        /* \"#utility.yul\":16298:16299   */\n      dup3\n        /* \"#utility.yul\":16295:16296   */\n      dup3\n        /* \"#utility.yul\":16291:16300   */\n      add\n        /* \"#utility.yul\":16284:16300   */\n      swap1\n      pop\n        /* \"#utility.yul\":16001:16306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16312:16497   */\n    tag_119:\n        /* \"#utility.yul\":16352:16353   */\n      0x00\n        /* \"#utility.yul\":16369:16389   */\n      tag_406\n        /* \"#utility.yul\":16387:16388   */\n      dup3\n        /* \"#utility.yul\":16369:16389   */\n      tag_351\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":16364:16389   */\n      swap2\n      pop\n        /* \"#utility.yul\":16403:16423   */\n      tag_407\n        /* \"#utility.yul\":16421:16422   */\n      dup4\n        /* \"#utility.yul\":16403:16423   */\n      tag_351\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16398:16423   */\n      swap3\n      pop\n        /* \"#utility.yul\":16442:16443   */\n      dup3\n        /* \"#utility.yul\":16432:16467   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":16447:16465   */\n      tag_409\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":16432:16467   */\n    tag_408:\n        /* \"#utility.yul\":16489:16490   */\n      dup3\n        /* \"#utility.yul\":16486:16487   */\n      dup3\n        /* \"#utility.yul\":16482:16491   */\n      div\n        /* \"#utility.yul\":16477:16491   */\n      swap1\n      pop\n        /* \"#utility.yul\":16312:16497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16503:16851   */\n    tag_150:\n        /* \"#utility.yul\":16543:16550   */\n      0x00\n        /* \"#utility.yul\":16566:16586   */\n      tag_412\n        /* \"#utility.yul\":16584:16585   */\n      dup3\n        /* \"#utility.yul\":16566:16586   */\n      tag_351\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":16561:16586   */\n      swap2\n      pop\n        /* \"#utility.yul\":16600:16620   */\n      tag_413\n        /* \"#utility.yul\":16618:16619   */\n      dup4\n        /* \"#utility.yul\":16600:16620   */\n      tag_351\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":16595:16620   */\n      swap3\n      pop\n        /* \"#utility.yul\":16788:16789   */\n      dup2\n        /* \"#utility.yul\":16720:16786   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16716:16790   */\n      div\n        /* \"#utility.yul\":16713:16714   */\n      dup4\n        /* \"#utility.yul\":16710:16791   */\n      gt\n        /* \"#utility.yul\":16705:16706   */\n      dup3\n        /* \"#utility.yul\":16698:16707   */\n      iszero\n        /* \"#utility.yul\":16691:16708   */\n      iszero\n        /* \"#utility.yul\":16687:16792   */\n      and\n        /* \"#utility.yul\":16684:16815   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":16795:16813   */\n      tag_415\n      tag_404\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16684:16815   */\n    tag_414:\n        /* \"#utility.yul\":16843:16844   */\n      dup3\n        /* \"#utility.yul\":16840:16841   */\n      dup3\n        /* \"#utility.yul\":16836:16845   */\n      mul\n        /* \"#utility.yul\":16825:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16503:16851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16857:16953   */\n    tag_279:\n        /* \"#utility.yul\":16894:16901   */\n      0x00\n        /* \"#utility.yul\":16923:16947   */\n      tag_417\n        /* \"#utility.yul\":16941:16946   */\n      dup3\n        /* \"#utility.yul\":16923:16947   */\n      tag_418\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":16912:16947   */\n      swap1\n      pop\n        /* \"#utility.yul\":16857:16953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16959:17049   */\n    tag_283:\n        /* \"#utility.yul\":16993:17000   */\n      0x00\n        /* \"#utility.yul\":17036:17041   */\n      dup2\n        /* \"#utility.yul\":17029:17042   */\n      iszero\n        /* \"#utility.yul\":17022:17043   */\n      iszero\n        /* \"#utility.yul\":17011:17043   */\n      swap1\n      pop\n        /* \"#utility.yul\":16959:17049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17055:17132   */\n    tag_287:\n        /* \"#utility.yul\":17092:17099   */\n      0x00\n        /* \"#utility.yul\":17121:17126   */\n      dup2\n        /* \"#utility.yul\":17110:17126   */\n      swap1\n      pop\n        /* \"#utility.yul\":17055:17132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17138:17287   */\n    tag_421:\n        /* \"#utility.yul\":17174:17181   */\n      0x00\n        /* \"#utility.yul\":17214:17280   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17207:17212   */\n      dup3\n        /* \"#utility.yul\":17203:17281   */\n      and\n        /* \"#utility.yul\":17192:17281   */\n      swap1\n      pop\n        /* \"#utility.yul\":17138:17287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17293:17419   */\n    tag_418:\n        /* \"#utility.yul\":17330:17337   */\n      0x00\n        /* \"#utility.yul\":17370:17412   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17363:17368   */\n      dup3\n        /* \"#utility.yul\":17359:17413   */\n      and\n        /* \"#utility.yul\":17348:17413   */\n      swap1\n      pop\n        /* \"#utility.yul\":17293:17419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17425:17502   */\n    tag_351:\n        /* \"#utility.yul\":17462:17469   */\n      0x00\n        /* \"#utility.yul\":17491:17496   */\n      dup2\n        /* \"#utility.yul\":17480:17496   */\n      swap1\n      pop\n        /* \"#utility.yul\":17425:17502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17508:17629   */\n    tag_291:\n        /* \"#utility.yul\":17566:17575   */\n      0x00\n        /* \"#utility.yul\":17599:17623   */\n      tag_426\n        /* \"#utility.yul\":17617:17622   */\n      dup3\n        /* \"#utility.yul\":17599:17623   */\n      tag_351\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":17586:17623   */\n      swap1\n      pop\n        /* \"#utility.yul\":17508:17629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17635:17942   */\n    tag_299:\n        /* \"#utility.yul\":17703:17704   */\n      0x00\n        /* \"#utility.yul\":17713:17826   */\n    tag_428:\n        /* \"#utility.yul\":17727:17733   */\n      dup4\n        /* \"#utility.yul\":17724:17725   */\n      dup2\n        /* \"#utility.yul\":17721:17734   */\n      lt\n        /* \"#utility.yul\":17713:17826   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":17812:17813   */\n      dup1\n        /* \"#utility.yul\":17807:17810   */\n      dup3\n        /* \"#utility.yul\":17803:17814   */\n      add\n        /* \"#utility.yul\":17797:17815   */\n      mload\n        /* \"#utility.yul\":17793:17794   */\n      dup2\n        /* \"#utility.yul\":17788:17791   */\n      dup5\n        /* \"#utility.yul\":17784:17795   */\n      add\n        /* \"#utility.yul\":17777:17816   */\n      mstore\n        /* \"#utility.yul\":17749:17751   */\n      0x20\n        /* \"#utility.yul\":17746:17747   */\n      dup2\n        /* \"#utility.yul\":17742:17752   */\n      add\n        /* \"#utility.yul\":17737:17752   */\n      swap1\n      pop\n        /* \"#utility.yul\":17713:17826   */\n      jump(tag_428)\n    tag_430:\n        /* \"#utility.yul\":17844:17850   */\n      dup4\n        /* \"#utility.yul\":17841:17842   */\n      dup2\n        /* \"#utility.yul\":17838:17851   */\n      gt\n        /* \"#utility.yul\":17835:17936   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":17924:17925   */\n      0x00\n        /* \"#utility.yul\":17915:17921   */\n      dup5\n        /* \"#utility.yul\":17910:17913   */\n      dup5\n        /* \"#utility.yul\":17906:17922   */\n      add\n        /* \"#utility.yul\":17899:17926   */\n      mstore\n        /* \"#utility.yul\":17835:17936   */\n    tag_431:\n        /* \"#utility.yul\":17684:17942   */\n      pop\n        /* \"#utility.yul\":17635:17942   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17948:18119   */\n    tag_208:\n        /* \"#utility.yul\":17987:17990   */\n      0x00\n        /* \"#utility.yul\":18010:18034   */\n      tag_433\n        /* \"#utility.yul\":18028:18033   */\n      dup3\n        /* \"#utility.yul\":18010:18034   */\n      tag_351\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":18001:18034   */\n      swap2\n      pop\n        /* \"#utility.yul\":18056:18060   */\n      0x00\n        /* \"#utility.yul\":18049:18054   */\n      dup3\n        /* \"#utility.yul\":18046:18061   */\n      eq\n        /* \"#utility.yul\":18043:18084   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":18064:18082   */\n      tag_435\n      tag_404\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":18043:18084   */\n    tag_434:\n        /* \"#utility.yul\":18111:18112   */\n      0x01\n        /* \"#utility.yul\":18104:18109   */\n      dup3\n        /* \"#utility.yul\":18100:18113   */\n      sub\n        /* \"#utility.yul\":18093:18113   */\n      swap1\n      pop\n        /* \"#utility.yul\":17948:18119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18125:18305   */\n    tag_404:\n        /* \"#utility.yul\":18173:18250   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18170:18171   */\n      0x00\n        /* \"#utility.yul\":18163:18251   */\n      mstore\n        /* \"#utility.yul\":18270:18274   */\n      0x11\n        /* \"#utility.yul\":18267:18268   */\n      0x04\n        /* \"#utility.yul\":18260:18275   */\n      mstore\n        /* \"#utility.yul\":18294:18298   */\n      0x24\n        /* \"#utility.yul\":18291:18292   */\n      0x00\n        /* \"#utility.yul\":18284:18299   */\n      revert\n        /* \"#utility.yul\":18311:18491   */\n    tag_410:\n        /* \"#utility.yul\":18359:18436   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18356:18357   */\n      0x00\n        /* \"#utility.yul\":18349:18437   */\n      mstore\n        /* \"#utility.yul\":18456:18460   */\n      0x12\n        /* \"#utility.yul\":18453:18454   */\n      0x04\n        /* \"#utility.yul\":18446:18461   */\n      mstore\n        /* \"#utility.yul\":18480:18484   */\n      0x24\n        /* \"#utility.yul\":18477:18478   */\n      0x00\n        /* \"#utility.yul\":18470:18485   */\n      revert\n        /* \"#utility.yul\":18497:18677   */\n    tag_195:\n        /* \"#utility.yul\":18545:18622   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18542:18543   */\n      0x00\n        /* \"#utility.yul\":18535:18623   */\n      mstore\n        /* \"#utility.yul\":18642:18646   */\n      0x32\n        /* \"#utility.yul\":18639:18640   */\n      0x04\n        /* \"#utility.yul\":18632:18647   */\n      mstore\n        /* \"#utility.yul\":18666:18670   */\n      0x24\n        /* \"#utility.yul\":18663:18664   */\n      0x00\n        /* \"#utility.yul\":18656:18671   */\n      revert\n        /* \"#utility.yul\":18683:18863   */\n    tag_191:\n        /* \"#utility.yul\":18731:18808   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18728:18729   */\n      0x00\n        /* \"#utility.yul\":18721:18809   */\n      mstore\n        /* \"#utility.yul\":18828:18832   */\n      0x41\n        /* \"#utility.yul\":18825:18826   */\n      0x04\n        /* \"#utility.yul\":18818:18833   */\n      mstore\n        /* \"#utility.yul\":18852:18856   */\n      0x24\n        /* \"#utility.yul\":18849:18850   */\n      0x00\n        /* \"#utility.yul\":18842:18857   */\n      revert\n        /* \"#utility.yul\":18992:19109   */\n    tag_239:\n        /* \"#utility.yul\":19101:19102   */\n      0x00\n        /* \"#utility.yul\":19098:19099   */\n      dup1\n        /* \"#utility.yul\":19091:19103   */\n      revert\n        /* \"#utility.yul\":19115:19217   */\n    tag_301:\n        /* \"#utility.yul\":19156:19162   */\n      0x00\n        /* \"#utility.yul\":19207:19209   */\n      0x1f\n        /* \"#utility.yul\":19203:19210   */\n      not\n        /* \"#utility.yul\":19198:19200   */\n      0x1f\n        /* \"#utility.yul\":19191:19196   */\n      dup4\n        /* \"#utility.yul\":19187:19201   */\n      add\n        /* \"#utility.yul\":19183:19211   */\n      and\n        /* \"#utility.yul\":19173:19211   */\n      swap1\n      pop\n        /* \"#utility.yul\":19115:19217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19223:19405   */\n    tag_312:\n        /* \"#utility.yul\":19363:19397   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":19359:19360   */\n      0x00\n        /* \"#utility.yul\":19351:19357   */\n      dup3\n        /* \"#utility.yul\":19347:19361   */\n      add\n        /* \"#utility.yul\":19340:19398   */\n      mstore\n        /* \"#utility.yul\":19223:19405   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19411:19713   */\n    tag_317:\n        /* \"#utility.yul\":19551:19585   */\n      0x6f6e6c792061646d696e7320616e64206f6e6c792046726967672d6973737565\n        /* \"#utility.yul\":19547:19548   */\n      0x00\n        /* \"#utility.yul\":19539:19545   */\n      dup3\n        /* \"#utility.yul\":19535:19549   */\n      add\n        /* \"#utility.yul\":19528:19586   */\n      mstore\n        /* \"#utility.yul\":19620:19654   */\n      0x6420746f6b656e732063616e2062652061646465642074686520746f6b656e20\n        /* \"#utility.yul\":19615:19617   */\n      0x20\n        /* \"#utility.yul\":19607:19613   */\n      dup3\n        /* \"#utility.yul\":19603:19618   */\n      add\n        /* \"#utility.yul\":19596:19655   */\n      mstore\n        /* \"#utility.yul\":19689:19705   */\n      0x746f207468697320726f75746572000000000000000000000000000000000000\n        /* \"#utility.yul\":19684:19686   */\n      0x40\n        /* \"#utility.yul\":19676:19682   */\n      dup3\n        /* \"#utility.yul\":19672:19687   */\n      add\n        /* \"#utility.yul\":19665:19706   */\n      mstore\n        /* \"#utility.yul\":19411:19713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19719:19896   */\n    tag_322:\n        /* \"#utility.yul\":19859:19888   */\n      0x596f752063616e6e6f74206275792077697468203020746f6b656e0000000000\n        /* \"#utility.yul\":19855:19856   */\n      0x00\n        /* \"#utility.yul\":19847:19853   */\n      dup3\n        /* \"#utility.yul\":19843:19857   */\n      add\n        /* \"#utility.yul\":19836:19889   */\n      mstore\n        /* \"#utility.yul\":19719:19896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19902:20075   */\n    tag_327:\n        /* \"#utility.yul\":20042:20067   */\n      0x596f752063616e6e6f742073656c6c203020746f6b656e000000000000000000\n        /* \"#utility.yul\":20038:20039   */\n      0x00\n        /* \"#utility.yul\":20030:20036   */\n      dup3\n        /* \"#utility.yul\":20026:20040   */\n      add\n        /* \"#utility.yul\":20019:20068   */\n      mstore\n        /* \"#utility.yul\":19902:20075   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20081:20247   */\n    tag_332:\n        /* \"#utility.yul\":20221:20239   */\n      0x4e65656420612055494420746f6b656e00000000000000000000000000000000\n        /* \"#utility.yul\":20217:20218   */\n      0x00\n        /* \"#utility.yul\":20209:20215   */\n      dup3\n        /* \"#utility.yul\":20205:20219   */\n      add\n        /* \"#utility.yul\":20198:20240   */\n      mstore\n        /* \"#utility.yul\":20081:20247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20253:20426   */\n    tag_337:\n        /* \"#utility.yul\":20393:20418   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":20389:20390   */\n      0x00\n        /* \"#utility.yul\":20381:20387   */\n      dup3\n        /* \"#utility.yul\":20377:20391   */\n      add\n        /* \"#utility.yul\":20370:20419   */\n      mstore\n        /* \"#utility.yul\":20253:20426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20432:20599   */\n    tag_342:\n        /* \"#utility.yul\":20572:20591   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":20568:20569   */\n      0x00\n        /* \"#utility.yul\":20560:20566   */\n      dup3\n        /* \"#utility.yul\":20556:20570   */\n      add\n        /* \"#utility.yul\":20549:20592   */\n      mstore\n        /* \"#utility.yul\":20432:20599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20605:20839   */\n    tag_347:\n        /* \"#utility.yul\":20745:20779   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":20741:20742   */\n      0x00\n        /* \"#utility.yul\":20733:20739   */\n      dup3\n        /* \"#utility.yul\":20729:20743   */\n      add\n        /* \"#utility.yul\":20722:20780   */\n      mstore\n        /* \"#utility.yul\":20814:20831   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":20809:20811   */\n      0x20\n        /* \"#utility.yul\":20801:20807   */\n      dup3\n        /* \"#utility.yul\":20797:20812   */\n      add\n        /* \"#utility.yul\":20790:20832   */\n      mstore\n        /* \"#utility.yul\":20605:20839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20845:20967   */\n    tag_216:\n        /* \"#utility.yul\":20918:20942   */\n      tag_453\n        /* \"#utility.yul\":20936:20941   */\n      dup2\n        /* \"#utility.yul\":20918:20942   */\n      tag_279\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":20911:20916   */\n      dup2\n        /* \"#utility.yul\":20908:20943   */\n      eq\n        /* \"#utility.yul\":20898:20961   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":20957:20958   */\n      0x00\n        /* \"#utility.yul\":20954:20955   */\n      dup1\n        /* \"#utility.yul\":20947:20959   */\n      revert\n        /* \"#utility.yul\":20898:20961   */\n    tag_454:\n        /* \"#utility.yul\":20845:20967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20973:21089   */\n    tag_220:\n        /* \"#utility.yul\":21043:21064   */\n      tag_456\n        /* \"#utility.yul\":21058:21063   */\n      dup2\n        /* \"#utility.yul\":21043:21064   */\n      tag_283\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":21036:21041   */\n      dup2\n        /* \"#utility.yul\":21033:21065   */\n      eq\n        /* \"#utility.yul\":21023:21083   */\n      tag_457\n      jumpi\n        /* \"#utility.yul\":21079:21080   */\n      0x00\n        /* \"#utility.yul\":21076:21077   */\n      dup1\n        /* \"#utility.yul\":21069:21081   */\n      revert\n        /* \"#utility.yul\":21023:21083   */\n    tag_457:\n        /* \"#utility.yul\":20973:21089   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21095:21217   */\n    tag_224:\n        /* \"#utility.yul\":21168:21192   */\n      tag_459\n        /* \"#utility.yul\":21186:21191   */\n      dup2\n        /* \"#utility.yul\":21168:21192   */\n      tag_287\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":21161:21166   */\n      dup2\n        /* \"#utility.yul\":21158:21193   */\n      eq\n        /* \"#utility.yul\":21148:21211   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":21207:21208   */\n      0x00\n        /* \"#utility.yul\":21204:21205   */\n      dup1\n        /* \"#utility.yul\":21197:21209   */\n      revert\n        /* \"#utility.yul\":21148:21211   */\n    tag_460:\n        /* \"#utility.yul\":21095:21217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21223:21343   */\n    tag_228:\n        /* \"#utility.yul\":21295:21318   */\n      tag_462\n        /* \"#utility.yul\":21312:21317   */\n      dup2\n        /* \"#utility.yul\":21295:21318   */\n      tag_421\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":21288:21293   */\n      dup2\n        /* \"#utility.yul\":21285:21319   */\n      eq\n        /* \"#utility.yul\":21275:21337   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":21333:21334   */\n      0x00\n        /* \"#utility.yul\":21330:21331   */\n      dup1\n        /* \"#utility.yul\":21323:21335   */\n      revert\n        /* \"#utility.yul\":21275:21337   */\n    tag_463:\n        /* \"#utility.yul\":21223:21343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21349:21471   */\n    tag_232:\n        /* \"#utility.yul\":21422:21446   */\n      tag_465\n        /* \"#utility.yul\":21440:21445   */\n      dup2\n        /* \"#utility.yul\":21422:21446   */\n      tag_351\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":21415:21420   */\n      dup2\n        /* \"#utility.yul\":21412:21447   */\n      eq\n        /* \"#utility.yul\":21402:21465   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":21461:21462   */\n      0x00\n        /* \"#utility.yul\":21458:21459   */\n      dup1\n        /* \"#utility.yul\":21451:21463   */\n      revert\n        /* \"#utility.yul\":21402:21465   */\n    tag_466:\n        /* \"#utility.yul\":21349:21471   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ac79e52f140daf0f4a81c203d00b1fefcd7a53987faa669e44e2c617ecc8f88964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_898": {
									"entryPoint": null,
									"id": 898,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 83,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_604": {
									"entryPoint": 430,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 324,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "7:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:10"
															},
															"nodeType": "YulIf",
															"src": "243:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "156:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:10",
														"type": ""
													}
												],
												"src": "513:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:10",
														"type": ""
													}
												],
												"src": "594:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:10",
														"type": ""
													}
												],
												"src": "696:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:10"
															},
															"nodeType": "YulIf",
															"src": "1127:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:10",
														"type": ""
													}
												],
												"src": "1074:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002330380380620023308339818101604052810190620000379190620001cd565b6200004c6000801b826200005360201b60201c565b5062000252565b6200006582826200014460201b60201c565b6200014057600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620000e5620001ae60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600081519050620001c78162000238565b92915050565b600060208284031215620001e657620001e562000233565b5b6000620001f684828501620001b6565b91505092915050565b60006200020c8262000213565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200024381620001ff565b81146200024f57600080fd5b50565b6120ce80620002626000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634cbe36ce116100715780634cbe36ce1461017a5780636c197ff51461019657806391d14854146101b2578063a217fddf146101e2578063cce7ec1314610200578063d547741f1461021c576100a9565b806301ffc9a7146100ae578063248a9ca3146100de57806327e45c2c1461010e5780632f2ff15d1461014257806336568abe1461015e575b600080fd5b6100c860048036038101906100c39190611726565b610238565b6040516100d59190611a63565b60405180910390f35b6100f860048036038101906100f391906116b9565b6102b2565b6040516101059190611a7e565b60405180910390f35b61012860048036038101906101239190611592565b6102d1565b6040516101399594939291906119be565b60405180910390f35b61015c600480360381019061015791906116e6565b610367565b005b610178600480360381019061017391906116e6565b610388565b005b610194600480360381019061018f91906115bf565b61040b565b005b6101b060048036038101906101ab919061164c565b610688565b005b6101cc60048036038101906101c791906116e6565b610af5565b6040516101d99190611a63565b60405180910390f35b6101ea610b5f565b6040516101f79190611a7e565b60405180910390f35b61021a6004803603810190610215919061164c565b610b66565b005b610236600480360381019061023191906116e6565b610fd3565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ab57506102aa82610ff4565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b610370826102b2565b6103798161105e565b6103838383611072565b505050565b610390611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f490611b84565b60405180910390fd5b610407828261115a565b5050565b6000801b6104188161105e565b60008790508073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b336040518363ffffffff1660e01b815260040161045b929190611a99565b60206040518083038186803b15801561047357600080fd5b505afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab919061168c565b6104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190611b04565b60405180910390fd5b6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815250600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050505050565b600081116106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290611b44565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b815260040161076a929190611a11565b60206040518083038186803b15801561078257600080fd5b505afa158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190611753565b116107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f190611b64565b60405180910390fd5b60008290506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff16638058425b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ac57600080fd5b505afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e4919061168c565b6108ed57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33856040518363ffffffff1660e01b8152600401610928929190611a3a565b600060405180830381600087803b15801561094257600080fd5b505af1158015610956573d6000803e3d6000fd5b505050506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846109aa9190611c21565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b8152600401610a4b93929190611987565b602060405180830381600087803b158015610a6557600080fd5b505af1158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d919061168c565b503373ffffffffffffffffffffffffffffffffffffffff167f165e50ed3a693f2ff4dcc70a4835f65ce8e0fbb700ba9c2ddb0aa07e06fa479e8686604051610ae6929190611a3a565b60405180910390a25050505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b60008111610ba9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba090611b24565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b8152600401610c48929190611a11565b60206040518083038186803b158015610c6057600080fd5b505afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c989190611753565b11610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf90611b64565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008390508073ffffffffffffffffffffffffffffffffffffffff16632e873bac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8a57600080fd5b505afa158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc2919061168c565b610dcb57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401610e6a93929190611987565b602060405180830381600087803b158015610e8457600080fd5b505af1158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc919061168c565b506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015484610f0d9190611c52565b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610f4a929190611a3a565b600060405180830381600087803b158015610f6457600080fd5b505af1158015610f78573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fc676e61b1e79d2fb537a623c39c425429b06c3309e0f79e72ac1dccc697031b58686604051610fc4929190611a3a565b60405180910390a25050505050565b610fdc826102b2565b610fe58161105e565b610fef838361115a565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61106f8161106a611152565b61123b565b50565b61107c8282610af5565b61114e57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506110f3611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6111648282610af5565b1561123757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111dc611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6112458282610af5565b6112d45761126a8173ffffffffffffffffffffffffffffffffffffffff1660146112d8565b6112788360001c60206112d8565b60405160200161128992919061194d565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb9190611ac2565b60405180910390fd5b5050565b6060600060028360026112eb9190611c52565b6112f59190611bcb565b67ffffffffffffffff81111561130e5761130d611e26565b5b6040519080825280601f01601f1916602001820160405280156113405781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061137857611377611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106113dc576113db611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261141c9190611c52565b6114269190611bcb565b90505b60018111156114c6577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061146857611467611df7565b5b1a60f81b82828151811061147f5761147e611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806114bf90611d6f565b9050611429565b506000841461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150190611ae4565b60405180910390fd5b8091505092915050565b60008135905061152381612025565b92915050565b6000815190506115388161203c565b92915050565b60008135905061154d81612053565b92915050565b6000813590506115628161206a565b92915050565b60008135905061157781612081565b92915050565b60008151905061158c81612081565b92915050565b6000602082840312156115a8576115a7611e55565b5b60006115b684828501611514565b91505092915050565b60008060008060008060c087890312156115dc576115db611e55565b5b60006115ea89828a01611514565b96505060206115fb89828a01611514565b955050604061160c89828a01611514565b945050606061161d89828a01611568565b935050608061162e89828a01611568565b92505060a061163f89828a01611514565b9150509295509295509295565b6000806040838503121561166357611662611e55565b5b600061167185828601611514565b925050602061168285828601611568565b9150509250929050565b6000602082840312156116a2576116a1611e55565b5b60006116b084828501611529565b91505092915050565b6000602082840312156116cf576116ce611e55565b5b60006116dd8482850161153e565b91505092915050565b600080604083850312156116fd576116fc611e55565b5b600061170b8582860161153e565b925050602061171c85828601611514565b9150509250929050565b60006020828403121561173c5761173b611e55565b5b600061174a84828501611553565b91505092915050565b60006020828403121561176957611768611e55565b5b60006117778482850161157d565b91505092915050565b61178981611cac565b82525050565b61179881611cbe565b82525050565b6117a781611cca565b82525050565b6117b681611d2a565b82525050565b60006117c782611ba4565b6117d18185611baf565b93506117e1818560208601611d3c565b6117ea81611e5a565b840191505092915050565b600061180082611ba4565b61180a8185611bc0565b935061181a818560208601611d3c565b80840191505092915050565b6000611833602083611baf565b915061183e82611e6b565b602082019050919050565b6000611856604e83611baf565b915061186182611e94565b606082019050919050565b6000611879601b83611baf565b915061188482611f09565b602082019050919050565b600061189c601783611baf565b91506118a782611f32565b602082019050919050565b60006118bf601083611baf565b91506118ca82611f5b565b602082019050919050565b60006118e2601783611bc0565b91506118ed82611f84565b601782019050919050565b6000611905601183611bc0565b915061191082611fad565b601182019050919050565b6000611928602f83611baf565b915061193382611fd6565b604082019050919050565b61194781611d20565b82525050565b6000611958826118d5565b915061196482856117f5565b915061196f826118f8565b915061197b82846117f5565b91508190509392505050565b600060608201905061199c6000830186611780565b6119a96020830185611780565b6119b6604083018461193e565b949350505050565b600060a0820190506119d36000830188611780565b6119e06020830187611780565b6119ed604083018661193e565b6119fa606083018561193e565b611a076080830184611780565b9695505050505050565b6000604082019050611a266000830185611780565b611a3360208301846117ad565b9392505050565b6000604082019050611a4f6000830185611780565b611a5c602083018461193e565b9392505050565b6000602082019050611a78600083018461178f565b92915050565b6000602082019050611a93600083018461179e565b92915050565b6000604082019050611aae600083018561179e565b611abb6020830184611780565b9392505050565b60006020820190508181036000830152611adc81846117bc565b905092915050565b60006020820190508181036000830152611afd81611826565b9050919050565b60006020820190508181036000830152611b1d81611849565b9050919050565b60006020820190508181036000830152611b3d8161186c565b9050919050565b60006020820190508181036000830152611b5d8161188f565b9050919050565b60006020820190508181036000830152611b7d816118b2565b9050919050565b60006020820190508181036000830152611b9d8161191b565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611bd682611d20565b9150611be183611d20565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c1657611c15611d99565b5b828201905092915050565b6000611c2c82611d20565b9150611c3783611d20565b925082611c4757611c46611dc8565b5b828204905092915050565b6000611c5d82611d20565b9150611c6883611d20565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ca157611ca0611d99565b5b828202905092915050565b6000611cb782611d00565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611d3582611d20565b9050919050565b60005b83811015611d5a578082015181840152602081019050611d3f565b83811115611d69576000848401525b50505050565b6000611d7a82611d20565b91506000821415611d8e57611d8d611d99565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f6f6e6c792061646d696e7320616e64206f6e6c792046726967672d697373756560008201527f6420746f6b656e732063616e2062652061646465642074686520746f6b656e2060208201527f746f207468697320726f75746572000000000000000000000000000000000000604082015250565b7f596f752063616e6e6f74206275792077697468203020746f6b656e0000000000600082015250565b7f596f752063616e6e6f742073656c6c203020746f6b656e000000000000000000600082015250565b7f4e65656420612055494420746f6b656e00000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b61202e81611cac565b811461203957600080fd5b50565b61204581611cbe565b811461205057600080fd5b50565b61205c81611cca565b811461206757600080fd5b50565b61207381611cd4565b811461207e57600080fd5b50565b61208a81611d20565b811461209557600080fd5b5056fea2646970667358221220ac79e52f140daf0f4a81c203d00b1fefcd7a53987faa669e44e2c617ecc8f88964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2330 CODESIZE SUB DUP1 PUSH3 0x2330 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1CD JUMP JUMPDEST PUSH3 0x4C PUSH1 0x0 DUP1 SHL DUP3 PUSH3 0x53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x252 JUMP JUMPDEST PUSH3 0x65 DUP3 DUP3 PUSH3 0x144 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x140 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xE5 PUSH3 0x1AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1C7 DUP2 PUSH3 0x238 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1E6 JUMPI PUSH3 0x1E5 PUSH3 0x233 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1F6 DUP5 DUP3 DUP6 ADD PUSH3 0x1B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x20C DUP3 PUSH3 0x213 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x243 DUP2 PUSH3 0x1FF JUMP JUMPDEST DUP2 EQ PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x20CE DUP1 PUSH3 0x262 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CBE36CE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x4CBE36CE EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x6C197FF5 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x21C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x27E45C2C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x15E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2AB JUMPI POP PUSH2 0x2AA DUP3 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x370 DUP3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x383 DUP4 DUP4 PUSH2 0x1072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x390 PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x407 DUP3 DUP3 PUSH2 0x115A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x418 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x91D14854 PUSH1 0x0 DUP1 SHL CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST GT PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F1 SWAP1 PUSH2 0x1B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8058425B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x165E50ED3A693F2FF4DCC70A4835F65CE8E0FBB700BA9C2DDB0AA07E06FA479E DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC48 SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST GT PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP1 PUSH2 0x1B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E873BAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF0D SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4A SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC676E61B1E79D2FB537A623C39C425429B06C3309E0F79E72AC1DCCC697031B5 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFDC DUP3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xFE5 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xFEF DUP4 DUP4 PUSH2 0x115A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106F DUP2 PUSH2 0x106A PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x107C DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x114E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10F3 PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1164 DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11DC PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1245 DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x12D4 JUMPI PUSH2 0x126A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1278 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1289 SWAP3 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x12EB SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1340 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1378 JUMPI PUSH2 0x1377 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x1426 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1468 JUMPI PUSH2 0x1467 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x14BF SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP1 POP PUSH2 0x1429 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1523 DUP2 PUSH2 0x2025 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1538 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154D DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x206A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1577 DUP2 PUSH2 0x2081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x158C DUP2 PUSH2 0x2081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH2 0x15A7 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B6 DUP5 DUP3 DUP6 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EA DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x15FB DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x160C DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x161D DUP10 DUP3 DUP11 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x162E DUP10 DUP3 DUP11 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x163F DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1682 DUP6 DUP3 DUP7 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16DD DUP5 DUP3 DUP6 ADD PUSH2 0x153E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170B DUP6 DUP3 DUP7 ADD PUSH2 0x153E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x171C DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174A DUP5 DUP3 DUP6 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP5 DUP3 DUP6 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1798 DUP2 PUSH2 0x1CBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17B6 DUP2 PUSH2 0x1D2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C7 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x17D1 DUP2 DUP6 PUSH2 0x1BAF JUMP JUMPDEST SWAP4 POP PUSH2 0x17E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x1E5A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x180A DUP2 DUP6 PUSH2 0x1BC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x181A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1833 PUSH1 0x20 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x183E DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1856 PUSH1 0x4E DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1861 DUP3 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1879 PUSH1 0x1B DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP3 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0x17 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH1 0x10 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x18CA DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E2 PUSH1 0x17 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 PUSH1 0x11 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1910 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1928 PUSH1 0x2F DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1933 DUP3 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0x18D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP3 DUP6 PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x196F DUP3 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 DUP5 PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x199C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19ED PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1A07 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17AD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1A5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A93 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AAE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x1ABB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 DUP5 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AFD DUP2 PUSH2 0x1826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B1D DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3D DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5D DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B7D DUP2 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B9D DUP2 PUSH2 0x191B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C16 JUMPI PUSH2 0x1C15 PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C37 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C47 JUMPI PUSH2 0x1C46 PUSH2 0x1DC8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CA1 JUMPI PUSH2 0x1CA0 PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 DUP3 PUSH2 0x1D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D5A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7A DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E7320616E64206F6E6C792046726967672D6973737565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E732063616E2062652061646465642074686520746F6B656E20 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746F207468697320726F75746572000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74206275792077697468203020746F6B656E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F742073656C6C203020746F6B656E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E65656420612055494420746F6B656E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x202E DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP2 EQ PUSH2 0x2039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2045 DUP2 PUSH2 0x1CBE JUMP JUMPDEST DUP2 EQ PUSH2 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP2 EQ PUSH2 0x2067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2073 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x208A DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH26 0xE52F140DAF0F4A81C203D00B1FEFCD7A53987FAA669E44E2C617 0xEC 0xC8 0xF8 DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "494:5923:8:-:0;;;757:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;803:41;2072:4:0;814:18:8;;834:9;803:10;;;:41;;:::i;:::-;757:94;494:5923;;7474:233:0;7557:22;7565:4;7571:7;7557;;;:22;;:::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;;;:12;;:::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7:143:10:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;494:5923:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2911,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_135": {
									"entryPoint": 4667,
									"id": 135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 4190,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_287": {
									"entryPoint": 4210,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_604": {
									"entryPoint": 4434,
									"id": 604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_318": {
									"entryPoint": 4442,
									"id": 318,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_980": {
									"entryPoint": 1035,
									"id": 980,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@buy_1072": {
									"entryPoint": 2918,
									"id": 1072,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_150": {
									"entryPoint": 690,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_170": {
									"entryPoint": 871,
									"id": 170,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2805,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_213": {
									"entryPoint": 904,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_190": {
									"entryPoint": 4051,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sell_1164": {
									"entryPoint": 1672,
									"id": 1164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 568,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_863": {
									"entryPoint": 4084,
									"id": 863,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_819": {
									"entryPoint": 4824,
									"id": 819,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenData_920": {
									"entryPoint": 721,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_address": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6477,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address__to_t_address_t_address_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6714,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101": {
									"entryPoint": 7945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9": {
									"entryPoint": 8027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21474:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:10",
														"type": ""
													}
												],
												"src": "7:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:10",
														"type": ""
													}
												],
												"src": "152:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:10",
														"type": ""
													}
												],
												"src": "295:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "491:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "501:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "510:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "501:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "565:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "539:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "539:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "469:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "477:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "485:5:10",
														"type": ""
													}
												],
												"src": "440:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "635:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "645:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "667:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "654:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "645:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "710:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "683:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "683:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "613:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "621:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:10",
														"type": ""
													}
												],
												"src": "583:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "791:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "801:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "810:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "859:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "832:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "785:5:10",
														"type": ""
													}
												],
												"src": "728:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "991:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "991:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "991:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "964:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "973:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "960:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "960:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "985:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:32:10"
															},
															"nodeType": "YulIf",
															"src": "953:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1082:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1097:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1111:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1101:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1126:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1161:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1172:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1157:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1157:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1181:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1136:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1126:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "913:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "924:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "936:6:10",
														"type": ""
													}
												],
												"src": "877:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:906:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1410:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1412:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1384:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1380:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1380:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:33:10"
															},
															"nodeType": "YulIf",
															"src": "1373:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "1503:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1518:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1522:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1547:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1582:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1593:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1578:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1578:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1602:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1557:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1547:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1630:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1645:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1649:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1675:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1710:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1721:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1706:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1706:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1730:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1685:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1685:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1675:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1758:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1773:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1777:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1803:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1838:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1849:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1834:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1834:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1813:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1803:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1886:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1901:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1915:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1905:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1931:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1966:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1977:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1962:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1962:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1986:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1941:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1941:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1931:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2014:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2029:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2033:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2060:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2095:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2106:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2091:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2091:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2115:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2070:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2070:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2060:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2143:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2158:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2172:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2162:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2189:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2224:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2235:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2220:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2220:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2244:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2199:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2189:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1293:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1304:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1316:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1324:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1332:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1340:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1348:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1356:6:10",
														"type": ""
													}
												],
												"src": "1212:1057:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2358:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2404:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2406:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2406:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2406:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2379:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2388:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2371:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:32:10"
															},
															"nodeType": "YulIf",
															"src": "2368:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2497:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2512:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2516:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2541:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2576:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2587:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2572:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2572:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2596:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2551:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2551:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2541:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2624:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2639:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2643:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2669:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2704:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2700:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2700:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2724:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2679:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2669:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2320:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2331:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2343:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2351:6:10",
														"type": ""
													}
												],
												"src": "2275:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:271:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2877:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2850:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2846:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:32:10"
															},
															"nodeType": "YulIf",
															"src": "2839:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2968:125:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2983:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2997:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2987:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3012:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3055:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3066:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3051:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3075:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3022:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3022:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3012:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2799:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2810:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2822:6:10",
														"type": ""
													}
												],
												"src": "2755:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3172:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3218:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3220:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3220:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3220:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3193:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3214:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3185:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:32:10"
															},
															"nodeType": "YulIf",
															"src": "3182:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3311:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3326:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3330:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3355:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3401:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3386:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3410:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3365:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3355:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3142:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3153:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3165:6:10",
														"type": ""
													}
												],
												"src": "3106:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3524:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3570:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3572:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3572:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3572:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3545:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3541:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3541:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3537:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:32:10"
															},
															"nodeType": "YulIf",
															"src": "3534:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3663:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3678:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3682:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3707:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3742:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3753:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3738:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3738:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3762:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3717:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3717:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3707:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3790:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3805:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3819:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3809:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3835:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3870:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3881:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3866:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3866:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3890:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3845:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3835:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3486:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3497:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3509:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3517:6:10",
														"type": ""
													}
												],
												"src": "3441:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3986:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4032:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4034:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4034:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4034:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4007:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4028:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:32:10"
															},
															"nodeType": "YulIf",
															"src": "3996:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4125:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4140:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4154:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4144:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4169:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4203:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4214:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4199:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4199:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4223:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4179:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4179:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4169:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3956:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3967:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3979:6:10",
														"type": ""
													}
												],
												"src": "3921:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4331:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4377:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4379:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4379:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4379:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4352:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4361:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4373:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4344:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:32:10"
															},
															"nodeType": "YulIf",
															"src": "4341:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4470:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4485:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4499:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4489:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4514:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4560:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4571:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4556:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4556:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4580:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4524:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4514:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4301:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4312:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4324:6:10",
														"type": ""
													}
												],
												"src": "4254:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4676:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4693:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4716:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4698:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4686:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4686:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4664:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4671:3:10",
														"type": ""
													}
												],
												"src": "4611:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4794:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4811:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4831:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4816:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4816:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4804:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4782:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4789:3:10",
														"type": ""
													}
												],
												"src": "4735:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4915:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4932:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4955:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4937:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4937:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4925:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4925:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4903:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4910:3:10",
														"type": ""
													}
												],
												"src": "4850:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5047:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5064:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5108:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5069:38:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5057:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5057:58:10"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5035:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5042:3:10",
														"type": ""
													}
												],
												"src": "4974:147:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5219:272:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5229:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5276:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5243:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5233:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5291:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5357:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5362:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5298:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5298:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5404:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5411:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5400:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5423:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5378:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5439:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5450:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5477:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5455:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5455:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5446:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5200:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5207:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5215:3:10",
														"type": ""
													}
												],
												"src": "5127:364:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5607:267:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5617:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5664:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5631:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5631:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5621:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5679:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5763:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5768:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5679:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5810:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5817:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5806:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5806:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5824:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5829:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5784:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5784:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5845:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5856:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5861:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5852:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5588:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5595:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5603:3:10",
														"type": ""
													}
												],
												"src": "5497:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6026:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6036:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6102:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6107:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6043:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6043:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6036:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6208:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "6119:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6119:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6119:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6221:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6232:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6237:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6228:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6014:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6022:3:10",
														"type": ""
													}
												],
												"src": "5880:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6408:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6474:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6479:2:10",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6415:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6415:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6580:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341",
																	"nodeType": "YulIdentifier",
																	"src": "6491:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6491:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6491:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6593:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6604:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6593:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6386:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6394:3:10",
														"type": ""
													}
												],
												"src": "6252:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6770:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6780:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6846:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6851:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6787:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6787:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6780:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6952:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101",
																	"nodeType": "YulIdentifier",
																	"src": "6863:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6863:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6863:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6965:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6976:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6972:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6972:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6965:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6758:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6766:3:10",
														"type": ""
													}
												],
												"src": "6624:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7142:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7152:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7218:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7223:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7159:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7152:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7324:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b",
																	"nodeType": "YulIdentifier",
																	"src": "7235:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7235:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7348:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7353:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7344:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7337:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7130:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7138:3:10",
														"type": ""
													}
												],
												"src": "6996:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7514:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7524:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7590:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7595:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7531:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7524:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7696:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
																	"nodeType": "YulIdentifier",
																	"src": "7607:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7607:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7709:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7720:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7725:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7716:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7709:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7502:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7510:3:10",
														"type": ""
													}
												],
												"src": "7368:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7904:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7914:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7998:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7921:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7914:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8104:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "8015:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8015:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8015:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8117:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8128:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8117:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7892:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7900:3:10",
														"type": ""
													}
												],
												"src": "7740:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8312:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8322:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8406:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8411:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8329:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8322:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8512:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "8423:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8423:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8423:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8525:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8536:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8541:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8532:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8525:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8300:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8308:3:10",
														"type": ""
													}
												],
												"src": "8148:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8702:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8712:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8778:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8783:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8719:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8719:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8712:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8884:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "8795:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8795:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8795:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8897:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8908:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8913:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8904:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8904:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8897:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8690:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8698:3:10",
														"type": ""
													}
												],
												"src": "8556:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8993:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9010:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9033:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9015:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9015:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9003:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9003:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9003:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8981:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8988:3:10",
														"type": ""
													}
												],
												"src": "8928:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9438:581:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9449:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9600:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9456:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9449:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9614:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9703:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9712:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9621:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9621:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9614:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9726:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9877:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9733:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9891:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9980:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9989:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9898:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9898:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9891:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10003:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10010:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9409:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9415:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9423:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9434:3:10",
														"type": ""
													}
												],
												"src": "9052:967:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10179:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10201:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10212:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10197:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10197:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10189:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10269:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10282:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10293:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10278:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10278:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10225:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10225:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10225:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10350:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10363:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10374:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10359:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10359:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10306:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10306:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10306:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10432:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10445:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10456:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10441:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10441:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10388:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10388:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10388:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10135:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10147:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10155:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10163:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10174:4:10",
														"type": ""
													}
												],
												"src": "10025:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10683:454:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10693:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10705:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10716:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10701:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10701:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10693:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10774:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10787:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10798:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10783:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10783:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10730:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10730:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10855:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10879:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10864:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10811:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10811:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10811:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10937:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10950:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10961:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10946:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10893:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10893:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10893:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11019:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11032:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11043:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11028:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10975:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10975:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10975:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11101:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11125:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11057:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11057:73:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11057:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address__to_t_address_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10623:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10635:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10643:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10651:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10659:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10667:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10678:4:10",
														"type": ""
													}
												],
												"src": "10473:664:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11277:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11287:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11299:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11310:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11287:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11367:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11380:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11391:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11376:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11376:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11323:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11323:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11323:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11456:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11469:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11480:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11465:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11404:51:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:80:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:80:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11241:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11253:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11261:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11272:4:10",
														"type": ""
													}
												],
												"src": "11143:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11623:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11633:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11645:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11656:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11641:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11641:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11633:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11713:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11726:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11737:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11722:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11722:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11669:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11669:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11669:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11794:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11807:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11818:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11803:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11750:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11750:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11750:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11587:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11599:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11607:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11618:4:10",
														"type": ""
													}
												],
												"src": "11497:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11927:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11937:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11949:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11960:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11945:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11945:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11937:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12011:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12024:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12035:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12020:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12020:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11973:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11973:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11973:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11899:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11911:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11922:4:10",
														"type": ""
													}
												],
												"src": "11835:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12149:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12159:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12171:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12182:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12167:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12159:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12239:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12252:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12263:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12248:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12248:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12195:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12195:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12195:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12121:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12133:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12144:4:10",
														"type": ""
													}
												],
												"src": "12051:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12405:206:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12415:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12427:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12438:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12423:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12415:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12495:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12508:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12519:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12504:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12504:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12451:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12451:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12451:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12576:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12532:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12532:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12532:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12369:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12381:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12389:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12400:4:10",
														"type": ""
													}
												],
												"src": "12279:332:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12735:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12745:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12757:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12768:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12753:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12753:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12745:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12803:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12788:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12811:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12817:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12807:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12807:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12781:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12781:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12781:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12837:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12909:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12918:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12845:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12837:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12707:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12719:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12730:4:10",
														"type": ""
													}
												],
												"src": "12617:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13107:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13117:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13129:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13140:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13125:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13125:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13117:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13164:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13175:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13160:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13183:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13189:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13179:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13179:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13153:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13153:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13153:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13209:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13343:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13217:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13217:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13209:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13087:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13102:4:10",
														"type": ""
													}
												],
												"src": "12936:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13532:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13542:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13554:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13565:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13550:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13550:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13542:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13589:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13600:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13585:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13608:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13614:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13604:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13604:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13578:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13578:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13634:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13768:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13642:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13642:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13634:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13512:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13527:4:10",
														"type": ""
													}
												],
												"src": "13361:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13957:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13967:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13979:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13990:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13975:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13975:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13967:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14014:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14025:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14010:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14033:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14039:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14029:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14029:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14003:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14003:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14059:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14193:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14067:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14067:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14059:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13937:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13952:4:10",
														"type": ""
													}
												],
												"src": "13786:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14382:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14392:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14404:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14415:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14400:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14392:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14439:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14450:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14435:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14435:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14458:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14464:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14454:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14454:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14428:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14428:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14428:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14484:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14618:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14492:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14492:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14484:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14362:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14377:4:10",
														"type": ""
													}
												],
												"src": "14211:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14807:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14817:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14829:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14840:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14825:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14825:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14817:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14864:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14875:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14860:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14860:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14883:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14889:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14879:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14853:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14853:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14853:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14909:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15043:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14917:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14917:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14909:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14787:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14802:4:10",
														"type": ""
													}
												],
												"src": "14636:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15232:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15242:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15254:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15265:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15250:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15250:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15242:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15289:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15300:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15285:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15285:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15308:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15314:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15304:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15304:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15278:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15278:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15334:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15468:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15342:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15342:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15334:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15212:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15227:4:10",
														"type": ""
													}
												],
												"src": "15061:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15526:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15536:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15552:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15546:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15546:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "15536:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15519:6:10",
														"type": ""
													}
												],
												"src": "15486:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15626:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15637:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15653:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15647:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15647:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15637:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15609:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15619:6:10",
														"type": ""
													}
												],
												"src": "15567:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15768:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15785:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15790:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15778:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15778:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15778:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15806:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15825:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15830:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15821:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15821:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15806:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15740:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15745:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15756:11:10",
														"type": ""
													}
												],
												"src": "15672:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15961:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15971:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15986:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15971:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15933:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15938:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15949:11:10",
														"type": ""
													}
												],
												"src": "15847:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16045:261:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16055:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16078:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16060:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16060:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16055:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16089:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16112:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16094:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16094:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16089:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16252:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16254:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16254:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16254:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16173:1:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16180:66:10",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16248:1:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16176:74:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16170:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16170:81:10"
															},
															"nodeType": "YulIf",
															"src": "16167:107:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16284:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16295:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16298:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16291:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16291:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "16284:3:10"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16032:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16035:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16041:3:10",
														"type": ""
													}
												],
												"src": "16001:305:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16354:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16364:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16387:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16369:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16369:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16364:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16398:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16421:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16403:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16403:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16398:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16445:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16447:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16447:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16447:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16442:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16435:9:10"
															},
															"nodeType": "YulIf",
															"src": "16432:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16477:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16486:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16489:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16482:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16482:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16477:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16343:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16346:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16352:1:10",
														"type": ""
													}
												],
												"src": "16312:185:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16551:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16561:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16584:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16566:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16566:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16561:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16595:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16618:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16600:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16595:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16793:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16795:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16795:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16795:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16705:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "16698:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16698:9:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16691:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16691:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16713:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16720:66:10",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "16788:1:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "16716:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16716:74:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16710:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16710:81:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16687:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16687:105:10"
															},
															"nodeType": "YulIf",
															"src": "16684:131:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16825:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16840:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16843:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16836:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16825:7:10"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16534:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16537:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "16543:7:10",
														"type": ""
													}
												],
												"src": "16503:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16902:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16912:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16941:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16923:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16923:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16912:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16884:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16894:7:10",
														"type": ""
													}
												],
												"src": "16857:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17001:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17011:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17036:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "17029:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17029:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17022:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17022:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17011:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16983:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16993:7:10",
														"type": ""
													}
												],
												"src": "16959:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17100:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17110:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17121:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17110:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17082:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17092:7:10",
														"type": ""
													}
												],
												"src": "17055:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17182:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17192:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17207:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17214:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17203:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17203:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17192:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17164:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17174:7:10",
														"type": ""
													}
												],
												"src": "17138:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17338:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17348:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17363:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17370:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17359:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17359:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17348:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17320:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17330:7:10",
														"type": ""
													}
												],
												"src": "17293:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17470:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17480:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17491:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "17480:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17452:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "17462:7:10",
														"type": ""
													}
												],
												"src": "17425:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17576:53:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17586:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17617:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "17599:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17599:24:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "17586:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17556:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "17566:9:10",
														"type": ""
													}
												],
												"src": "17508:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17684:258:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17694:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17703:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "17698:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17763:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "17788:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "17793:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17784:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17784:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "17807:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "17812:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "17803:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17803:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17797:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17797:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17777:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17777:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17777:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17724:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17727:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17721:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17721:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17735:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17737:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "17746:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17749:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17742:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17742:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "17737:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17717:3:10",
																"statements": []
															},
															"src": "17713:113:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17860:76:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "17910:3:10"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "17915:6:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17906:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17906:16:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17924:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17899:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17899:27:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17899:27:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17841:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17844:6:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17838:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17838:13:10"
															},
															"nodeType": "YulIf",
															"src": "17835:101:10"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "17666:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "17671:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17676:6:10",
														"type": ""
													}
												],
												"src": "17635:307:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17991:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18001:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18028:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18010:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18010:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18001:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18062:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18064:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18064:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18064:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18049:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18056:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18046:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18046:15:10"
															},
															"nodeType": "YulIf",
															"src": "18043:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18093:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18104:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18111:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18100:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18100:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18093:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17977:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17987:3:10",
														"type": ""
													}
												],
												"src": "17948:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18153:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18170:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18173:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18163:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18163:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18163:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18267:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18270:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18260:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18260:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18260:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18291:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18294:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18284:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18284:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18284:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18125:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18339:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18356:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18359:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18349:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18349:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18349:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18453:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18456:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18446:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18446:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18477:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18480:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18470:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18470:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18470:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18311:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18525:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18542:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18545:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18535:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18535:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18639:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18642:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18632:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18632:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18632:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18663:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18666:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18656:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18656:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18656:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "18497:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18711:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18728:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18731:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18721:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18721:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18721:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18825:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18828:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18818:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18818:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18818:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18849:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18852:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18842:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18842:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18842:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "18683:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18958:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18975:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18978:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18968:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18968:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18968:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "18869:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19081:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19098:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19101:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19091:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19091:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19091:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "18992:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19163:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19173:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19191:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19198:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19187:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19187:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19207:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "19203:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19203:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19183:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19173:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19146:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "19156:6:10",
														"type": ""
													}
												],
												"src": "19115:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19329:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19351:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19359:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19347:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19347:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19363:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19340:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19340:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19340:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19321:6:10",
														"type": ""
													}
												],
												"src": "19223:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19517:196:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19539:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19547:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19535:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19535:14:10"
																	},
																	{
																		"hexValue": "6f6e6c792061646d696e7320616e64206f6e6c792046726967672d6973737565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19551:34:10",
																		"type": "",
																		"value": "only admins and only Frigg-issue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19528:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19528:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19528:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19607:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19615:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19603:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19603:15:10"
																	},
																	{
																		"hexValue": "6420746f6b656e732063616e2062652061646465642074686520746f6b656e20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19620:34:10",
																		"type": "",
																		"value": "d tokens can be added the token "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19596:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19596:59:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19596:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19676:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19684:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19672:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19672:15:10"
																	},
																	{
																		"hexValue": "746f207468697320726f75746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19689:16:10",
																		"type": "",
																		"value": "to this router"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19665:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19665:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19665:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19509:6:10",
														"type": ""
													}
												],
												"src": "19411:302:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19825:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19847:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19855:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19843:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19843:14:10"
																	},
																	{
																		"hexValue": "596f752063616e6e6f74206275792077697468203020746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19859:29:10",
																		"type": "",
																		"value": "You cannot buy with 0 token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19836:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19836:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19836:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19817:6:10",
														"type": ""
													}
												],
												"src": "19719:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20008:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20030:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20038:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20026:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20026:14:10"
																	},
																	{
																		"hexValue": "596f752063616e6e6f742073656c6c203020746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20042:25:10",
																		"type": "",
																		"value": "You cannot sell 0 token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20019:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20019:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20019:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20000:6:10",
														"type": ""
													}
												],
												"src": "19902:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20187:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20209:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20217:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20205:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20205:14:10"
																	},
																	{
																		"hexValue": "4e65656420612055494420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20221:18:10",
																		"type": "",
																		"value": "Need a UID token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20198:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20198:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20198:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20179:6:10",
														"type": ""
													}
												],
												"src": "20081:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20359:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20381:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20389:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20377:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20393:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20370:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20370:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20370:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20351:6:10",
														"type": ""
													}
												],
												"src": "20253:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20538:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20560:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20568:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20556:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20556:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20572:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20549:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20549:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20549:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20530:6:10",
														"type": ""
													}
												],
												"src": "20432:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20711:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20733:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20741:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20729:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20729:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20745:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20722:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20722:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20722:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20801:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20809:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20797:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20797:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20814:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20790:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20790:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20790:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20703:6:10",
														"type": ""
													}
												],
												"src": "20605:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20888:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20945:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20954:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20957:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20947:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20947:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20947:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20911:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20936:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "20918:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20918:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20908:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20908:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20901:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20901:43:10"
															},
															"nodeType": "YulIf",
															"src": "20898:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20881:5:10",
														"type": ""
													}
												],
												"src": "20845:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21013:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21067:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21076:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21079:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21069:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21069:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21069:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21036:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21058:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21043:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21043:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21033:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21033:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21026:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21026:40:10"
															},
															"nodeType": "YulIf",
															"src": "21023:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21006:5:10",
														"type": ""
													}
												],
												"src": "20973:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21138:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21195:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21204:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21207:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21197:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21197:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21197:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21161:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21186:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "21168:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21168:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21158:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21158:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21151:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21151:43:10"
															},
															"nodeType": "YulIf",
															"src": "21148:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21131:5:10",
														"type": ""
													}
												],
												"src": "21095:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21265:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21321:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21330:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21333:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21323:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21323:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21323:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21288:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21312:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "21295:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21295:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21285:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21285:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21278:42:10"
															},
															"nodeType": "YulIf",
															"src": "21275:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21258:5:10",
														"type": ""
													}
												],
												"src": "21223:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21392:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21449:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21458:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21461:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21451:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21451:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21451:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21415:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21440:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "21422:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21422:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21412:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21412:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21405:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21405:43:10"
															},
															"nodeType": "YulIf",
															"src": "21402:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21385:5:10",
														"type": ""
													}
												],
												"src": "21349:122:10"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 78)\n        store_literal_in_memory_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_address__to_t_address_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function store_literal_in_memory_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admins and only Frigg-issue\")\n\n        mstore(add(memPtr, 32), \"d tokens can be added the token \")\n\n        mstore(add(memPtr, 64), \"to this router\")\n\n    }\n\n    function store_literal_in_memory_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot buy with 0 token\")\n\n    }\n\n    function store_literal_in_memory_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot sell 0 token\")\n\n    }\n\n    function store_literal_in_memory_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need a UID token\")\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80634cbe36ce116100715780634cbe36ce1461017a5780636c197ff51461019657806391d14854146101b2578063a217fddf146101e2578063cce7ec1314610200578063d547741f1461021c576100a9565b806301ffc9a7146100ae578063248a9ca3146100de57806327e45c2c1461010e5780632f2ff15d1461014257806336568abe1461015e575b600080fd5b6100c860048036038101906100c39190611726565b610238565b6040516100d59190611a63565b60405180910390f35b6100f860048036038101906100f391906116b9565b6102b2565b6040516101059190611a7e565b60405180910390f35b61012860048036038101906101239190611592565b6102d1565b6040516101399594939291906119be565b60405180910390f35b61015c600480360381019061015791906116e6565b610367565b005b610178600480360381019061017391906116e6565b610388565b005b610194600480360381019061018f91906115bf565b61040b565b005b6101b060048036038101906101ab919061164c565b610688565b005b6101cc60048036038101906101c791906116e6565b610af5565b6040516101d99190611a63565b60405180910390f35b6101ea610b5f565b6040516101f79190611a7e565b60405180910390f35b61021a6004803603810190610215919061164c565b610b66565b005b610236600480360381019061023191906116e6565b610fd3565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102ab57506102aa82610ff4565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b610370826102b2565b6103798161105e565b6103838383611072565b505050565b610390611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146103fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f490611b84565b60405180910390fd5b610407828261115a565b5050565b6000801b6104188161105e565b60008790508073ffffffffffffffffffffffffffffffffffffffff166391d148546000801b336040518363ffffffff1660e01b815260040161045b929190611a99565b60206040518083038186803b15801561047357600080fd5b505afa158015610487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ab919061168c565b6104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e190611b04565b60405180910390fd5b6040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815250600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050505050505050505050565b600081116106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c290611b44565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b815260040161076a929190611a11565b60206040518083038186803b15801561078257600080fd5b505afa158015610796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ba9190611753565b116107fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f190611b64565b60405180910390fd5b60008290506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff16638058425b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ac57600080fd5b505afa1580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e4919061168c565b6108ed57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff16639dc29fac33856040518363ffffffff1660e01b8152600401610928929190611a3a565b600060405180830381600087803b15801561094257600080fd5b505af1158015610956573d6000803e3d6000fd5b505050506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154846109aa9190611c21565b90508173ffffffffffffffffffffffffffffffffffffffff166323b872dd600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b8152600401610a4b93929190611987565b602060405180830381600087803b158015610a6557600080fd5b505af1158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d919061168c565b503373ffffffffffffffffffffffffffffffffffffffff167f165e50ed3a693f2ff4dcc70a4835f65ce8e0fbb700ba9c2ddb0aa07e06fa479e8686604051610ae6929190611a3a565b60405180910390a25050505050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b60008111610ba9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba090611b24565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e3360006040518363ffffffff1660e01b8152600401610c48929190611a11565b60206040518083038186803b158015610c6057600080fd5b505afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c989190611753565b11610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccf90611b64565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008390508073ffffffffffffffffffffffffffffffffffffffff16632e873bac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8a57600080fd5b505afa158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc2919061168c565b610dcb57600080fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd33600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518463ffffffff1660e01b8152600401610e6a93929190611987565b602060405180830381600087803b158015610e8457600080fd5b505af1158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc919061168c565b506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015484610f0d9190611c52565b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610f4a929190611a3a565b600060405180830381600087803b158015610f6457600080fd5b505af1158015610f78573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fc676e61b1e79d2fb537a623c39c425429b06c3309e0f79e72ac1dccc697031b58686604051610fc4929190611a3a565b60405180910390a25050505050565b610fdc826102b2565b610fe58161105e565b610fef838361115a565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61106f8161106a611152565b61123b565b50565b61107c8282610af5565b61114e57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506110f3611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b6111648282610af5565b1561123757600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111dc611152565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6112458282610af5565b6112d45761126a8173ffffffffffffffffffffffffffffffffffffffff1660146112d8565b6112788360001c60206112d8565b60405160200161128992919061194d565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb9190611ac2565b60405180910390fd5b5050565b6060600060028360026112eb9190611c52565b6112f59190611bcb565b67ffffffffffffffff81111561130e5761130d611e26565b5b6040519080825280601f01601f1916602001820160405280156113405781602001600182028036833780820191505090505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061137857611377611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106113dc576113db611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261141c9190611c52565b6114269190611bcb565b90505b60018111156114c6577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061146857611467611df7565b5b1a60f81b82828151811061147f5761147e611df7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806114bf90611d6f565b9050611429565b506000841461150a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150190611ae4565b60405180910390fd5b8091505092915050565b60008135905061152381612025565b92915050565b6000815190506115388161203c565b92915050565b60008135905061154d81612053565b92915050565b6000813590506115628161206a565b92915050565b60008135905061157781612081565b92915050565b60008151905061158c81612081565b92915050565b6000602082840312156115a8576115a7611e55565b5b60006115b684828501611514565b91505092915050565b60008060008060008060c087890312156115dc576115db611e55565b5b60006115ea89828a01611514565b96505060206115fb89828a01611514565b955050604061160c89828a01611514565b945050606061161d89828a01611568565b935050608061162e89828a01611568565b92505060a061163f89828a01611514565b9150509295509295509295565b6000806040838503121561166357611662611e55565b5b600061167185828601611514565b925050602061168285828601611568565b9150509250929050565b6000602082840312156116a2576116a1611e55565b5b60006116b084828501611529565b91505092915050565b6000602082840312156116cf576116ce611e55565b5b60006116dd8482850161153e565b91505092915050565b600080604083850312156116fd576116fc611e55565b5b600061170b8582860161153e565b925050602061171c85828601611514565b9150509250929050565b60006020828403121561173c5761173b611e55565b5b600061174a84828501611553565b91505092915050565b60006020828403121561176957611768611e55565b5b60006117778482850161157d565b91505092915050565b61178981611cac565b82525050565b61179881611cbe565b82525050565b6117a781611cca565b82525050565b6117b681611d2a565b82525050565b60006117c782611ba4565b6117d18185611baf565b93506117e1818560208601611d3c565b6117ea81611e5a565b840191505092915050565b600061180082611ba4565b61180a8185611bc0565b935061181a818560208601611d3c565b80840191505092915050565b6000611833602083611baf565b915061183e82611e6b565b602082019050919050565b6000611856604e83611baf565b915061186182611e94565b606082019050919050565b6000611879601b83611baf565b915061188482611f09565b602082019050919050565b600061189c601783611baf565b91506118a782611f32565b602082019050919050565b60006118bf601083611baf565b91506118ca82611f5b565b602082019050919050565b60006118e2601783611bc0565b91506118ed82611f84565b601782019050919050565b6000611905601183611bc0565b915061191082611fad565b601182019050919050565b6000611928602f83611baf565b915061193382611fd6565b604082019050919050565b61194781611d20565b82525050565b6000611958826118d5565b915061196482856117f5565b915061196f826118f8565b915061197b82846117f5565b91508190509392505050565b600060608201905061199c6000830186611780565b6119a96020830185611780565b6119b6604083018461193e565b949350505050565b600060a0820190506119d36000830188611780565b6119e06020830187611780565b6119ed604083018661193e565b6119fa606083018561193e565b611a076080830184611780565b9695505050505050565b6000604082019050611a266000830185611780565b611a3360208301846117ad565b9392505050565b6000604082019050611a4f6000830185611780565b611a5c602083018461193e565b9392505050565b6000602082019050611a78600083018461178f565b92915050565b6000602082019050611a93600083018461179e565b92915050565b6000604082019050611aae600083018561179e565b611abb6020830184611780565b9392505050565b60006020820190508181036000830152611adc81846117bc565b905092915050565b60006020820190508181036000830152611afd81611826565b9050919050565b60006020820190508181036000830152611b1d81611849565b9050919050565b60006020820190508181036000830152611b3d8161186c565b9050919050565b60006020820190508181036000830152611b5d8161188f565b9050919050565b60006020820190508181036000830152611b7d816118b2565b9050919050565b60006020820190508181036000830152611b9d8161191b565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611bd682611d20565b9150611be183611d20565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c1657611c15611d99565b5b828201905092915050565b6000611c2c82611d20565b9150611c3783611d20565b925082611c4757611c46611dc8565b5b828204905092915050565b6000611c5d82611d20565b9150611c6883611d20565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611ca157611ca0611d99565b5b828202905092915050565b6000611cb782611d00565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611d3582611d20565b9050919050565b60005b83811015611d5a578082015181840152602081019050611d3f565b83811115611d69576000848401525b50505050565b6000611d7a82611d20565b91506000821415611d8e57611d8d611d99565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f6f6e6c792061646d696e7320616e64206f6e6c792046726967672d697373756560008201527f6420746f6b656e732063616e2062652061646465642074686520746f6b656e2060208201527f746f207468697320726f75746572000000000000000000000000000000000000604082015250565b7f596f752063616e6e6f74206275792077697468203020746f6b656e0000000000600082015250565b7f596f752063616e6e6f742073656c6c203020746f6b656e000000000000000000600082015250565b7f4e65656420612055494420746f6b656e00000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b61202e81611cac565b811461203957600080fd5b50565b61204581611cbe565b811461205057600080fd5b50565b61205c81611cca565b811461206757600080fd5b50565b61207381611cd4565b811461207e57600080fd5b50565b61208a81611d20565b811461209557600080fd5b5056fea2646970667358221220ac79e52f140daf0f4a81c203d00b1fefcd7a53987faa669e44e2c617ecc8f88964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4CBE36CE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x4CBE36CE EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x6C197FF5 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0xCCE7EC13 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x21C JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x27E45C2C EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x15E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x2D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xAF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0xB5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0xFD3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2AB JUMPI POP PUSH2 0x2AA DUP3 PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x370 DUP3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x379 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH2 0x383 DUP4 DUP4 PUSH2 0x1072 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x390 PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x407 DUP3 DUP3 PUSH2 0x115A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x418 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x91D14854 PUSH1 0x0 DUP1 SHL CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45B SWAP3 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x4EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E1 SWAP1 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C2 SWAP1 PUSH2 0x1B44 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x796 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7BA SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST GT PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F1 SWAP1 PUSH2 0x1B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8058425B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x928 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x942 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 PUSH2 0x9AA SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x165E50ED3A693F2FF4DCC70A4835F65CE8E0FBB700BA9C2DDB0AA07E06FA479E DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA0 SWAP1 PUSH2 0x1B24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC48 SWAP3 SWAP2 SWAP1 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1753 JUMP JUMPDEST GT PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCF SWAP1 PUSH2 0x1B64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E873BAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD9E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDC2 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF0D SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4A SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF78 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC676E61B1E79D2FB537A623C39C425429B06C3309E0F79E72AC1DCCC697031B5 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xFC4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFDC DUP3 PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0xFE5 DUP2 PUSH2 0x105E JUMP JUMPDEST PUSH2 0xFEF DUP4 DUP4 PUSH2 0x115A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106F DUP2 PUSH2 0x106A PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x107C DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x114E JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10F3 PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1164 DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST ISZERO PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x11DC PUSH2 0x1152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1245 DUP3 DUP3 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x12D4 JUMPI PUSH2 0x126A DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x1278 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x12D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1289 SWAP3 SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP2 SWAP1 PUSH2 0x1AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x12EB SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x130E JUMPI PUSH2 0x130D PUSH2 0x1E26 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1340 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1378 JUMPI PUSH2 0x1377 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x13DC JUMPI PUSH2 0x13DB PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x1426 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1468 JUMPI PUSH2 0x1467 PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0x1DF7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x14BF SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP1 POP PUSH2 0x1429 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1501 SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1523 DUP2 PUSH2 0x2025 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1538 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154D DUP2 PUSH2 0x2053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x206A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1577 DUP2 PUSH2 0x2081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x158C DUP2 PUSH2 0x2081 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A8 JUMPI PUSH2 0x15A7 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B6 DUP5 DUP3 DUP6 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x15DC JUMPI PUSH2 0x15DB PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15EA DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x15FB DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x160C DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x161D DUP10 DUP3 DUP11 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x162E DUP10 DUP3 DUP11 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x163F DUP10 DUP3 DUP11 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1663 JUMPI PUSH2 0x1662 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1671 DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1682 DUP6 DUP3 DUP7 ADD PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B0 DUP5 DUP3 DUP6 ADD PUSH2 0x1529 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI PUSH2 0x16CE PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16DD DUP5 DUP3 DUP6 ADD PUSH2 0x153E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FC PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x170B DUP6 DUP3 DUP7 ADD PUSH2 0x153E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x171C DUP6 DUP3 DUP7 ADD PUSH2 0x1514 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174A DUP5 DUP3 DUP6 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x1E55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP5 DUP3 DUP6 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1789 DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1798 DUP2 PUSH2 0x1CBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17A7 DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17B6 DUP2 PUSH2 0x1D2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C7 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x17D1 DUP2 DUP6 PUSH2 0x1BAF JUMP JUMPDEST SWAP4 POP PUSH2 0x17E1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST PUSH2 0x17EA DUP2 PUSH2 0x1E5A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1800 DUP3 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x180A DUP2 DUP6 PUSH2 0x1BC0 JUMP JUMPDEST SWAP4 POP PUSH2 0x181A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D3C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1833 PUSH1 0x20 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x183E DUP3 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1856 PUSH1 0x4E DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1861 DUP3 PUSH2 0x1E94 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1879 PUSH1 0x1B DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1884 DUP3 PUSH2 0x1F09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0x17 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BF PUSH1 0x10 DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x18CA DUP3 PUSH2 0x1F5B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E2 PUSH1 0x17 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1905 PUSH1 0x11 DUP4 PUSH2 0x1BC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1910 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1928 PUSH1 0x2F DUP4 PUSH2 0x1BAF JUMP JUMPDEST SWAP2 POP PUSH2 0x1933 DUP3 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1947 DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0x18D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP3 DUP6 PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x196F DUP3 PUSH2 0x18F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 DUP5 PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x199C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19D3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19E0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x19ED PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x19FA PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x193E JUMP JUMPDEST PUSH2 0x1A07 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A26 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1A33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17AD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A4F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x1A5C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x193E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x178F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A93 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x179E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AAE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x179E JUMP JUMPDEST PUSH2 0x1ABB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1780 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 DUP5 PUSH2 0x17BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AFD DUP2 PUSH2 0x1826 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B1D DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B3D DUP2 PUSH2 0x186C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5D DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B7D DUP2 PUSH2 0x18B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B9D DUP2 PUSH2 0x191B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD6 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE1 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1C16 JUMPI PUSH2 0x1C15 PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C2C DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C37 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C47 JUMPI PUSH2 0x1C46 PUSH2 0x1DC8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5D DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP4 PUSH2 0x1D20 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CA1 JUMPI PUSH2 0x1CA0 PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 DUP3 PUSH2 0x1D00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D35 DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D5A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D3F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7A DUP3 PUSH2 0x1D20 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8D PUSH2 0x1D99 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E7320616E64206F6E6C792046726967672D6973737565 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6420746F6B656E732063616E2062652061646465642074686520746F6B656E20 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x746F207468697320726F75746572000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74206275792077697468203020746F6B656E0000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F742073656C6C203020746F6B656E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E65656420612055494420746F6B656E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x202E DUP2 PUSH2 0x1CAC JUMP JUMPDEST DUP2 EQ PUSH2 0x2039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2045 DUP2 PUSH2 0x1CBE JUMP JUMPDEST DUP2 EQ PUSH2 0x2050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x205C DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP2 EQ PUSH2 0x2067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2073 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x207E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x208A DUP2 PUSH2 0x1D20 JUMP JUMPDEST DUP2 EQ PUSH2 0x2095 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC PUSH26 0xE52F140DAF0F4A81C203D00B1FEFCD7A53987FAA669E44E2C617 0xEC 0xC8 0xF8 DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "494:5923:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4391:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1224:46:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;4816:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5925:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2326:769:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5155:1260;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2895:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3568:1185:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5241:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4391:129::-;4465:7;4491:6;:12;4498:4;4491:12;;;;;;;;;;;:22;;;4484:29;;4391:129;;;:::o;1224:46:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4816:145:0:-;4899:18;4912:4;4899:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;5925:214::-;6031:12;:10;:12::i;:::-;6020:23;;:7;:23;;;6012:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;2326:769:8:-;2072:4:0;2577:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;2616:26:8::1;2660:19;2616:64;;2824:11;:19;;;2072:4:0;2844:18:8::0;::::1;2864:10;2824:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2816:142;;;;;;;;;;;;:::i;:::-;;;;;;;;;2999:85;;;;;;;;3009:7;2999:85;;;;;;3018:12;2999:85;;;;;;3032:14;2999:85;;;;3048:12;2999:85;;;;3062:21;2999:85;;;;::::0;2968:9:::1;:30;2978:19;2968:30;;;;;;;;;;;;;;;:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:489;2326:769:::0;;;;;;;:::o;5155:1260::-;5282:1;5258:21;:25;5250:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5410:1;5342:9;:28;5352:17;5342:28;;;;;;;;;;;;;;;:40;;;;;;;;;;;;5333:60;;;5394:10;5405:1;5333:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;5325:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;5447:17;5474;5447:45;;5506:18;5534:9;:28;5544:17;5534:28;;;;;;;;;;;;;;;:49;;;;;;;;;;;;5506:78;;5607:10;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5599:41;;;;;;5655:10;:15;;;5688:10;5716:21;5655:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5917:25;5969:9;:28;5979:17;5969:28;;;;;;;;;;;;;;;:40;;;5945:21;:64;;;;:::i;:::-;5917:92;;6139:11;:24;;;6181:9;:28;6191:17;6181:28;;;;;;;;;;;;;;;:35;;;;;;;;;;;;6235:10;6263:17;6139:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6351:10;6330:74;;;6363:17;6382:21;6330:74;;;;;;;:::i;:::-;;;;;;;;5236:1179;;;5155:1260;;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;2027:49::-;2072:4;2027:49;;;:::o;3568:1185:8:-;3684:1;3665:16;:20;3657:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3861:1;3793:9;:28;3803:17;3793:28;;;;;;;;;;;;;;;:40;;;;;;;;;;;;3784:60;;;3845:10;3856:1;3784:74;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;3776:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;3922:17;3949:9;:28;3959:17;3949:28;;;;;;;;;;;;;;;:49;;;;;;;;;;;;3922:77;;4013:18;4041:17;4013:46;;4132:11;:33;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4124:44;;;;;;4183:10;:23;;;4224:10;4252:9;:28;4262:17;4252:28;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4305:16;4183:156;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4492:25;4539:9;:28;4549:17;4539:28;;;;;;;;;;;;;;;:42;;;4520:16;:61;;;;:::i;:::-;4492:89;;4596:11;:16;;;4613:10;4625:17;4596:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4694:10;4675:67;;;4706:17;4725:16;4675:67;;;;;;;:::i;:::-;;;;;;;;3643:1110;;;3568:1185;;:::o;5241:147:0:-;5325:18;5338:4;5325:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;:::-;5241:147:::0;;;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7474:233::-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7627:4;7595:6;:12;7602:4;7595:12;;;;;;;;;;;:20;;:29;7616:7;7595:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7677:12;:10;:12::i;:::-;7650:40;;7668:7;7650:40;;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;7878:234:0:-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:6;:12;8006:4;7999:12;;;;;;;;;;;:20;;:29;8020:7;7999:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8082:12;:10;:12::i;:::-;8055:40;;8073:7;8055:40;;8067:4;8055:40;;;;;;;;;;7957:149;7878:234;;:::o;3718:492::-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;3989:41;;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4121:13;;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:349;;;;;;;;;;;:::i;:::-;;;;;;;;3801:403;3718:492;;:::o;1652:441:5:-;1727:13;1752:19;1797:1;1788:6;1784:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1752:47;;1809:15;:6;1816:1;1809:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1834;:6;1841:1;1834:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1864:9;1889:1;1880:6;1876:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;1930:12;1951:3;1943:5;:11;1930:25;;;;;;;:::i;:::-;;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;;:37;;;;;;;;;;;1979:1;1969:11;;;;;1899:3;;;;:::i;:::-;;;1859:132;;;;2017:1;2008:5;:10;2000:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:6;2065:21;;;1652:441;;;;:::o;7:139:10:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:137::-;485:5;523:6;510:20;501:29;;539:32;565:5;539:32;:::i;:::-;440:137;;;;:::o;583:139::-;629:5;667:6;654:20;645:29;;683:33;710:5;683:33;:::i;:::-;583:139;;;;:::o;728:143::-;785:5;816:6;810:13;801:22;;832:33;859:5;832:33;:::i;:::-;728:143;;;;:::o;877:329::-;936:6;985:2;973:9;964:7;960:23;956:32;953:119;;;991:79;;:::i;:::-;953:119;1111:1;1136:53;1181:7;1172:6;1161:9;1157:22;1136:53;:::i;:::-;1126:63;;1082:117;877:329;;;;:::o;1212:1057::-;1316:6;1324;1332;1340;1348;1356;1405:3;1393:9;1384:7;1380:23;1376:33;1373:120;;;1412:79;;:::i;:::-;1373:120;1532:1;1557:53;1602:7;1593:6;1582:9;1578:22;1557:53;:::i;:::-;1547:63;;1503:117;1659:2;1685:53;1730:7;1721:6;1710:9;1706:22;1685:53;:::i;:::-;1675:63;;1630:118;1787:2;1813:53;1858:7;1849:6;1838:9;1834:22;1813:53;:::i;:::-;1803:63;;1758:118;1915:2;1941:53;1986:7;1977:6;1966:9;1962:22;1941:53;:::i;:::-;1931:63;;1886:118;2043:3;2070:53;2115:7;2106:6;2095:9;2091:22;2070:53;:::i;:::-;2060:63;;2014:119;2172:3;2199:53;2244:7;2235:6;2224:9;2220:22;2199:53;:::i;:::-;2189:63;;2143:119;1212:1057;;;;;;;;:::o;2275:474::-;2343:6;2351;2400:2;2388:9;2379:7;2375:23;2371:32;2368:119;;;2406:79;;:::i;:::-;2368:119;2526:1;2551:53;2596:7;2587:6;2576:9;2572:22;2551:53;:::i;:::-;2541:63;;2497:117;2653:2;2679:53;2724:7;2715:6;2704:9;2700:22;2679:53;:::i;:::-;2669:63;;2624:118;2275:474;;;;;:::o;2755:345::-;2822:6;2871:2;2859:9;2850:7;2846:23;2842:32;2839:119;;;2877:79;;:::i;:::-;2839:119;2997:1;3022:61;3075:7;3066:6;3055:9;3051:22;3022:61;:::i;:::-;3012:71;;2968:125;2755:345;;;;:::o;3106:329::-;3165:6;3214:2;3202:9;3193:7;3189:23;3185:32;3182:119;;;3220:79;;:::i;:::-;3182:119;3340:1;3365:53;3410:7;3401:6;3390:9;3386:22;3365:53;:::i;:::-;3355:63;;3311:117;3106:329;;;;:::o;3441:474::-;3509:6;3517;3566:2;3554:9;3545:7;3541:23;3537:32;3534:119;;;3572:79;;:::i;:::-;3534:119;3692:1;3717:53;3762:7;3753:6;3742:9;3738:22;3717:53;:::i;:::-;3707:63;;3663:117;3819:2;3845:53;3890:7;3881:6;3870:9;3866:22;3845:53;:::i;:::-;3835:63;;3790:118;3441:474;;;;;:::o;3921:327::-;3979:6;4028:2;4016:9;4007:7;4003:23;3999:32;3996:119;;;4034:79;;:::i;:::-;3996:119;4154:1;4179:52;4223:7;4214:6;4203:9;4199:22;4179:52;:::i;:::-;4169:62;;4125:116;3921:327;;;;:::o;4254:351::-;4324:6;4373:2;4361:9;4352:7;4348:23;4344:32;4341:119;;;4379:79;;:::i;:::-;4341:119;4499:1;4524:64;4580:7;4571:6;4560:9;4556:22;4524:64;:::i;:::-;4514:74;;4470:128;4254:351;;;;:::o;4611:118::-;4698:24;4716:5;4698:24;:::i;:::-;4693:3;4686:37;4611:118;;:::o;4735:109::-;4816:21;4831:5;4816:21;:::i;:::-;4811:3;4804:34;4735:109;;:::o;4850:118::-;4937:24;4955:5;4937:24;:::i;:::-;4932:3;4925:37;4850:118;;:::o;4974:147::-;5069:45;5108:5;5069:45;:::i;:::-;5064:3;5057:58;4974:147;;:::o;5127:364::-;5215:3;5243:39;5276:5;5243:39;:::i;:::-;5298:71;5362:6;5357:3;5298:71;:::i;:::-;5291:78;;5378:52;5423:6;5418:3;5411:4;5404:5;5400:16;5378:52;:::i;:::-;5455:29;5477:6;5455:29;:::i;:::-;5450:3;5446:39;5439:46;;5219:272;5127:364;;;;:::o;5497:377::-;5603:3;5631:39;5664:5;5631:39;:::i;:::-;5686:89;5768:6;5763:3;5686:89;:::i;:::-;5679:96;;5784:52;5829:6;5824:3;5817:4;5810:5;5806:16;5784:52;:::i;:::-;5861:6;5856:3;5852:16;5845:23;;5607:267;5497:377;;;;:::o;5880:366::-;6022:3;6043:67;6107:2;6102:3;6043:67;:::i;:::-;6036:74;;6119:93;6208:3;6119:93;:::i;:::-;6237:2;6232:3;6228:12;6221:19;;5880:366;;;:::o;6252:::-;6394:3;6415:67;6479:2;6474:3;6415:67;:::i;:::-;6408:74;;6491:93;6580:3;6491:93;:::i;:::-;6609:2;6604:3;6600:12;6593:19;;6252:366;;;:::o;6624:::-;6766:3;6787:67;6851:2;6846:3;6787:67;:::i;:::-;6780:74;;6863:93;6952:3;6863:93;:::i;:::-;6981:2;6976:3;6972:12;6965:19;;6624:366;;;:::o;6996:::-;7138:3;7159:67;7223:2;7218:3;7159:67;:::i;:::-;7152:74;;7235:93;7324:3;7235:93;:::i;:::-;7353:2;7348:3;7344:12;7337:19;;6996:366;;;:::o;7368:::-;7510:3;7531:67;7595:2;7590:3;7531:67;:::i;:::-;7524:74;;7607:93;7696:3;7607:93;:::i;:::-;7725:2;7720:3;7716:12;7709:19;;7368:366;;;:::o;7740:402::-;7900:3;7921:85;8003:2;7998:3;7921:85;:::i;:::-;7914:92;;8015:93;8104:3;8015:93;:::i;:::-;8133:2;8128:3;8124:12;8117:19;;7740:402;;;:::o;8148:::-;8308:3;8329:85;8411:2;8406:3;8329:85;:::i;:::-;8322:92;;8423:93;8512:3;8423:93;:::i;:::-;8541:2;8536:3;8532:12;8525:19;;8148:402;;;:::o;8556:366::-;8698:3;8719:67;8783:2;8778:3;8719:67;:::i;:::-;8712:74;;8795:93;8884:3;8795:93;:::i;:::-;8913:2;8908:3;8904:12;8897:19;;8556:366;;;:::o;8928:118::-;9015:24;9033:5;9015:24;:::i;:::-;9010:3;9003:37;8928:118;;:::o;9052:967::-;9434:3;9456:148;9600:3;9456:148;:::i;:::-;9449:155;;9621:95;9712:3;9703:6;9621:95;:::i;:::-;9614:102;;9733:148;9877:3;9733:148;:::i;:::-;9726:155;;9898:95;9989:3;9980:6;9898:95;:::i;:::-;9891:102;;10010:3;10003:10;;9052:967;;;;;:::o;10025:442::-;10174:4;10212:2;10201:9;10197:18;10189:26;;10225:71;10293:1;10282:9;10278:17;10269:6;10225:71;:::i;:::-;10306:72;10374:2;10363:9;10359:18;10350:6;10306:72;:::i;:::-;10388;10456:2;10445:9;10441:18;10432:6;10388:72;:::i;:::-;10025:442;;;;;;:::o;10473:664::-;10678:4;10716:3;10705:9;10701:19;10693:27;;10730:71;10798:1;10787:9;10783:17;10774:6;10730:71;:::i;:::-;10811:72;10879:2;10868:9;10864:18;10855:6;10811:72;:::i;:::-;10893;10961:2;10950:9;10946:18;10937:6;10893:72;:::i;:::-;10975;11043:2;11032:9;11028:18;11019:6;10975:72;:::i;:::-;11057:73;11125:3;11114:9;11110:19;11101:6;11057:73;:::i;:::-;10473:664;;;;;;;;:::o;11143:348::-;11272:4;11310:2;11299:9;11295:18;11287:26;;11323:71;11391:1;11380:9;11376:17;11367:6;11323:71;:::i;:::-;11404:80;11480:2;11469:9;11465:18;11456:6;11404:80;:::i;:::-;11143:348;;;;;:::o;11497:332::-;11618:4;11656:2;11645:9;11641:18;11633:26;;11669:71;11737:1;11726:9;11722:17;11713:6;11669:71;:::i;:::-;11750:72;11818:2;11807:9;11803:18;11794:6;11750:72;:::i;:::-;11497:332;;;;;:::o;11835:210::-;11922:4;11960:2;11949:9;11945:18;11937:26;;11973:65;12035:1;12024:9;12020:17;12011:6;11973:65;:::i;:::-;11835:210;;;;:::o;12051:222::-;12144:4;12182:2;12171:9;12167:18;12159:26;;12195:71;12263:1;12252:9;12248:17;12239:6;12195:71;:::i;:::-;12051:222;;;;:::o;12279:332::-;12400:4;12438:2;12427:9;12423:18;12415:26;;12451:71;12519:1;12508:9;12504:17;12495:6;12451:71;:::i;:::-;12532:72;12600:2;12589:9;12585:18;12576:6;12532:72;:::i;:::-;12279:332;;;;;:::o;12617:313::-;12730:4;12768:2;12757:9;12753:18;12745:26;;12817:9;12811:4;12807:20;12803:1;12792:9;12788:17;12781:47;12845:78;12918:4;12909:6;12845:78;:::i;:::-;12837:86;;12617:313;;;;:::o;12936:419::-;13102:4;13140:2;13129:9;13125:18;13117:26;;13189:9;13183:4;13179:20;13175:1;13164:9;13160:17;13153:47;13217:131;13343:4;13217:131;:::i;:::-;13209:139;;12936:419;;;:::o;13361:::-;13527:4;13565:2;13554:9;13550:18;13542:26;;13614:9;13608:4;13604:20;13600:1;13589:9;13585:17;13578:47;13642:131;13768:4;13642:131;:::i;:::-;13634:139;;13361:419;;;:::o;13786:::-;13952:4;13990:2;13979:9;13975:18;13967:26;;14039:9;14033:4;14029:20;14025:1;14014:9;14010:17;14003:47;14067:131;14193:4;14067:131;:::i;:::-;14059:139;;13786:419;;;:::o;14211:::-;14377:4;14415:2;14404:9;14400:18;14392:26;;14464:9;14458:4;14454:20;14450:1;14439:9;14435:17;14428:47;14492:131;14618:4;14492:131;:::i;:::-;14484:139;;14211:419;;;:::o;14636:::-;14802:4;14840:2;14829:9;14825:18;14817:26;;14889:9;14883:4;14879:20;14875:1;14864:9;14860:17;14853:47;14917:131;15043:4;14917:131;:::i;:::-;14909:139;;14636:419;;;:::o;15061:::-;15227:4;15265:2;15254:9;15250:18;15242:26;;15314:9;15308:4;15304:20;15300:1;15289:9;15285:17;15278:47;15342:131;15468:4;15342:131;:::i;:::-;15334:139;;15061:419;;;:::o;15567:99::-;15619:6;15653:5;15647:12;15637:22;;15567:99;;;:::o;15672:169::-;15756:11;15790:6;15785:3;15778:19;15830:4;15825:3;15821:14;15806:29;;15672:169;;;;:::o;15847:148::-;15949:11;15986:3;15971:18;;15847:148;;;;:::o;16001:305::-;16041:3;16060:20;16078:1;16060:20;:::i;:::-;16055:25;;16094:20;16112:1;16094:20;:::i;:::-;16089:25;;16248:1;16180:66;16176:74;16173:1;16170:81;16167:107;;;16254:18;;:::i;:::-;16167:107;16298:1;16295;16291:9;16284:16;;16001:305;;;;:::o;16312:185::-;16352:1;16369:20;16387:1;16369:20;:::i;:::-;16364:25;;16403:20;16421:1;16403:20;:::i;:::-;16398:25;;16442:1;16432:35;;16447:18;;:::i;:::-;16432:35;16489:1;16486;16482:9;16477:14;;16312:185;;;;:::o;16503:348::-;16543:7;16566:20;16584:1;16566:20;:::i;:::-;16561:25;;16600:20;16618:1;16600:20;:::i;:::-;16595:25;;16788:1;16720:66;16716:74;16713:1;16710:81;16705:1;16698:9;16691:17;16687:105;16684:131;;;16795:18;;:::i;:::-;16684:131;16843:1;16840;16836:9;16825:20;;16503:348;;;;:::o;16857:96::-;16894:7;16923:24;16941:5;16923:24;:::i;:::-;16912:35;;16857:96;;;:::o;16959:90::-;16993:7;17036:5;17029:13;17022:21;17011:32;;16959:90;;;:::o;17055:77::-;17092:7;17121:5;17110:16;;17055:77;;;:::o;17138:149::-;17174:7;17214:66;17207:5;17203:78;17192:89;;17138:149;;;:::o;17293:126::-;17330:7;17370:42;17363:5;17359:54;17348:65;;17293:126;;;:::o;17425:77::-;17462:7;17491:5;17480:16;;17425:77;;;:::o;17508:121::-;17566:9;17599:24;17617:5;17599:24;:::i;:::-;17586:37;;17508:121;;;:::o;17635:307::-;17703:1;17713:113;17727:6;17724:1;17721:13;17713:113;;;17812:1;17807:3;17803:11;17797:18;17793:1;17788:3;17784:11;17777:39;17749:2;17746:1;17742:10;17737:15;;17713:113;;;17844:6;17841:1;17838:13;17835:101;;;17924:1;17915:6;17910:3;17906:16;17899:27;17835:101;17684:258;17635:307;;;:::o;17948:171::-;17987:3;18010:24;18028:5;18010:24;:::i;:::-;18001:33;;18056:4;18049:5;18046:15;18043:41;;;18064:18;;:::i;:::-;18043:41;18111:1;18104:5;18100:13;18093:20;;17948:171;;;:::o;18125:180::-;18173:77;18170:1;18163:88;18270:4;18267:1;18260:15;18294:4;18291:1;18284:15;18311:180;18359:77;18356:1;18349:88;18456:4;18453:1;18446:15;18480:4;18477:1;18470:15;18497:180;18545:77;18542:1;18535:88;18642:4;18639:1;18632:15;18666:4;18663:1;18656:15;18683:180;18731:77;18728:1;18721:88;18828:4;18825:1;18818:15;18852:4;18849:1;18842:15;18992:117;19101:1;19098;19091:12;19115:102;19156:6;19207:2;19203:7;19198:2;19191:5;19187:14;19183:28;19173:38;;19115:102;;;:::o;19223:182::-;19363:34;19359:1;19351:6;19347:14;19340:58;19223:182;:::o;19411:302::-;19551:34;19547:1;19539:6;19535:14;19528:58;19620:34;19615:2;19607:6;19603:15;19596:59;19689:16;19684:2;19676:6;19672:15;19665:41;19411:302;:::o;19719:177::-;19859:29;19855:1;19847:6;19843:14;19836:53;19719:177;:::o;19902:173::-;20042:25;20038:1;20030:6;20026:14;20019:49;19902:173;:::o;20081:166::-;20221:18;20217:1;20209:6;20205:14;20198:42;20081:166;:::o;20253:173::-;20393:25;20389:1;20381:6;20377:14;20370:49;20253:173;:::o;20432:167::-;20572:19;20568:1;20560:6;20556:14;20549:43;20432:167;:::o;20605:234::-;20745:34;20741:1;20733:6;20729:14;20722:58;20814:17;20809:2;20801:6;20797:15;20790:42;20605:234;:::o;20845:122::-;20918:24;20936:5;20918:24;:::i;:::-;20911:5;20908:35;20898:63;;20957:1;20954;20947:12;20898:63;20845:122;:::o;20973:116::-;21043:21;21058:5;21043:21;:::i;:::-;21036:5;21033:32;21023:60;;21079:1;21076;21069:12;21023:60;20973:116;:::o;21095:122::-;21168:24;21186:5;21168:24;:::i;:::-;21161:5;21158:35;21148:63;;21207:1;21204;21197:12;21148:63;21095:122;:::o;21223:120::-;21295:23;21312:5;21295:23;:::i;:::-;21288:5;21285:34;21275:62;;21333:1;21330;21323:12;21275:62;21223:120;:::o;21349:122::-;21422:24;21440:5;21422:24;:::i;:::-;21415:5;21412:35;21402:63;;21461:1;21458;21451:12;21402:63;21349:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1679600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "401",
								"add(address,address,address,uint256,uint256,address)": "infinite",
								"buy(address,uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3184",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"sell(address,uint256)": "infinite",
								"supportsInterface(bytes4)": "728",
								"tokenData(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 757,
									"end": 851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 803,
									"end": 844,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 832,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 814,
									"end": 832,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 834,
									"end": 843,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 803,
									"end": 813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 803,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 803,
									"end": 813,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 803,
									"end": 844,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 803,
									"end": 844,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 803,
									"end": 844,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 803,
									"end": 844,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 803,
									"end": 844,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 757,
									"end": 851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7565,
									"end": 7569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7571,
									"end": 7578,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7557,
									"end": 7564,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7557,
									"end": 7579,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7627,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7595,
									"end": 7601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7602,
									"end": 7606,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7607,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7615,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7616,
									"end": 7623,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7595,
									"end": 7631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7677,
									"end": 7687,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7677,
									"end": 7689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7668,
									"end": 7675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7662,
									"end": 7666,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7650,
									"end": 7690,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7552,
									"end": 7701,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7474,
									"end": 7707,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 10,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 10,
									"value": "[out]"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 494,
									"end": 6417,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac79e52f140daf0f4a81c203d00b1fefcd7a53987faa669e44e2c617ecc8f88964736f6c63430008070033",
									".code": [
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "4CBE36CE"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "4CBE36CE"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "6C197FF5"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "CCE7EC13"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "27E45C2C"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 494,
											"end": 6417,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4465,
											"end": 4472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4491,
											"end": 4503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4484,
											"end": 4513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1270,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4912,
											"end": 4916,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4899,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4899,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4929,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4816,
											"end": 4961,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6031,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6031,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6020,
											"end": 6043,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6012,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6124,
											"end": 6131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6106,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6106,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5925,
											"end": 6139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2616,
											"end": 2642,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2843,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2843,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2843,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2862,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2874,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2824,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2816,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3016,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3046,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3062,
											"end": 3083,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2997,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2998,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 3084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 3095,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5258,
											"end": 5283,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 5250,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5369,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5370,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5393,
											"name": "PUSH",
											"source": 8,
											"value": "FDD58E"
										},
										{
											"begin": 5394,
											"end": 5404,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5333,
											"end": 5411,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5325,
											"end": 5432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5524,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 5561,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5562,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5534,
											"end": 5583,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "8058425B"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 5599,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5670,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5670,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5670,
											"name": "PUSH",
											"source": 8,
											"value": "9DC29FAC"
										},
										{
											"begin": 5688,
											"end": 5698,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5716,
											"end": 5737,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5917,
											"end": 5942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5996,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5997,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 6009,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 5969,
											"end": 6009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5969,
											"end": 6009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 5966,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5945,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5917,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5917,
											"end": 6009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6139,
											"end": 6163,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6163,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 6181,
											"end": 6190,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6208,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6209,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6181,
											"end": 6216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6235,
											"end": 6245,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6263,
											"end": 6280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6139,
											"end": 6298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6351,
											"end": 6361,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH",
											"source": 8,
											"value": "165E50ED3A693F2FF4DCC70A4835F65CE8E0FBB700BA9C2DDB0AA07E06FA479E"
										},
										{
											"begin": 6363,
											"end": 6380,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6403,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6330,
											"end": 6404,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 6415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 6415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 6415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5155,
											"end": 6415,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3681,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3685,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3862,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3793,
											"end": 3833,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH",
											"source": 8,
											"value": "FDD58E"
										},
										{
											"begin": 3845,
											"end": 3855,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3784,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3862,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3776,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3958,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3976,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3949,
											"end": 3998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3922,
											"end": 3999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4059,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4059,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4143,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4165,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4165,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4165,
											"name": "PUSH",
											"source": 8,
											"value": "2E873BAC"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 4132,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 4124,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4193,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4206,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4206,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 4224,
											"end": 4234,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4261,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4279,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4280,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4287,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4305,
											"end": 4321,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4566,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4567,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4581,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4539,
											"end": 4581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4581,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4536,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 4520,
											"end": 4581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4581,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4492,
											"end": 4581,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4612,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 4613,
											"end": 4623,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4642,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "C676E61B1E79D2FB537A623C39C425429B06C3309E0F79E72AC1DCCC697031B5"
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4741,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4742,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 4753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 4753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 4753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 4753,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5367,
											"end": 5371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5373,
											"end": 5380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5355,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5241,
											"end": 5388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7565,
											"end": 7569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7571,
											"end": 7578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7557,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7627,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7595,
											"end": 7601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7607,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7677,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7662,
											"end": 7666,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7552,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7474,
											"end": 7707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7969,
											"end": 7973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7975,
											"end": 7982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7961,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8031,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7999,
											"end": 8036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8082,
											"end": 8092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 7957,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7878,
											"end": 8112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4027,
											"end": 4029,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3989,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4101,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3801,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1740,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1752,
											"end": 1771,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1784,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1752,
											"end": 1799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1809,
											"end": 1815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1876,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1942,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1954,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 1930,
											"end": 1955,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2013,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2000,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 2093,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 577,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 440,
											"end": 577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 485,
											"end": 490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 530,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 501,
											"end": 530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 501,
											"end": 530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 539,
											"end": 571,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 539,
											"end": 571,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 539,
											"end": 571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 440,
											"end": 577,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 440,
											"end": 577,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 440,
											"end": 577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 440,
											"end": 577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 440,
											"end": 577,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 722,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 583,
											"end": 722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 629,
											"end": 634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 654,
											"end": 674,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 645,
											"end": 674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 645,
											"end": 674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 683,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 710,
											"end": 715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 683,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 683,
											"end": 716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 583,
											"end": 722,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 583,
											"end": 722,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 583,
											"end": 722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 583,
											"end": 722,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 583,
											"end": 722,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 728,
											"end": 871,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 728,
											"end": 871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 810,
											"end": 823,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 801,
											"end": 823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 832,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 832,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 832,
											"end": 865,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 832,
											"end": 865,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 832,
											"end": 865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 728,
											"end": 871,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 728,
											"end": 871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 728,
											"end": 871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 728,
											"end": 871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 728,
											"end": 871,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 936,
											"end": 942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 960,
											"end": 983,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 956,
											"end": 988,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 953,
											"end": 1072,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 953,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 953,
											"end": 1072,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 991,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 991,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 991,
											"end": 1070,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 991,
											"end": 1070,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 991,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 953,
											"end": 1072,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 953,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1111,
											"end": 1112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1181,
											"end": 1188,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1189,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1126,
											"end": 1189,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1082,
											"end": 1199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 877,
											"end": 1206,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1316,
											"end": 1322,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1408,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1403,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1409,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1412,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 1412,
											"end": 1491,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1412,
											"end": 1491,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 1412,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 1373,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1602,
											"end": 1609,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1578,
											"end": 1600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 1557,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1610,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1503,
											"end": 1620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1730,
											"end": 1737,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1706,
											"end": 1728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1685,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1685,
											"end": 1738,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1685,
											"end": 1738,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1685,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1738,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1630,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1858,
											"end": 1865,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1813,
											"end": 1866,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1866,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 1813,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1866,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1758,
											"end": 1876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1941,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1986,
											"end": 1993,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1975,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 1984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1941,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 1941,
											"end": 1994,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 1994,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 1941,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 1994,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 1994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2070,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2115,
											"end": 2122,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2104,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2113,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2070,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2070,
											"end": 2123,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2070,
											"end": 2123,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2070,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2123,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2060,
											"end": 2123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2014,
											"end": 2133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2175,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2244,
											"end": 2251,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2224,
											"end": 2233,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 2199,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2189,
											"end": 2252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2262,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 2269,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2400,
											"end": 2402,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2398,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2371,
											"end": 2403,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2368,
											"end": 2487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2406,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2406,
											"end": 2485,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2485,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 2406,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2487,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2368,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2596,
											"end": 2603,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2576,
											"end": 2585,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2572,
											"end": 2594,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 2551,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2604,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2497,
											"end": 2614,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2653,
											"end": 2655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2724,
											"end": 2731,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2704,
											"end": 2713,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2722,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2624,
											"end": 2742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2749,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2869,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2958,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2839,
											"end": 2958,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2877,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2958,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2839,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 3022,
											"end": 3083,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3022,
											"end": 3083,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3022,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 3100,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3193,
											"end": 3200,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3212,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3185,
											"end": 3217,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3220,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3182,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3410,
											"end": 3417,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3386,
											"end": 3408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3365,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3418,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3355,
											"end": 3418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3311,
											"end": 3428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3435,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3564,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3569,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 3572,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 3534,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3759,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3738,
											"end": 3760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 3717,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 3845,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3790,
											"end": 3908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3441,
											"end": 3915,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3979,
											"end": 3985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4030,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4014,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4003,
											"end": 4026,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3999,
											"end": 4031,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4115,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3996,
											"end": 4115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4034,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4034,
											"end": 4113,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4034,
											"end": 4113,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 4034,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4115,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 3996,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4154,
											"end": 4155,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4223,
											"end": 4230,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4199,
											"end": 4221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4179,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4179,
											"end": 4231,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4231,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 4179,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4125,
											"end": 4241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3921,
											"end": 4248,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4352,
											"end": 4359,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4371,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4376,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 4379,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 4341,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4580,
											"end": 4587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4556,
											"end": 4578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4524,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 4524,
											"end": 4588,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4524,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 4524,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4254,
											"end": 4605,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4611,
											"end": 4729,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 4611,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4716,
											"end": 4721,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4698,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 4698,
											"end": 4722,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4698,
											"end": 4722,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 4698,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4723,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4611,
											"end": 4729,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4735,
											"end": 4844,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 4735,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4831,
											"end": 4836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4804,
											"end": 4838,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4844,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4955,
											"end": 4960,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4932,
											"end": 4935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4962,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4968,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 4974,
											"end": 5121,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 4974,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5108,
											"end": 5113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 5069,
											"end": 5114,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5069,
											"end": 5114,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 5069,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5064,
											"end": 5067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5057,
											"end": 5115,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5121,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 5121,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5276,
											"end": 5281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 5243,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5362,
											"end": 5368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5360,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5298,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 5298,
											"end": 5369,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5298,
											"end": 5369,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 5298,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5291,
											"end": 5369,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5291,
											"end": 5369,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5423,
											"end": 5429,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5411,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5404,
											"end": 5409,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5400,
											"end": 5416,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5455,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5455,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 5455,
											"end": 5484,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5455,
											"end": 5484,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 5455,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5450,
											"end": 5453,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5446,
											"end": 5485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5439,
											"end": 5485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5219,
											"end": 5491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5491,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5664,
											"end": 5669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5631,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 5631,
											"end": 5670,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5631,
											"end": 5670,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 5631,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5766,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5686,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5686,
											"end": 5775,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 5686,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5775,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5824,
											"end": 5827,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5821,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5815,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 5784,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5867,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5852,
											"end": 5868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5845,
											"end": 5868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5607,
											"end": 5874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5497,
											"end": 5874,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6022,
											"end": 6025,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6102,
											"end": 6105,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6043,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6043,
											"end": 6110,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6043,
											"end": 6110,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 6043,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6110,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6110,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 6208,
											"end": 6211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6119,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 6119,
											"end": 6212,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6119,
											"end": 6212,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 6119,
											"end": 6212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6237,
											"end": 6239,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6235,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6221,
											"end": 6240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5880,
											"end": 6246,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6479,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 6474,
											"end": 6477,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6415,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6415,
											"end": 6482,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6482,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 6415,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6482,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 6491,
											"end": 6584,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6491,
											"end": 6584,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 6491,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6604,
											"end": 6607,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6600,
											"end": 6612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6593,
											"end": 6612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6252,
											"end": 6618,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6851,
											"end": 6853,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 6984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6965,
											"end": 6984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7141,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 7223,
											"end": 7225,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 7218,
											"end": 7221,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7159,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7159,
											"end": 7226,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7159,
											"end": 7226,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 7159,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7226,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7152,
											"end": 7226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7324,
											"end": 7327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 7235,
											"end": 7328,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7235,
											"end": 7328,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7235,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7353,
											"end": 7355,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7351,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7344,
											"end": 7356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6996,
											"end": 7362,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7510,
											"end": 7513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7531,
											"end": 7598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 7531,
											"end": 7598,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7531,
											"end": 7598,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7531,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7598,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7696,
											"end": 7699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 7607,
											"end": 7700,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7607,
											"end": 7700,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7607,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7725,
											"end": 7727,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7728,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7368,
											"end": 7734,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7900,
											"end": 7903,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8003,
											"end": 8005,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 7998,
											"end": 8001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 8006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 7921,
											"end": 8006,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 7921,
											"end": 8006,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 7921,
											"end": 8006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7914,
											"end": 8006,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7914,
											"end": 8006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8104,
											"end": 8107,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8015,
											"end": 8108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 8015,
											"end": 8108,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8108,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8015,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 8128,
											"end": 8131,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7740,
											"end": 8142,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8329,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8411,
											"end": 8413,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8406,
											"end": 8409,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8329,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 8329,
											"end": 8414,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8329,
											"end": 8414,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8329,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8512,
											"end": 8515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8423,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 8423,
											"end": 8516,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8423,
											"end": 8516,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 8423,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8543,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8536,
											"end": 8539,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8532,
											"end": 8544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8148,
											"end": 8550,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8783,
											"end": 8785,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 8778,
											"end": 8781,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8719,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 8719,
											"end": 8786,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8719,
											"end": 8786,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8719,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8786,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8884,
											"end": 8887,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 8795,
											"end": 8888,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 8795,
											"end": 8888,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 8795,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8915,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8908,
											"end": 8911,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8904,
											"end": 8916,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8556,
											"end": 8922,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 8928,
											"end": 9046,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 8928,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9033,
											"end": 9038,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9015,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 9015,
											"end": 9039,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9015,
											"end": 9039,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 9015,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9010,
											"end": 9013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9003,
											"end": 9040,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 9046,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9600,
											"end": 9603,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9456,
											"end": 9604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 9456,
											"end": 9604,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9456,
											"end": 9604,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 9456,
											"end": 9604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9449,
											"end": 9604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9449,
											"end": 9604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9712,
											"end": 9715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9621,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9621,
											"end": 9716,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9621,
											"end": 9716,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9621,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9614,
											"end": 9716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9877,
											"end": 9880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 9733,
											"end": 9881,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9733,
											"end": 9881,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9733,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9881,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9726,
											"end": 9881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9989,
											"end": 9992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 9986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9993,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 9898,
											"end": 9993,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 9898,
											"end": 9993,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9898,
											"end": 9993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9993,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9891,
											"end": 9993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10010,
											"end": 10013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10003,
											"end": 10013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9052,
											"end": 10019,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10174,
											"end": 10178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10212,
											"end": 10214,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10201,
											"end": 10210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10197,
											"end": 10215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10189,
											"end": 10215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10293,
											"end": 10294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10282,
											"end": 10291,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10278,
											"end": 10295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10225,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10225,
											"end": 10296,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10225,
											"end": 10296,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 10225,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10374,
											"end": 10376,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10363,
											"end": 10372,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10306,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10306,
											"end": 10378,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10306,
											"end": 10378,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 10306,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10456,
											"end": 10458,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10445,
											"end": 10454,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10432,
											"end": 10438,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10388,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10388,
											"end": 10460,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10388,
											"end": 10460,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 10388,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10025,
											"end": 10467,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10716,
											"end": 10719,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10705,
											"end": 10714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10730,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10798,
											"end": 10799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10787,
											"end": 10796,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10780,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10730,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10730,
											"end": 10801,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10730,
											"end": 10801,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 10730,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10879,
											"end": 10881,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10861,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 10811,
											"end": 10883,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10811,
											"end": 10883,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 10811,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10893,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10961,
											"end": 10963,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10950,
											"end": 10959,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10943,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10893,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10893,
											"end": 10965,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10893,
											"end": 10965,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 10893,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11032,
											"end": 11041,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11019,
											"end": 11025,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11125,
											"end": 11128,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11114,
											"end": 11123,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11110,
											"end": 11129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11107,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11057,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10473,
											"end": 11137,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11310,
											"end": 11312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11299,
											"end": 11308,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11287,
											"end": 11313,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11323,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11391,
											"end": 11392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11380,
											"end": 11389,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11376,
											"end": 11393,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11367,
											"end": 11373,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11323,
											"end": 11394,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11323,
											"end": 11394,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11323,
											"end": 11394,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11323,
											"end": 11394,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11469,
											"end": 11478,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11456,
											"end": 11462,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11484,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 11404,
											"end": 11484,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11484,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 11404,
											"end": 11484,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11491,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11618,
											"end": 11622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11656,
											"end": 11658,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11633,
											"end": 11659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11737,
											"end": 11738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11726,
											"end": 11735,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11713,
											"end": 11719,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11669,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11669,
											"end": 11740,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11669,
											"end": 11740,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 11669,
											"end": 11740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11750,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11818,
											"end": 11820,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11807,
											"end": 11816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11803,
											"end": 11821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11794,
											"end": 11800,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11750,
											"end": 11822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 11750,
											"end": 11822,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11750,
											"end": 11822,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 11750,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11497,
											"end": 11829,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11922,
											"end": 11926,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11960,
											"end": 11962,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11949,
											"end": 11958,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 11963,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11937,
											"end": 11963,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12033,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12020,
											"end": 12037,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12011,
											"end": 12017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11973,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11973,
											"end": 12038,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 11973,
											"end": 12038,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 11973,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11835,
											"end": 12045,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12144,
											"end": 12148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12182,
											"end": 12184,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12171,
											"end": 12180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12167,
											"end": 12185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12159,
											"end": 12185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12263,
											"end": 12264,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12252,
											"end": 12261,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12248,
											"end": 12265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12239,
											"end": 12245,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12195,
											"end": 12266,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12195,
											"end": 12266,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12195,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12273,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12400,
											"end": 12404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12438,
											"end": 12440,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12427,
											"end": 12436,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12441,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12415,
											"end": 12441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12415,
											"end": 12441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12519,
											"end": 12520,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12504,
											"end": 12521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12495,
											"end": 12501,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12600,
											"end": 12602,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12576,
											"end": 12582,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 12532,
											"end": 12604,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12532,
											"end": 12604,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12532,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12279,
											"end": 12611,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "tag",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12730,
											"end": 12734,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12768,
											"end": 12770,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12757,
											"end": 12766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12745,
											"end": 12771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12745,
											"end": 12771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12817,
											"end": 12826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12807,
											"end": 12827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12788,
											"end": 12805,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12845,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12845,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 12845,
											"end": 12923,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 12845,
											"end": 12923,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 12845,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12837,
											"end": 12923,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12837,
											"end": 12923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12617,
											"end": 12930,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13142,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13129,
											"end": 13138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13117,
											"end": 13143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13189,
											"end": 13198,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13183,
											"end": 13187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13179,
											"end": 13199,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13175,
											"end": 13176,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13164,
											"end": 13173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13160,
											"end": 13177,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13217,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 13217,
											"end": 13348,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13217,
											"end": 13348,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 13217,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13209,
											"end": 13348,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13209,
											"end": 13348,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12936,
											"end": 13355,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13527,
											"end": 13531,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13565,
											"end": 13567,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13554,
											"end": 13563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13542,
											"end": 13568,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13542,
											"end": 13568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13614,
											"end": 13623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13608,
											"end": 13612,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13604,
											"end": 13624,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13600,
											"end": 13601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13589,
											"end": 13598,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13578,
											"end": 13625,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13768,
											"end": 13772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13642,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 13642,
											"end": 13773,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 13642,
											"end": 13773,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 13642,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13634,
											"end": 13773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13780,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13952,
											"end": 13956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13990,
											"end": 13992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13979,
											"end": 13988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 13993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 13993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13967,
											"end": 13993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14033,
											"end": 14037,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14025,
											"end": 14026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14010,
											"end": 14027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14003,
											"end": 14050,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14193,
											"end": 14197,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14067,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 14067,
											"end": 14198,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14067,
											"end": 14198,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 14067,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13786,
											"end": 14205,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14377,
											"end": 14381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14415,
											"end": 14417,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14404,
											"end": 14413,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14400,
											"end": 14418,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14464,
											"end": 14473,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14458,
											"end": 14462,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14454,
											"end": 14474,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14450,
											"end": 14451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14439,
											"end": 14448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14452,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14428,
											"end": 14475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14618,
											"end": 14622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14492,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 14492,
											"end": 14623,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14492,
											"end": 14623,
											"name": "tag",
											"source": 10,
											"value": "389"
										},
										{
											"begin": 14492,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14484,
											"end": 14623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14484,
											"end": 14623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14211,
											"end": 14630,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14802,
											"end": 14806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14840,
											"end": 14842,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14829,
											"end": 14838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14817,
											"end": 14843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14889,
											"end": 14898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14883,
											"end": 14887,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14879,
											"end": 14899,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14875,
											"end": 14876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14864,
											"end": 14873,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14860,
											"end": 14877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14853,
											"end": 14900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 15043,
											"end": 15047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 15048,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 14917,
											"end": 15048,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 14917,
											"end": 15048,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14917,
											"end": 15048,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 15048,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14909,
											"end": 15048,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14636,
											"end": 15055,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15227,
											"end": 15231,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15265,
											"end": 15267,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15254,
											"end": 15263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15268,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15268,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15314,
											"end": 15323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15304,
											"end": 15324,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15300,
											"end": 15301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15289,
											"end": 15298,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15285,
											"end": 15302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15278,
											"end": 15325,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15342,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 15468,
											"end": 15472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15342,
											"end": 15473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 15342,
											"end": 15473,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 15342,
											"end": 15473,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 15342,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15334,
											"end": 15473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15061,
											"end": 15480,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15619,
											"end": 15625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15653,
											"end": 15658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15647,
											"end": 15659,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15637,
											"end": 15659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15567,
											"end": 15666,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15756,
											"end": 15767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15790,
											"end": 15796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15785,
											"end": 15788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15778,
											"end": 15797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15830,
											"end": 15834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15825,
											"end": 15828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15821,
											"end": 15835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15806,
											"end": 15835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15806,
											"end": 15835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15672,
											"end": 15841,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15949,
											"end": 15960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15971,
											"end": 15989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15847,
											"end": 15995,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16041,
											"end": 16044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16060,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16078,
											"end": 16079,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16060,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16060,
											"end": 16080,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16060,
											"end": 16080,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 16060,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16055,
											"end": 16080,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16055,
											"end": 16080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 16112,
											"end": 16113,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 16094,
											"end": 16114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16114,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 16114,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16248,
											"end": 16249,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16180,
											"end": 16246,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16176,
											"end": 16250,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16173,
											"end": 16174,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16170,
											"end": 16251,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16167,
											"end": 16274,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16167,
											"end": 16274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 16167,
											"end": 16274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 16254,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16167,
											"end": 16274,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 16167,
											"end": 16274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16298,
											"end": 16299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16295,
											"end": 16296,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16291,
											"end": 16300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16284,
											"end": 16300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16284,
											"end": 16300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16001,
											"end": 16306,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16352,
											"end": 16353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 16387,
											"end": 16388,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 16369,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16421,
											"end": 16422,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16403,
											"end": 16423,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16403,
											"end": 16423,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 16403,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16423,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16398,
											"end": 16423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16442,
											"end": 16443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 16432,
											"end": 16467,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 16447,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16467,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 16432,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16489,
											"end": 16490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16482,
											"end": 16491,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16477,
											"end": 16491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16477,
											"end": 16491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16312,
											"end": 16497,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16543,
											"end": 16550,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16566,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 16584,
											"end": 16585,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16566,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16566,
											"end": 16586,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16566,
											"end": 16586,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 16566,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16561,
											"end": 16586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16561,
											"end": 16586,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16618,
											"end": 16619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 16600,
											"end": 16620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16595,
											"end": 16620,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16595,
											"end": 16620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16788,
											"end": 16789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16720,
											"end": 16786,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16716,
											"end": 16790,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16713,
											"end": 16714,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16710,
											"end": 16791,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16705,
											"end": 16706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16698,
											"end": 16707,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16691,
											"end": 16708,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16687,
											"end": 16792,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16815,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16815,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 16684,
											"end": 16815,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16795,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 16795,
											"end": 16813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 16795,
											"end": 16813,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16795,
											"end": 16813,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 16795,
											"end": 16813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16684,
											"end": 16815,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 16684,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16843,
											"end": 16844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16840,
											"end": 16841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16836,
											"end": 16845,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16825,
											"end": 16845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16825,
											"end": 16845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16503,
											"end": 16851,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16894,
											"end": 16901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16923,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 16941,
											"end": 16946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16923,
											"end": 16947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 16923,
											"end": 16947,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 16923,
											"end": 16947,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 16923,
											"end": 16947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16912,
											"end": 16947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16912,
											"end": 16947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16857,
											"end": 16953,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16993,
											"end": 17000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17036,
											"end": 17041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17029,
											"end": 17042,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17022,
											"end": 17043,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17011,
											"end": 17043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17011,
											"end": 17043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16959,
											"end": 17049,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17092,
											"end": 17099,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17121,
											"end": 17126,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17110,
											"end": 17126,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17110,
											"end": 17126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17132,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17174,
											"end": 17181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17280,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17207,
											"end": 17212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17203,
											"end": 17281,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17281,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17192,
											"end": 17281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17287,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17330,
											"end": 17337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17370,
											"end": 17412,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17363,
											"end": 17368,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17359,
											"end": 17413,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17348,
											"end": 17413,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17348,
											"end": 17413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17293,
											"end": 17419,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17462,
											"end": 17469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17491,
											"end": 17496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17480,
											"end": 17496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17480,
											"end": 17496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17425,
											"end": 17502,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17599,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 17617,
											"end": 17622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17599,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 17599,
											"end": 17623,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 17599,
											"end": 17623,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 17599,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17508,
											"end": 17629,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17703,
											"end": 17704,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17727,
											"end": 17733,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17724,
											"end": 17725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17721,
											"end": 17734,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17812,
											"end": 17813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 17807,
											"end": 17810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17803,
											"end": 17814,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17797,
											"end": 17815,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17788,
											"end": 17791,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17784,
											"end": 17795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17777,
											"end": 17816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17749,
											"end": 17751,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17746,
											"end": 17747,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 17752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17737,
											"end": 17752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 17713,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17844,
											"end": 17850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17841,
											"end": 17842,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17838,
											"end": 17851,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17936,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 17835,
											"end": 17936,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17924,
											"end": 17925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17915,
											"end": 17921,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17910,
											"end": 17913,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17906,
											"end": 17922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17899,
											"end": 17926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17835,
											"end": 17936,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 17835,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17684,
											"end": 17942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17635,
											"end": 17942,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17987,
											"end": 17990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18010,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 18028,
											"end": 18033,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18010,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 18010,
											"end": 18034,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18010,
											"end": 18034,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 18010,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18001,
											"end": 18034,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18001,
											"end": 18034,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18056,
											"end": 18060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18046,
											"end": 18061,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 18043,
											"end": 18084,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 18043,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 18043,
											"end": 18084,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18043,
											"end": 18084,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 18043,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18111,
											"end": 18112,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 18104,
											"end": 18109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18113,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18093,
											"end": 18113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18093,
											"end": 18113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17948,
											"end": 18119,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 18125,
											"end": 18305,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 18125,
											"end": 18305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18173,
											"end": 18250,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18170,
											"end": 18171,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18163,
											"end": 18251,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18270,
											"end": 18274,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 18267,
											"end": 18268,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18260,
											"end": 18275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18294,
											"end": 18298,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18291,
											"end": 18292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18284,
											"end": 18299,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18491,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 18311,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18359,
											"end": 18436,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18356,
											"end": 18357,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18349,
											"end": 18437,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18456,
											"end": 18460,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 18453,
											"end": 18454,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18446,
											"end": 18461,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18480,
											"end": 18484,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18470,
											"end": 18485,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18497,
											"end": 18677,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 18497,
											"end": 18677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18545,
											"end": 18622,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18542,
											"end": 18543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18535,
											"end": 18623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18642,
											"end": 18646,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 18639,
											"end": 18640,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18632,
											"end": 18647,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18666,
											"end": 18670,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18663,
											"end": 18664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18656,
											"end": 18671,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18683,
											"end": 18863,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 18683,
											"end": 18863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18731,
											"end": 18808,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18728,
											"end": 18729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18721,
											"end": 18809,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18828,
											"end": 18832,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 18825,
											"end": 18826,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18818,
											"end": 18833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18852,
											"end": 18856,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18849,
											"end": 18850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18842,
											"end": 18857,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 18992,
											"end": 19109,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 18992,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19101,
											"end": 19102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19098,
											"end": 19099,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19091,
											"end": 19103,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19156,
											"end": 19162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19207,
											"end": 19209,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19203,
											"end": 19210,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 19198,
											"end": 19200,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19191,
											"end": 19196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19187,
											"end": 19201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19183,
											"end": 19211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19173,
											"end": 19211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19173,
											"end": 19211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19115,
											"end": 19217,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19223,
											"end": 19405,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 19223,
											"end": 19405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19363,
											"end": 19397,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 19359,
											"end": 19360,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19351,
											"end": 19357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19347,
											"end": 19361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19340,
											"end": 19398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19223,
											"end": 19405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19223,
											"end": 19405,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19411,
											"end": 19713,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 19411,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19551,
											"end": 19585,
											"name": "PUSH",
											"source": 10,
											"value": "6F6E6C792061646D696E7320616E64206F6E6C792046726967672D6973737565"
										},
										{
											"begin": 19547,
											"end": 19548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19539,
											"end": 19545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19535,
											"end": 19549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19528,
											"end": 19586,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19620,
											"end": 19654,
											"name": "PUSH",
											"source": 10,
											"value": "6420746F6B656E732063616E2062652061646465642074686520746F6B656E20"
										},
										{
											"begin": 19615,
											"end": 19617,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19607,
											"end": 19613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19596,
											"end": 19655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19689,
											"end": 19705,
											"name": "PUSH",
											"source": 10,
											"value": "746F207468697320726F75746572000000000000000000000000000000000000"
										},
										{
											"begin": 19684,
											"end": 19686,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19676,
											"end": 19682,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19672,
											"end": 19687,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19665,
											"end": 19706,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19411,
											"end": 19713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19411,
											"end": 19713,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19719,
											"end": 19896,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 19719,
											"end": 19896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19859,
											"end": 19888,
											"name": "PUSH",
											"source": 10,
											"value": "596F752063616E6E6F74206275792077697468203020746F6B656E0000000000"
										},
										{
											"begin": 19855,
											"end": 19856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19847,
											"end": 19853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19843,
											"end": 19857,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19836,
											"end": 19889,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19719,
											"end": 19896,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 19902,
											"end": 20075,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 19902,
											"end": 20075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20042,
											"end": 20067,
											"name": "PUSH",
											"source": 10,
											"value": "596F752063616E6E6F742073656C6C203020746F6B656E000000000000000000"
										},
										{
											"begin": 20038,
											"end": 20039,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20030,
											"end": 20036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20026,
											"end": 20040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20019,
											"end": 20068,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19902,
											"end": 20075,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20081,
											"end": 20247,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 20081,
											"end": 20247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20221,
											"end": 20239,
											"name": "PUSH",
											"source": 10,
											"value": "4E65656420612055494420746F6B656E00000000000000000000000000000000"
										},
										{
											"begin": 20217,
											"end": 20218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20209,
											"end": 20215,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20205,
											"end": 20219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20198,
											"end": 20240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20081,
											"end": 20247,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20253,
											"end": 20426,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20253,
											"end": 20426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20393,
											"end": 20418,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 20389,
											"end": 20390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20381,
											"end": 20387,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20377,
											"end": 20391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20370,
											"end": 20419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20253,
											"end": 20426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20253,
											"end": 20426,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20432,
											"end": 20599,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 20432,
											"end": 20599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20572,
											"end": 20591,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 20568,
											"end": 20569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20560,
											"end": 20566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20556,
											"end": 20570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20599,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20605,
											"end": 20839,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 20605,
											"end": 20839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20745,
											"end": 20779,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 20741,
											"end": 20742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20729,
											"end": 20743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20722,
											"end": 20780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20814,
											"end": 20831,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 20809,
											"end": 20811,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20801,
											"end": 20807,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20797,
											"end": 20812,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20790,
											"end": 20832,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20605,
											"end": 20839,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20605,
											"end": 20839,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20845,
											"end": 20967,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 20845,
											"end": 20967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 20936,
											"end": 20941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 20918,
											"end": 20942,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 20918,
											"end": 20942,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 20918,
											"end": 20942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20911,
											"end": 20916,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20908,
											"end": 20943,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20898,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 20898,
											"end": 20961,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20957,
											"end": 20958,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20954,
											"end": 20955,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20947,
											"end": 20959,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20898,
											"end": 20961,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 20898,
											"end": 20961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20845,
											"end": 20967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20845,
											"end": 20967,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 20973,
											"end": 21089,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 20973,
											"end": 21089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21043,
											"end": 21064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 21058,
											"end": 21063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21043,
											"end": 21064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 21043,
											"end": 21064,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21043,
											"end": 21064,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 21043,
											"end": 21064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21036,
											"end": 21041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21033,
											"end": 21065,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21083,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 21023,
											"end": 21083,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21079,
											"end": 21080,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21076,
											"end": 21077,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21069,
											"end": 21081,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21083,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 21023,
											"end": 21083,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20973,
											"end": 21089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20973,
											"end": 21089,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21095,
											"end": 21217,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 21095,
											"end": 21217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21168,
											"end": 21192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 21186,
											"end": 21191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21168,
											"end": 21192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 21168,
											"end": 21192,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21168,
											"end": 21192,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 21168,
											"end": 21192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21161,
											"end": 21166,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21158,
											"end": 21193,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21207,
											"end": 21208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21204,
											"end": 21205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21197,
											"end": 21209,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 21148,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21095,
											"end": 21217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21095,
											"end": 21217,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21223,
											"end": 21343,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 21223,
											"end": 21343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21295,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 21312,
											"end": 21317,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21295,
											"end": 21318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 21295,
											"end": 21318,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21295,
											"end": 21318,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 21295,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21293,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21285,
											"end": 21319,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21275,
											"end": 21337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 21275,
											"end": 21337,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21333,
											"end": 21334,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21330,
											"end": 21331,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21323,
											"end": 21335,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21275,
											"end": 21337,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 21275,
											"end": 21337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21343,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 21349,
											"end": 21471,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 21349,
											"end": 21471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21422,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 21440,
											"end": 21445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21422,
											"end": 21446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 21422,
											"end": 21446,
											"name": "JUMP",
											"source": 10,
											"value": "[in]"
										},
										{
											"begin": 21422,
											"end": 21446,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 21422,
											"end": 21446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21415,
											"end": 21420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21412,
											"end": 21447,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 21402,
											"end": 21465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 21402,
											"end": 21465,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21461,
											"end": 21462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21458,
											"end": 21459,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21451,
											"end": 21463,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21402,
											"end": 21465,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 21402,
											"end": 21465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21349,
											"end": 21471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21349,
											"end": 21471,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"add(address,address,address,uint256,uint256,address)": "4cbe36ce",
							"buy(address,uint256)": "cce7ec13",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"sell(address,uint256)": "6c197ff5",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenData(address)": "27e45c2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_multisig\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_friggTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SuccessfulExpiration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_friggTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"SuccessfulPurchase\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_outputTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uIdContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_issuancePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiryPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuanceTokenAddress\",\"type\":\"address\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friggTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friggTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputFriggTokenAmount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uIdContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"issuancePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuanceTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Frigg team\",\"details\":\"inherits from the OpenZepplin AccessControl\",\"kind\":\"dev\",\"methods\":{\"add(address,address,address,uint256,uint256,address)\":{\"details\":\"only allows DEFAULT_ADMIN_ROLE to add Frigg-issued tokens to this router\",\"params\":{\"_expiryPrice\":\"Price of token at expiry date\",\"_issuancePrice\":\"Price of token at issuance\",\"_issuanceTokenAddress\":\"Address of Accepted token to purchase Frigg-issued token \",\"_issuer\":\"Issuer address to receive issuance proceeds\",\"_outputTokenAddress\":\"Frigg-issued token address\",\"_uIdContract\":\"Whitelister contract address\"}},\"buy(address,uint256)\":{\"details\":\"initially users can only buy Frigg-issued asset backed tokens with USDC i.e. inputToken is USDC and outputToken is the ABTinputTokenAmount should be in the same number of decimals as issuanceTokenAddress implemented\",\"params\":{\"friggTokenAddress\":\"Frigg-issued token address\",\"inputTokenAmount\":\"amount of tokens spent to buy Frigg-issued token\"}},\"constructor\":{\"details\":\"set DEFAULT_ADMIN_ROLE to a multisig address controlled by FriggDEFAULT_ADMIN_ROLE is defined within OZ's AccessControl\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"sell(address,uint256)\":{\"details\":\"inputFriggTokenAmount should be in 18 decimals\",\"params\":{\"friggTokenAddress\":\"Frigg-issued token address\",\"inputFriggTokenAmount\":\"amount of Frigg tokens for sale i.e. inputToken is ABT and outputToken is USDC\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"A router contract for primary market activity for Frigg Asset-backed Tokens (ABT)\",\"version\":1},\"userdoc\":{\"events\":{\"SuccessfulPurchase(address,address,uint256)\":{\"notice\":\"allow micrsite front-end to listen to events and show recent primary market activity \"}},\"kind\":\"user\",\"methods\":{\"sell(address,uint256)\":{\"notice\":\"At token expiry, token holders sell back tokens to issuersToken holders redeem the value of token at expiry\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Router/primaryRouter.sol\":\"primaryRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Router/primaryRouter.sol\":{\"keccak256\":\"0x1be3adbf6c3d9ba35ee44611db6d9a476c22c23730bda8768ab989189b2a5839\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://057d7dc111fec5f1e40923ac050d9c8ed20b023a87ecf8352664d4f8b0c58db2\",\"dweb:/ipfs/QmcMSGEE7kcz24rwT3YRRKuKpk9Ta1cwbwMbBGvW2JUeWb\"]},\"contracts/Token/IFrigg.sol\":{\"keccak256\":\"0x180186914e27576e5f9be03775cf0bfbee50f9992a551a3cc3f9f6e109b56cad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730f0791ba3a690d94524f51e3c0d777e7aa18793230054a7de5ed0c7a69a9dd\",\"dweb:/ipfs/QmVasDfGw9VK9sWzqsuZCXfuqHNhpd5F3bw9aZWNMZyAyF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 920,
								"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
								"label": "tokenData",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(TokenData)931_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(TokenData)931_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct primaryRouter.TokenData)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenData)931_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenData)931_storage": {
								"encoding": "inplace",
								"label": "struct primaryRouter.TokenData",
								"members": [
									{
										"astId": 922,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "issuer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 924,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "uIdContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 926,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "issuancePrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 928,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "expiryPrice",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 930,
										"contract": "contracts/Router/primaryRouter.sol:primaryRouter",
										"label": "issuanceTokenAddress",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"SuccessfulPurchase(address,address,uint256)": {
								"notice": "allow micrsite front-end to listen to events and show recent primary market activity "
							}
						},
						"kind": "user",
						"methods": {
							"sell(address,uint256)": {
								"notice": "At token expiry, token holders sell back tokens to issuersToken holders redeem the value of token at expiry"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/Token/IFrigg.sol": {
				"IFrigg": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPrimaryMarketActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seeBondExpiryStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "termsURL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(address,uint256)": {
								"details": "for primaryRouter.sol to conduct primary sell logic at expiry"
							},
							"isPrimaryMarketActive()": {
								"details": "returns if primary market is opened."
							},
							"mint(address,uint256)": {
								"details": "for primaryRouter.sol to conduct primary buy logic at issuance"
							},
							"seeBondExpiryStatus()": {
								"details": "returns if the bond has expired and the issuer starts to conduct buyback."
							},
							"termsURL()": {
								"details": "a getter function for dApps or third parties to fetch the terms and conditions "
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address,uint256)": "9dc29fac",
							"isPrimaryMarketActive()": "2e873bac",
							"mint(address,uint256)": "40c10f19",
							"seeBondExpiryStatus()": "8058425b",
							"termsURL()": "b28025bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPrimaryMarketActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seeBondExpiryStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"termsURL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"details\":\"for primaryRouter.sol to conduct primary sell logic at expiry\"},\"isPrimaryMarketActive()\":{\"details\":\"returns if primary market is opened.\"},\"mint(address,uint256)\":{\"details\":\"for primaryRouter.sol to conduct primary buy logic at issuance\"},\"seeBondExpiryStatus()\":{\"details\":\"returns if the bond has expired and the issuer starts to conduct buyback.\"},\"termsURL()\":{\"details\":\"a getter function for dApps or third parties to fetch the terms and conditions \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token/IFrigg.sol\":\"IFrigg\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Token/IFrigg.sol\":{\"keccak256\":\"0x180186914e27576e5f9be03775cf0bfbee50f9992a551a3cc3f9f6e109b56cad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730f0791ba3a690d94524f51e3c0d777e7aa18793230054a7de5ed0c7a69a9dd\",\"dweb:/ipfs/QmVasDfGw9VK9sWzqsuZCXfuqHNhpd5F3bw9aZWNMZyAyF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							614
						],
						"ERC165": [
							864
						],
						"IAccessControl": [
							392
						],
						"IERC165": [
							876
						],
						"Strings": [
							840
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 393,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 615,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 841,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 865,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 614,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319,
								864,
								876,
								392,
								614
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 319,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										863
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$392",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$319_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 319,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										359
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 319,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															135
														],
														"referencedDeclaration": 135,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 319,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "3791:419:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "3801:403:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "3830:374:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 115,
																										"name": "account",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 97,
																										"src": "4017:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 114,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4009:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint160_$",
																										"typeString": "type(uint160)"
																									},
																									"typeName": {
																										"id": 113,
																										"name": "uint160",
																										"nodeType": "ElementaryTypeName",
																										"src": "4009:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 116,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4009:16:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								}
																							},
																							{
																								"hexValue": "3230",
																								"id": 117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4027:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								},
																								"value": "20"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint160",
																									"typeString": "uint160"
																								},
																								{
																									"typeIdentifier": "t_rational_20_by_1",
																									"typeString": "int_const 20"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 840,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$840_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 819,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:41:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4056:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 124,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4129:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 123,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4121:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 122,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4121:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 125,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4121:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 126,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4136:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 120,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 840,
																								"src": "4101:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$840_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 121,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 819,
																							"src": "4101:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4101:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:265:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:311:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:349:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 131,
															"nodeType": "ExpressionStatement",
															"src": "3844:349:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 319,
									"src": "3718:492:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										367
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4474:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 144,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4491:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 146,
														"indexExpression": {
															"id": 145,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4491:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4491:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 143,
												"id": 148,
												"nodeType": "Return",
												"src": "4484:29:0"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4216:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4400:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 140,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4447:8:0"
									},
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:14:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 319,
									"src": "4391:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4919:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 165,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4940:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 166,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4946:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 164,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "4929:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4929:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "4929:25:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4526:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 160,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4912:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 159,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4899:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4899:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 158,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4890:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4890:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4825:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4881:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4843:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4835:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4834:31:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4919:0:0"
									},
									"scope": 319,
									"src": "4816:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5345:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "5373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5355:26:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4967:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5338:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "5325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5316:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5316:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5250:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5307:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5345:0:0"
									},
									"scope": 319,
									"src": "5241:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "6002:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 200,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "6020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "6031:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6031:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6020:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6045:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6012:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "6012:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "6118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "6106:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6106:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5394:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5934:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5993:8:0"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5969:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5961:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:31:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:0"
									},
									"scope": 319,
									"src": "5925:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6892:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "6913:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 223,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 221,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "6902:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6902:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "6902:25:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "6145:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6833:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6852:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6844:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6843:31:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6892:0:0"
									},
									"scope": 319,
									"src": "6824:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "7132:174:0",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7150:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "7142:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 235,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"arguments": [
														{
															"id": 238,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7183:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 237,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "7170:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7170:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7142:46:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 241,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7198:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 243,
															"indexExpression": {
																"id": 242,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "7205:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7198:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7198:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "7223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7198:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "7198:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 250,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7270:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 251,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7289:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "7247:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7247:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "7242:57:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6940:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7068:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7082:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7104:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7096:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7081:33:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7132:0:0"
									},
									"scope": 319,
									"src": "7059:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "7542:165:0",
										"statements": [
											{
												"condition": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7556:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "7565:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 265,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7571:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 263,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7557:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7557:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "7552:149:0",
												"trueBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "7581:120:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 268,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7595:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 270,
																			"indexExpression": {
																				"id": 269,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7602:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7595:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7595:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 273,
																	"indexExpression": {
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7616:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7595:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7627:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7595:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "7595:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 278,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7662:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 279,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 280,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "7677:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7677:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 277,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "7650:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7650:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "EmitStatement",
															"src": "7645:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7312:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7483:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7494:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7516:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "7508:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:31:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7542:0:0"
									},
									"scope": 319,
									"src": "7474:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "7947:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 296,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7969:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 297,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7961:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 316,
												"nodeType": "IfStatement",
												"src": "7957:149:0",
												"trueBody": {
													"id": 315,
													"nodeType": "Block",
													"src": "7985:121:0",
													"statements": [
														{
															"expression": {
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 299,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7999:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 301,
																			"indexExpression": {
																				"id": 300,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 290,
																				"src": "8006:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7999:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7999:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 304,
																	"indexExpression": {
																		"id": 303,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8020:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7999:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8031:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7999:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "ExpressionStatement",
															"src": "7999:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 309,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8067:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 310,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8073:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 311,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "8082:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8082:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 308,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8055:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8055:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 314,
															"nodeType": "EmitStatement",
															"src": "8050:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "7713:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7887:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7907:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7899:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 289,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "7913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:31:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7947:0:0"
									},
									"scope": 319,
									"src": "7878:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "1806:6308:0",
							"usedErrors": []
						}
					],
					"src": "108:8007:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 331,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"id": 340,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 349,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 392,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 392,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 392,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 392,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 392,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							514
						],
						"IERC165": [
							876
						]
					},
					"id": 515,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 515,
							"sourceUnit": 877,
							"src": "135:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 397,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 876,
										"src": "372:7:2"
									},
									"id": 398,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "184:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 514,
							"linearizedBaseContracts": [
								514,
								876
							],
							"name": "IERC1155",
							"nameLocation": "360:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "386:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 411,
									"name": "TransferSingle",
									"nameLocation": "518:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "549:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "533:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "575:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "559:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "597:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "581:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "609:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "601:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "613:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:95:2"
									},
									"src": "512:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "634:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 426,
									"name": "TransferBatch",
									"nameLocation": "789:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "828:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "812:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "862:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "846:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "892:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "876:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "914:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "904:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 419,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "904:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 420,
													"nodeType": "ArrayTypeName",
													"src": "904:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "937:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "927:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 422,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 423,
													"nodeType": "ArrayTypeName",
													"src": "927:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:147:2"
									},
									"src": "783:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "956:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 435,
									"name": "ApprovalForAll",
									"nameLocation": "1114:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1145:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1129:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1154:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1185:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1180:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1180:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:66:2"
									},
									"src": "1108:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1201:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 442,
									"name": "URI",
									"nameLocation": "1555:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1566:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1559:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1559:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1589:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "1573:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:34:2"
									},
									"src": "1549:44:2"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "1599:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1786:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1804:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1796:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1821:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1813:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1795:29:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1848:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:2"
									},
									"scope": 514,
									"src": "1777:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1863:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2065:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2099:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2080:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 454,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2080:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 455,
													"nodeType": "ArrayTypeName",
													"src": "2080:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2128:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2109:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 457,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2109:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ArrayTypeName",
													"src": "2109:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:53:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2180:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 461,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2180:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 462,
													"nodeType": "ArrayTypeName",
													"src": "2180:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:18:2"
									},
									"scope": 514,
									"src": "2056:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2204:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2466:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2484:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2507:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2502:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2502:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:33:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:2"
									},
									"scope": 514,
									"src": "2457:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2532:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2681:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2706:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2698:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2723:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2715:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:35:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2756:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2756:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:6:2"
									},
									"scope": 514,
									"src": "2672:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2768:556:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3338:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3372:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3364:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3394:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3386:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3414:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3406:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3434:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3426:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3426:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3465:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3450:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3450:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3354:121:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3484:0:2"
									},
									"scope": 514,
									"src": "3329:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "3491:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3895:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3926:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3956:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3948:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3987:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3968:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 503,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 504,
													"nodeType": "ArrayTypeName",
													"src": "3968:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4000:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 506,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4000:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 507,
													"nodeType": "ArrayTypeName",
													"src": "4000:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4051:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4036:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4036:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3916:145:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4070:0:2"
									},
									"scope": 514,
									"src": "3886:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 515,
							"src": "350:3723:2",
							"usedErrors": []
						}
					],
					"src": "110:3964:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							592
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 517,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 526,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 535,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 592,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 592,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 592,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 592,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 592,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 592,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 593,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							614
						]
					},
					"id": 615,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 595,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 614,
							"linearizedBaseContracts": [
								614
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 600,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 599,
												"id": 602,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 614,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 609,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 608,
												"id": 611,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 614,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 615,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							840
						]
					},
					"id": 841,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 616,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 840,
							"linearizedBaseContracts": [
								840
							],
							"name": "Strings",
							"nameLocation": "169:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 620,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 840,
									"src": "183:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 618,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 623,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 840,
									"src": "247:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 621,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 622,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "463:632:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 631,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "665:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"nodeType": "IfStatement",
												"src": "661:51:5",
												"trueBody": {
													"id": 636,
													"nodeType": "Block",
													"src": "677:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 630,
															"id": 635,
															"nodeType": "Return",
															"src": "691:10:5"
														}
													]
												}
											},
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "721:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"id": 640,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 626,
													"src": "736:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "751:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 644,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:5"
											},
											{
												"body": {
													"id": 655,
													"nodeType": "Block",
													"src": "793:57:5",
													"statements": [
														{
															"expression": {
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:5",
																"subExpression": {
																	"id": 648,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "807:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "807:8:5"
														},
														{
															"expression": {
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 651,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "829:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "829:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 645,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "782:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 656,
												"nodeType": "WhileStatement",
												"src": "775:75:5"
											},
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "859:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 657,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "891:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 659,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:5"
											},
											{
												"body": {
													"id": 694,
													"nodeType": "Block",
													"src": "927:131:5",
													"statements": [
														{
															"expression": {
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 667,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "941:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 670,
															"nodeType": "ExpressionStatement",
															"src": "941:11:5"
														},
														{
															"expression": {
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 671,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "966:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 673,
																	"indexExpression": {
																		"id": 672,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "973:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 678,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 683,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 681,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 626,
																									"src": "1009:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 682,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 680,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 679,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 684,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 676,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 674,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 689,
															"nodeType": "ExpressionStatement",
															"src": "966:56:5"
														},
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "1036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 664,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "915:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 695,
												"nodeType": "WhileStatement",
												"src": "908:150:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "1081:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 696,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 630,
												"id": 700,
												"nodeType": "Return",
												"src": "1067:21:5"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "410:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:5"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:5"
									},
									"scope": 840,
									"src": "392:703:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "1274:255:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "1288:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "1284:54:5",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "1300:38:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 709,
															"id": 714,
															"nodeType": "Return",
															"src": "1314:13:5"
														}
													]
												}
											},
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "1347:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"id": 719,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 705,
													"src": "1362:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:5"
											},
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "1377:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"hexValue": "30",
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:5"
											},
											{
												"body": {
													"id": 735,
													"nodeType": "Block",
													"src": "1423:57:5",
													"statements": [
														{
															"expression": {
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:5",
																"subExpression": {
																	"id": 728,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "1437:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 730,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:5"
														},
														{
															"expression": {
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 731,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "1459:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 734,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "1412:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "WhileStatement",
												"src": "1405:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1508:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 739,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "1515:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															743,
															819,
															839
														],
														"referencedDeclaration": 819,
														"src": "1496:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 709,
												"id": 741,
												"nodeType": "Return",
												"src": "1489:33:5"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:5"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "1259:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 707,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:5"
									},
									"scope": 840,
									"src": "1200:329:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "1742:351:5",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "1752:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 753,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 758,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "1788:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 755,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:5"
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 764,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1809:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 766,
														"indexExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:5"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 770,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1834:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 772,
														"indexExpression": {
															"hexValue": "31",
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:5"
											},
											{
												"body": {
													"id": 804,
													"nodeType": "Block",
													"src": "1904:87:5",
													"statements": [
														{
															"expression": {
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 790,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "1918:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 792,
																	"indexExpression": {
																		"id": 791,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "1925:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 793,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "1930:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 797,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 794,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "1943:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 799,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:5"
														},
														{
															"expression": {
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "1969:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "1892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"initializationExpression": {
													"assignments": [
														777
													],
													"declarations": [
														{
															"constant": false,
															"id": 777,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 805,
															"src": "1864:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 776,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 783,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 779,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1880:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:5"
												},
												"loopExpression": {
													"expression": {
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:5",
														"subExpression": {
															"id": 787,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "1901:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 789,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "2008:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "2079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 813,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 752,
												"id": 817,
												"nodeType": "Return",
												"src": "2065:21:5"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1673:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1688:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:5"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1727:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 750,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:5"
									},
									"scope": 840,
									"src": "1652:441:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "2318:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 832,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "2363:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 830,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 828,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 835,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2371:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 827,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															743,
															819,
															839
														],
														"referencedDeclaration": 819,
														"src": "2335:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 826,
												"id": 837,
												"nodeType": "Return",
												"src": "2328:59:5"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "2266:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "2303:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 824,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:5"
									},
									"scope": 840,
									"src": "2245:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 841,
							"src": "161:2235:5",
							"usedErrors": []
						}
					],
					"src": "101:2296:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							864
						],
						"IERC165": [
							876
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 843,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 877,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 845,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 876,
										"src": "754:7:6"
									},
									"id": 846,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 844,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								876
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										875
									],
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 857,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$876_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$876_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 856,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$876",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 854,
												"id": 861,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 851,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 848,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 864,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 865,
							"src": "726:260:6",
							"usedErrors": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							876
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 869,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 876,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 877,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/Router/primaryRouter.sol": {
				"ast": {
					"absolutePath": "contracts/Router/primaryRouter.sol",
					"exportedSymbols": {
						"AccessControl": [
							319
						],
						"Context": [
							614
						],
						"ERC165": [
							864
						],
						"IAccessControl": [
							392
						],
						"IERC1155": [
							514
						],
						"IERC165": [
							876
						],
						"IERC20": [
							592
						],
						"IFrigg": [
							1202
						],
						"Strings": [
							840
						],
						"primaryRouter": [
							1165
						]
					},
					"id": 1166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "contracts/Token/IFrigg.sol",
							"file": "../Token/IFrigg.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1203,
							"src": "57:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 880,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 515,
							"src": "87:60:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 593,
							"src": "148:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 882,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 393,
							"src": "205:59:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 320,
							"src": "265:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "AccessControl",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "520:13:8"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "520:13:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "325:169:8",
								"text": "@title A router contract for primary market activity for Frigg Asset-backed Tokens (ABT)\n @author Frigg team\n @dev inherits from the OpenZepplin AccessControl"
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165,
								319,
								864,
								876,
								392,
								614
							],
							"name": "primaryRouter",
							"nameLocation": "503:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "793:58:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "814:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 894,
															"name": "_multisig",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "834:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "803:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "803:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "803:41:8"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "610:142:8",
										"text": "@dev set DEFAULT_ADMIN_ROLE to a multisig address controlled by Frigg\n @dev DEFAULT_ADMIN_ROLE is defined within OZ's AccessControl"
									},
									"id": 898,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_multisig",
												"nameLocation": "777:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "769:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:19:8"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:0:8"
									},
									"scope": 1165,
									"src": "757:94:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "857:97:8",
										"text": "@notice allow micrsite front-end to listen to events and show recent primary market activity "
									},
									"id": 907,
									"name": "SuccessfulPurchase",
									"nameLocation": "965:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "1001:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "985:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "_friggTokenAddress",
												"nameLocation": "1017:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1009:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1045:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1037:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "984:69:8"
									},
									"src": "959:95:8"
								},
								{
									"anonymous": false,
									"id": 915,
									"name": "SuccessfulExpiration",
									"nameLocation": "1065:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "_seller",
												"nameLocation": "1103:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1087:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"indexed": false,
												"mutability": "mutable",
												"name": "_friggTokenAddress",
												"nameLocation": "1120:18:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1112:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1148:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "1140:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1140:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:70:8"
									},
									"src": "1059:98:8"
								},
								{
									"constant": false,
									"functionSelector": "27e45c2c",
									"id": 920,
									"mutability": "mutable",
									"name": "tokenData",
									"nameLocation": "1261:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1224:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
										"typeString": "mapping(address => struct primaryRouter.TokenData)"
									},
									"typeName": {
										"id": 919,
										"keyType": {
											"id": 916,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1232:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1224:29:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
											"typeString": "mapping(address => struct primaryRouter.TokenData)"
										},
										"valueType": {
											"id": 918,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 917,
												"name": "TokenData",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 931,
												"src": "1243:9:8"
											},
											"referencedDeclaration": 931,
											"src": "1243:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenData_$931_storage_ptr",
												"typeString": "struct primaryRouter.TokenData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "primaryRouter.TokenData",
									"id": 931,
									"members": [
										{
											"constant": false,
											"id": 922,
											"mutability": "mutable",
											"name": "issuer",
											"nameLocation": "1397:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "1389:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 921,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1389:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 924,
											"mutability": "mutable",
											"name": "uIdContract",
											"nameLocation": "1451:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "1443:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 923,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1443:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 926,
											"mutability": "mutable",
											"name": "issuancePrice",
											"nameLocation": "1538:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "1530:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 925,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1530:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 928,
											"mutability": "mutable",
											"name": "expiryPrice",
											"nameLocation": "1633:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "1625:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 927,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1625:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 930,
											"mutability": "mutable",
											"name": "issuanceTokenAddress",
											"nameLocation": "1740:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 931,
											"src": "1732:28:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 929,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1732:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenData",
									"nameLocation": "1368:9:8",
									"nodeType": "StructDefinition",
									"scope": 1165,
									"src": "1361:467:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "2606:489:8",
										"statements": [
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "outputToken",
														"nameLocation": "2631:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "2616:26:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAccessControl_$392",
															"typeString": "contract IAccessControl"
														},
														"typeName": {
															"id": 951,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 950,
																"name": "IAccessControl",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 392,
																"src": "2616:14:8"
															},
															"referencedDeclaration": 392,
															"src": "2616:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAccessControl_$392",
																"typeString": "contract IAccessControl"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "_outputTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "2660:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 953,
														"name": "IAccessControl",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "2645:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IAccessControl_$392_$",
															"typeString": "type(contract IAccessControl)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAccessControl_$392",
														"typeString": "contract IAccessControl"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2616:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 960,
																	"name": "DEFAULT_ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2844:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 961,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2864:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2864:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 958,
																	"name": "outputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "2824:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAccessControl_$392",
																		"typeString": "contract IAccessControl"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "hasRole",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 359,
																"src": "2824:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view external returns (bool)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2824:51:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e7320616e64206f6e6c792046726967672d69737375656420746f6b656e732063616e2062652061646465642074686520746f6b656e20746f207468697320726f75746572",
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2877:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341",
																"typeString": "literal_string \"only admins and only Frigg-issued tokens can be added the token to this router\""
															},
															"value": "only admins and only Frigg-issued tokens can be added the token to this router"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3452a5e2751eedd02335f0e771ff5318cf95c8d542ed0a4554148ee1b18f3341",
																"typeString": "literal_string \"only admins and only Frigg-issued tokens can be added the token to this router\""
															}
														],
														"id": 957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2816:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2816:142:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "2816:142:8"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 967,
															"name": "tokenData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "2968:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
															}
														},
														"id": 969,
														"indexExpression": {
															"id": 968,
															"name": "_outputTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "2978:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2968:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$931_storage",
															"typeString": "struct primaryRouter.TokenData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 971,
																"name": "_issuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "3009:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 972,
																"name": "_uIdContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "3018:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 973,
																"name": "_issuancePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "3032:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 974,
																"name": "_expiryPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3048:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 975,
																"name": "_issuanceTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3062:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 970,
															"name": "TokenData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "2999:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenData_$931_storage_ptr_$",
																"typeString": "type(struct primaryRouter.TokenData storage pointer)"
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2999:85:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$931_memory_ptr",
															"typeString": "struct primaryRouter.TokenData memory"
														}
													},
													"src": "2968:116:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenData_$931_storage",
														"typeString": "struct primaryRouter.TokenData storage ref"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "2968:116:8"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "1834:486:8",
										"text": " @dev only allows DEFAULT_ADMIN_ROLE to add Frigg-issued tokens to this router\n @param _outputTokenAddress Frigg-issued token address\n @param _uIdContract Whitelister contract address\n @param _issuer Issuer address to receive issuance proceeds\n @param _issuancePrice Price of token at issuance\n @param _expiryPrice Price of token at expiry date\n @param _issuanceTokenAddress Address of Accepted token to purchase Frigg-issued token "
									},
									"functionSelector": "4cbe36ce",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 947,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2577:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyRole",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "2568:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2568:28:8"
										}
									],
									"name": "add",
									"nameLocation": "2335:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_outputTokenAddress",
												"nameLocation": "2356:19:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2348:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_uIdContract",
												"nameLocation": "2393:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2385:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "2423:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2415:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_issuancePrice",
												"nameLocation": "2448:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2440:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_expiryPrice",
												"nameLocation": "2480:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2472:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_issuanceTokenAddress",
												"nameLocation": "2510:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "2502:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:203:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2606:0:8"
									},
									"scope": 1165,
									"src": "2326:769:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "3643:1110:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "inputTokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "3665:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3665:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f74206275792077697468203020746f6b656e",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3687:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101",
																"typeString": "literal_string \"You cannot buy with 0 token\""
															},
															"value": "You cannot buy with 0 token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65b50a48d33ff5e3028f4d9a1a3f7d5dc9b01ae064448b579771816163b0f101",
																"typeString": "literal_string \"You cannot buy with 0 token\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3657:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "3657:60:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1003,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3845:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3845:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3856:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 997,
																						"name": "tokenData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "3793:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																							"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																						}
																					},
																					"id": 999,
																					"indexExpression": {
																						"id": 998,
																						"name": "friggTokenAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 983,
																						"src": "3803:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3793:28:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenData_$931_storage",
																						"typeString": "struct primaryRouter.TokenData storage ref"
																					}
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "uIdContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 924,
																				"src": "3793:40:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 996,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "3784:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$514_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		},
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3784:50:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$514",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "3784:60:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3784:74:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3861:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3784:78:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420612055494420746f6b656e",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3864:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
																"typeString": "literal_string \"Need a UID token\""
															},
															"value": "Need a UID token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
																"typeString": "literal_string \"Need a UID token\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3776:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "3776:107:8"
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "inputToken",
														"nameLocation": "3929:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "3922:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$592",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1013,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1012,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "3922:6:8"
															},
															"referencedDeclaration": 592,
															"src": "3922:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$592",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1016,
																	"name": "tokenData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "3949:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																		"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"id": 1017,
																	"name": "friggTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "3959:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3949:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenData_$931_storage",
																	"typeString": "struct primaryRouter.TokenData storage ref"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "issuanceTokenAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "3949:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1015,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "3942:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$592_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3942:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$592",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3922:77:8"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "outputToken",
														"nameLocation": "4020:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "4013:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFrigg_$1202",
															"typeString": "contract IFrigg"
														},
														"typeName": {
															"id": 1023,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1022,
																"name": "IFrigg",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1202,
																"src": "4013:6:8"
															},
															"referencedDeclaration": 1202,
															"src": "4013:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFrigg_$1202",
																"typeString": "contract IFrigg"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"id": 1026,
															"name": "friggTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4041:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1025,
														"name": "IFrigg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4034:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFrigg_$1202_$",
															"typeString": "type(contract IFrigg)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4034:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFrigg_$1202",
														"typeString": "contract IFrigg"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4013:46:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1030,
																	"name": "outputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "4132:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IFrigg_$1202",
																		"typeString": "contract IFrigg"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isPrimaryMarketActive",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1173,
																"src": "4132:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																	"typeString": "function () view external returns (bool)"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4132:35:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4124:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "4124:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1038,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4224:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4224:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1040,
																	"name": "tokenData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "4252:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																		"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																	}
																},
																"id": 1042,
																"indexExpression": {
																	"id": 1041,
																	"name": "friggTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "4262:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4252:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenData_$931_storage",
																	"typeString": "struct primaryRouter.TokenData storage ref"
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "issuer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "4252:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "inputTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "4305:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1035,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "4183:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$592",
																"typeString": "contract IERC20"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "4183:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4183:156:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "4183:156:8"
											},
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "outputTokenAmount",
														"nameLocation": "4500:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "4492:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1047,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4492:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1049,
														"name": "inputTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "4520:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1050,
																"name": "tokenData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "4539:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																	"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																}
															},
															"id": 1052,
															"indexExpression": {
																"id": 1051,
																"name": "friggTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "4549:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4539:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$931_storage",
																"typeString": "struct primaryRouter.TokenData storage ref"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "issuancePrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "4539:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4520:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4492:89:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4613:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4613:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "outputTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4625:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1056,
															"name": "outputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "4596:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFrigg_$1202",
																"typeString": "contract IFrigg"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "4596:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4596:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "4596:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4694:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4694:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "friggTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "4706:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1068,
															"name": "inputTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "4725:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "SuccessfulPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4675:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4675:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "EmitStatement",
												"src": "4670:72:8"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "3170:392:8",
										"text": " @param friggTokenAddress Frigg-issued token address\n @param inputTokenAmount amount of tokens spent to buy Frigg-issued token\n @dev initially users can only buy Frigg-issued asset backed tokens with USDC\n i.e. inputToken is USDC and outputToken is the ABT\n @dev inputTokenAmount should be in the same number of decimals as issuanceTokenAddress implemented"
									},
									"functionSelector": "cce7ec13",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "3577:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "friggTokenAddress",
												"nameLocation": "3589:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3581:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "inputTokenAmount",
												"nameLocation": "3616:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "3608:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:53:8"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3643:0:8"
									},
									"scope": 1165,
									"src": "3568:1185:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "5236:1179:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "inputFriggTokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "5258:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5282:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5258:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e6e6f742073656c6c203020746f6b656e",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5285:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b",
																"typeString": "literal_string \"You cannot sell 0 token\""
															},
															"value": "You cannot sell 0 token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e2fe3a534ea2affcfd6835c7a524f0314a36ff167695a8550ae6431d6d24d3b",
																"typeString": "literal_string \"You cannot sell 0 token\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5250:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5250:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "5250:61:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1095,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5394:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5394:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5405:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"baseExpression": {
																						"id": 1089,
																						"name": "tokenData",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 920,
																						"src": "5342:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																							"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																						}
																					},
																					"id": 1091,
																					"indexExpression": {
																						"id": 1090,
																						"name": "friggTokenAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1075,
																						"src": "5352:17:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5342:28:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenData_$931_storage",
																						"typeString": "struct primaryRouter.TokenData storage ref"
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "uIdContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 924,
																				"src": "5342:40:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1088,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "5333:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$514_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5333:50:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$514",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "5333:60:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5333:74:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5410:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5333:78:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420612055494420746f6b656e",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5413:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
																"typeString": "literal_string \"Need a UID token\""
															},
															"value": "Need a UID token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad547a81576933aa387770738c584b6dbebeda7466a5da57a88af3f21b1a23d9",
																"typeString": "literal_string \"Need a UID token\""
															}
														],
														"id": 1087,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5325:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:107:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "5325:107:8"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "inputToken",
														"nameLocation": "5454:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "5447:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFrigg_$1202",
															"typeString": "contract IFrigg"
														},
														"typeName": {
															"id": 1105,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1104,
																"name": "IFrigg",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1202,
																"src": "5447:6:8"
															},
															"referencedDeclaration": 1202,
															"src": "5447:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFrigg_$1202",
																"typeString": "contract IFrigg"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1108,
															"name": "friggTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "5474:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1107,
														"name": "IFrigg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "5467:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFrigg_$1202_$",
															"typeString": "type(contract IFrigg)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5467:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFrigg_$1202",
														"typeString": "contract IFrigg"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5447:45:8"
											},
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "outputToken",
														"nameLocation": "5513:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "5506:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$592",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1112,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1111,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 592,
																"src": "5506:6:8"
															},
															"referencedDeclaration": 592,
															"src": "5506:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$592",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1115,
																	"name": "tokenData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "5534:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																		"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																	}
																},
																"id": 1117,
																"indexExpression": {
																	"id": 1116,
																	"name": "friggTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "5544:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5534:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenData_$931_storage",
																	"typeString": "struct primaryRouter.TokenData storage ref"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "issuanceTokenAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 930,
															"src": "5534:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1114,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "5527:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$592_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5527:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$592",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5506:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1122,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "5607:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IFrigg_$1202",
																		"typeString": "contract IFrigg"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "seeBondExpiryStatus",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1179,
																"src": "5607:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																	"typeString": "function () view external returns (bool)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5607:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5599:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5599:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "5599:41:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1130,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5688:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5688:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "inputFriggTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "5716:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1127,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "5655:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFrigg_$1202",
																"typeString": "contract IFrigg"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "5655:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5655:100:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "5655:100:8"
											},
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "outputTokenAmount",
														"nameLocation": "5925:17:8",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "5917:25:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5917:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "inputFriggTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "5945:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1138,
																"name": "tokenData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "5969:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																	"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																}
															},
															"id": 1140,
															"indexExpression": {
																"id": 1139,
																"name": "friggTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "5979:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5969:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$931_storage",
																"typeString": "struct primaryRouter.TokenData storage ref"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "expiryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 928,
														"src": "5969:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5945:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5917:92:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1147,
																	"name": "tokenData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "6181:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$931_storage_$",
																		"typeString": "mapping(address => struct primaryRouter.TokenData storage ref)"
																	}
																},
																"id": 1149,
																"indexExpression": {
																	"id": 1148,
																	"name": "friggTokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "6191:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6181:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenData_$931_storage",
																	"typeString": "struct primaryRouter.TokenData storage ref"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "issuer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 922,
															"src": "6181:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6235:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6235:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1153,
															"name": "outputTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "6263:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1144,
															"name": "outputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "6139:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$592",
																"typeString": "contract IERC20"
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 591,
														"src": "6139:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6139:159:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "6139:159:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1157,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6351:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6351:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "friggTokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "6363:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "inputFriggTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "6382:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "SuccessfulExpiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "6330:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "6325:79:8"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "4759:390:8",
										"text": " @notice At token expiry, token holders sell back tokens to issuers\n @notice Token holders redeem the value of token at expiry\n @param friggTokenAddress Frigg-issued token address\n @param inputFriggTokenAmount amount of Frigg tokens for sale\n i.e. inputToken is ABT and outputToken is USDC\n @dev inputFriggTokenAmount should be in 18 decimals"
									},
									"functionSelector": "6c197ff5",
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "5164:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "friggTokenAddress",
												"nameLocation": "5177:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "5169:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "inputFriggTokenAmount",
												"nameLocation": "5204:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "5196:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5168:58:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5236:0:8"
									},
									"scope": 1165,
									"src": "5155:1260:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1166,
							"src": "494:5923:8",
							"usedErrors": []
						}
					],
					"src": "32:6386:8"
				},
				"id": 8
			},
			"contracts/Token/IFrigg.sol": {
				"ast": {
					"absolutePath": "contracts/Token/IFrigg.sol",
					"exportedSymbols": {
						"IFrigg": [
							1202
						]
					},
					"id": 1203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1202,
							"linearizedBaseContracts": [
								1202
							],
							"name": "IFrigg",
							"nameLocation": "133:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "146:58:9",
										"text": " @dev returns if primary market is opened."
									},
									"functionSelector": "2e873bac",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPrimaryMarketActive",
									"nameLocation": "218:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:2:9"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "265:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:6:9"
									},
									"scope": 1202,
									"src": "209:62:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "277:95:9",
										"text": " @dev returns if the bond has expired and the issuer starts to conduct buyback."
									},
									"functionSelector": "8058425b",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "seeBondExpiryStatus",
									"nameLocation": "386:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:9"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "431:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:6:9"
									},
									"scope": 1202,
									"src": "377:60:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "443:86:9",
										"text": " @dev for primaryRouter.sol to conduct primary buy logic at issuance"
									},
									"functionSelector": "40c10f19",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "544:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "557:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "549:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "574:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "566:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:33:9"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:9"
									},
									"scope": 1202,
									"src": "535:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "597:85:9",
										"text": " @dev for primaryRouter.sol to conduct primary sell logic at expiry"
									},
									"functionSelector": "9dc29fac",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "697:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "710:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "702:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "719:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:33:9"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "743:0:9"
									},
									"scope": 1202,
									"src": "688:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "750:103:9",
										"text": " @dev a getter function for dApps or third parties to fetch the terms and conditions "
									},
									"functionSelector": "b28025bf",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "termsURL",
									"nameLocation": "867:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:2:9"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "901:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1198,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "901:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "900:15:9"
									},
									"scope": 1202,
									"src": "858:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1203,
							"src": "123:795:9",
							"usedErrors": []
						}
					],
					"src": "32:887:9"
				},
				"id": 9
			}
		}
	}
}